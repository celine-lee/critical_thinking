[
    [
        "nums = [1, 1, 3, 1, 3, 1]\noutput = []\nfor n in nums:\n    output.append((nums.count(n), n))\noutput.sort(reverse=True)\nf = output",
        "[(4, 1), (4, 1), (4, 1), (4, 1), (2, 3), (2, 3)]",
        {},
        {
            "(47, 51)": "list",
            "(121, 127)": "list",
            "(91, 97)": "list",
            "(57, 63)": "list",
            "(87, 88)": "int",
            "(83, 84)": "int",
            "(72, 76)": "list"
        }
    ],
    [
        "a, b, c = (1, ), (1, ), (1, 2)\nresult = {}\nfor d in a, b, c:\n    result.update(dict.fromkeys(d))\nf = result",
        "{1: None, 2: None}",
        {},
        {
            "(101, 107)": "dict",
            "(52, 53)": "tuple",
            "(55, 56)": "tuple",
            "(58, 59)": "tuple",
            "(65, 71)": "dict",
            "(93, 94)": "tuple",
            "(79, 83)": "type"
        }
    ],
    [
        "text = 'hbtofdeiequ'\nnew_text = list(text)\nfor i in '+':\n    if i in new_text:\n        new_text.remove(i)\nf = ''.join(new_text)",
        "'hbtofdeiequ'",
        {},
        {
            "(32, 36)": "type",
            "(37, 41)": "str",
            "(118, 126)": "list"
        }
    ],
    [
        "text, value = 'bcksrut', 'q'\ntext_list = list(text)\ntext_list.append(value)\nf = ''.join(text_list)",
        "'bcksrutq'",
        {},
        {
            "(41, 45)": "type",
            "(46, 50)": "str",
            "(69, 74)": "str",
            "(88, 97)": "list",
            "(52, 61)": "list"
        }
    ],
    [
        "array = [' ', '  ', '    ', '   ']\ns = ' '\ns += ''.join(array)\nf = s",
        "'           '",
        {},
        {
            "(67, 68)": "str",
            "(56, 61)": "list"
        }
    ],
    [
        "text, lower, upper = 'DSUWeqExTQdCMGpqur', 'a', 'x'\ncount = 0\nnew_text = list()\nfor char in text:\n    char = lower if char.isdecimal() else upper\n    if char in ['p', 'C']:\n        count += 1\n    new_text.append(char)\nf = count, ''.join(new_text)",
        "(0, 'xxxxxxxxxxxxxxxxxx')",
        {},
        {
            "(92, 96)": "str",
            "(73, 77)": "type",
            "(222, 227)": "int",
            "(109, 114)": "str",
            "(140, 145)": "str",
            "(212, 216)": "str",
            "(237, 245)": "list",
            "(196, 204)": "list",
            "(118, 122)": "str"
        }
    ],
    [
        "dic = {'11': 52, '65': 34, 'a': 12, '4': 52, '74': 31}\nfor k,v in sorted(dic.items(), key=lambda x: len(str(x)))[:-1]:\n    dic.pop(k)\nf = list(dic.items())",
        "[('74', 31)]",
        {},
        {
            "(138, 142)": "type",
            "(66, 72)": "builtin_function_or_method",
            "(131, 132)": "str",
            "(123, 126)": "dict",
            "(143, 146)": "dict",
            "(73, 76)": "dict",
            "(100, 103)": "builtin_function_or_method",
            "(104, 107)": "type"
        }
    ],
    [
        "list = []\noriginal = list[:]\nwhile len(list) > 1:\n    list.pop(len(list) - 1)\n    for i in range(len(list)):\n        list.pop(i)\nlist = original[:]\nif list:\n    list.pop(0)\nf = list",
        "[]",
        {},
        {
            "(177, 181)": "list",
            "(21, 25)": "list",
            "(136, 144)": "list"
        }
    ],
    [
        "string, encryption = 'UppEr', 0\nif encryption == 0:\n    f = string\nelse:\n    f = string.upper().encode('rot13')",
        "'UppEr'",
        {
            "(35, 50)": "True\n"
        },
        {
            "(35, 45)": "int",
            "(60, 66)": "str"
        }
    ],
    [
        "t = '#284376598'\nfor c in t:\n    if not c.isnumeric():\n        f = False\nf = True",
        "False",
        {},
        {
            "(26, 27)": "str",
            "(40, 41)": "str"
        }
    ],
    [
        "text = ''\nnew_text = ''\nfor ch in text.lower().strip():\n    if ch.isnumeric() or ch in '\u00c4\u00e4\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc':\n        new_text += ch\nf = new_text",
        "''",
        {},
        {
            "(126, 134)": "str"
        }
    ],
    [
        "a, b = {}, {'foo': 'bar'}\nfor key, value in b.items():\n    if key not in a:\n        a[key] = [value]\n    else:\n        a[key].append(value)\nf = a",
        "{'foo': ['bar']}",
        {},
        {
            "(144, 145)": "dict",
            "(44, 45)": "dict",
            "(62, 65)": "str",
            "(73, 74)": "dict",
            "(84, 85)": "dict",
            "(86, 89)": "str",
            "(94, 99)": "str"
        }
    ],
    [
        "s, x = 'If you want to live a happy life! Daniel', 'Daniel'\ncount = 0\nwhile s[:len(x)] == x and count < len(s)-len(x):\n    s = s[len(x):]\n    count += len(x)\nf = s",
        "'If you want to live a happy life! Daniel'",
        {},
        {
            "(162, 163)": "str"
        }
    ],
    [
        "names = ['sharron', 'Savannah', 'Mike Cherokee']\ncount = len(names)\nnumberOfNames = 0\nfor i in names:\n    if i.isalpha():\n        numberOfNames += 1\nf = numberOfNames",
        "2",
        {},
        {
            "(95, 100)": "list",
            "(153, 166)": "int",
            "(57, 60)": "builtin_function_or_method",
            "(61, 66)": "list",
            "(109, 110)": "str"
        }
    ],
    [
        "s = '   OOP   '\narr = list(s.strip())\narr.reverse()\nf = ''.join(arr)",
        "'POO'",
        {},
        {
            "(22, 26)": "type",
            "(64, 67)": "list",
            "(38, 41)": "list",
            "(27, 28)": "str"
        }
    ],
    [
        "text, wrong, right = \"zn kgd jw lnt\", \"h\", \"u\"\nnew_text = text.replace(wrong, right)\nf = new_text.upper()",
        "'ZN KGD JW LNT'",
        {},
        {
            "(71, 76)": "str",
            "(78, 83)": "str",
            "(58, 62)": "str",
            "(89, 97)": "str"
        }
    ],
    [
        "text, suffix = 'zejrohaj', 'owc'\nif text.endswith(suffix):\n    f = text[:-len(suffix)]\nf = text",
        "'zejrohaj'",
        {},
        {
            "(91, 95)": "str"
        }
    ],
    [
        "text = \"There are, no, commas, in this text\"\nf = text.find(\",\")",
        "9",
        {},
        {
            "(49, 53)": "str"
        }
    ],
    [
        "array, elem = [5, 4, 3, 2, 1, 0], 3\nk = 0\nl = array.copy()\nfor i in l:\n    if i > elem:\n        array.insert(k, elem)\n        break\n    k += 1\nf = array",
        "[3, 5, 4, 3, 2, 1, 0]",
        {},
        {
            "(68, 69)": "list",
            "(147, 152)": "list",
            "(46, 51)": "list",
            "(78, 79)": "int",
            "(82, 86)": "int",
            "(109, 110)": "int",
            "(112, 116)": "int",
            "(96, 101)": "list"
        }
    ],
    [
        "x, y = \"\", \"sdasdnakjsda80\"\ntmp = ''.join(['0' if c == '9' else '9' for c in y[::-1]])\nif (x.isnumeric() and tmp.isnumeric()):\n    f = x + tmp\nelse:\n    f = x",
        "''",
        {},
        {
            "(157, 158)": "str",
            "(77, 78)": "str"
        }
    ],
    [
        "text = 'was,'\nresult = ''\nfor i in range(len(text)-1, -1, -1):\n    result += text[i]\nf = result",
        "',saw'",
        {},
        {
            "(89, 95)": "str",
            "(35, 40)": "type",
            "(77, 81)": "str",
            "(82, 83)": "int",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str"
        }
    ],
    [
        "array = [1, 1, 2, 2]\nn = array.pop()\narray.extend([n, n])\nf = array",
        "[1, 1, 2, 2, 2]",
        {},
        {
            "(62, 67)": "list",
            "(25, 30)": "list",
            "(37, 42)": "list",
            "(51, 52)": "int",
            "(54, 55)": "int"
        }
    ],
    [
        "a = 000\nif a == 0:\n    f = [0]\nresult = []\nwhile a > 0:\n    result.append(a%10)\n    a = a//10\nresult.reverse()\nf = int(''.join(str(i) for i in result))",
        "[0]",
        {
            "(11, 17)": "True\n"
        },
        {
            "(11, 12)": "int",
            "(94, 100)": "list"
        }
    ],
    [
        "text, chars = 'new-medium-performing-application - XQuery 2.2', '0123456789-'\nif chars:\n    text = text.rstrip(chars)\nelse:\n    text = text.rstrip(' ')\nif text == '':\n    f = '-'\nf = text",
        "'new-medium-performing-application - XQuery 2.'",
        {
            "(81, 86)": "True\n"
        },
        {
            "(81, 86)": "str",
            "(183, 187)": "str",
            "(111, 116)": "str",
            "(99, 103)": "str"
        }
    ],
    [
        "nums, i = [35, 45, 3, 61, 39, 27, 47], 0\nnums.pop(i)\nf = nums",
        "[45, 3, 61, 39, 27, 47]",
        {},
        {
            "(57, 61)": "list",
            "(50, 51)": "int",
            "(41, 45)": "list"
        }
    ],
    [
        "d = {\"l\": 1, \"t\": 2, \"x:\": 3}\nd = d.copy()\nd.popitem()\nf = d",
        "{'l': 1, 't': 2}",
        {},
        {
            "(59, 60)": "dict",
            "(34, 35)": "dict",
            "(43, 44)": "dict"
        }
    ],
    [
        "items, target = \"qy. dg. rnvprt rse.. irtwv tx..\", \"wtwdoacb\"\nfor i in items.split():\n    if i in target:\n        f = items.index(i)+1\n    if i.index('.') == len(i)-1 or i.index('.') == 0:\n        f = 'error'\nf = '.'",
        "'error'",
        {},
        {
            "(71, 76)": "str",
            "(142, 143)": "str",
            "(158, 161)": "builtin_function_or_method",
            "(162, 163)": "str",
            "(170, 171)": "str"
        }
    ],
    [
        "w = 'flak'\nls = list(w)\nomw = ''\nwhile len(ls) > 0:\n    omw += ls.pop(0)\n    if len(ls) * 2 > len(w):\n        f = w[len(ls):] == omw\nf = False",
        "False",
        {},
        {
            "(16, 20)": "type",
            "(21, 22)": "str",
            "(39, 42)": "builtin_function_or_method",
            "(43, 45)": "list",
            "(63, 65)": "list",
            "(94, 97)": "builtin_function_or_method",
            "(98, 99)": "str",
            "(129, 132)": "str",
            "(80, 83)": "builtin_function_or_method",
            "(84, 86)": "list",
            "(114, 115)": "str",
            "(116, 119)": "builtin_function_or_method",
            "(120, 122)": "list"
        }
    ],
    [
        "mylist = [5, 8]\nrevl = mylist[:]\nrevl.reverse()\nmylist.sort(reverse=True)\nf = mylist == revl",
        "True",
        {},
        {
            "(23, 29)": "list",
            "(78, 84)": "list",
            "(88, 92)": "list",
            "(33, 37)": "list",
            "(48, 54)": "list"
        }
    ],
    [
        "text = '-123   \\t+314'\nnums = list(filter(str.isnumeric, text))\nassert len(nums) > 0\nf = ''.join(nums)",
        "'123314'",
        {},
        {
            "(30, 34)": "type",
            "(97, 101)": "list",
            "(35, 41)": "type",
            "(57, 61)": "str",
            "(71, 74)": "builtin_function_or_method",
            "(75, 79)": "list",
            "(42, 45)": "type"
        }
    ],
    [
        "array = [\"a\", \"b\", \"c\"]\nresult = []\nfor elem in array:\n    if elem.isascii() or (isinstance(elem, int) and not str(abs(elem)).isascii()):\n        result.append(elem)\nf = result",
        "['a', 'b', 'c']",
        {},
        {
            "(48, 53)": "list",
            "(170, 176)": "list",
            "(160, 164)": "str",
            "(62, 66)": "str",
            "(81, 91)": "builtin_function_or_method",
            "(92, 96)": "str",
            "(98, 101)": "type",
            "(146, 152)": "list",
            "(111, 114)": "type",
            "(115, 118)": "builtin_function_or_method",
            "(119, 123)": "str"
        }
    ],
    [
        "string = 'PoIOarTvpoead'\nupper = 0\nfor c in string:\n    if c.isupper():\n        upper += 1\nf = upper * (2,1)[upper % 2]",
        "8",
        {},
        {
            "(44, 50)": "str",
            "(95, 100)": "int",
            "(59, 60)": "str",
            "(109, 114)": "int"
        }
    ],
    [
        "s, sep = 'volume', 'l'\nreverse = ['*' + e for e in s.split(sep)]\nf = ';'.join(reversed(reverse))",
        "'*ume;*vo'",
        {},
        {
            "(78, 86)": "type",
            "(87, 94)": "list",
            "(59, 62)": "str",
            "(51, 52)": "str"
        }
    ],
    [
        "lists = [5, 2, 7, 2, 3, 5]\ndic = {}\nfor n in lists:\n    if n in dic:\n        dic[n].append(lists.pop(lists.index(n)))\n    else:\n        dic[n] = lists[:lists.index(n) + 1]\nf = str(dic).replace(' ', '')",
        "'{5:[5,5],2:[5,2,2],7:[5,2,7]}'",
        {},
        {
            "(45, 50)": "list",
            "(136, 139)": "dict",
            "(140, 141)": "int",
            "(145, 150)": "list",
            "(176, 179)": "type",
            "(180, 183)": "dict",
            "(164, 165)": "int",
            "(152, 157)": "list"
        }
    ],
    [
        "nums, odd1, odd2 = [1, 2, 3, 7, 7, 6, 8, 4, 1, 2, 3, 5, 1, 3, 21, 1, 3], 3, 1\nwhile odd1 in nums:\n    nums.remove(odd1)\nwhile odd2 in nums:\n    nums.remove(odd2)\nf = nums",
        "[2, 7, 7, 6, 8, 4, 2, 5, 21]",
        {},
        {
            "(166, 170)": "list",
            "(84, 88)": "int",
            "(92, 96)": "list",
            "(126, 130)": "int",
            "(134, 138)": "list",
            "(114, 118)": "int",
            "(156, 160)": "int",
            "(102, 106)": "list",
            "(144, 148)": "list"
        }
    ],
    [
        "pattern, items = \" B \", [\" bBb \", \" BaB \", \" bB\", \" bBbB \", \" bbb\"]\nresult = []\nfor text in items:\n    pos = text.rfind(pattern)\n    if pos >= 0:\n        result.append(pos)\n\nf = result",
        "[]",
        {},
        {
            "(92, 97)": "list",
            "(178, 184)": "list",
            "(120, 127)": "str",
            "(109, 113)": "str"
        }
    ],
    [
        "text, chars = 'ha', ''\nf = text.rstrip(chars) if text else text",
        "'ha'",
        {},
        {
            "(49, 53)": "str",
            "(59, 63)": "str",
            "(39, 44)": "str",
            "(27, 31)": "str"
        }
    ],
    [
        "text = '123'\ntext_arr = []\nfor j in range(len(text)):\n    text_arr.append(text[j:])\nf = text_arr",
        "['123', '23', '3']",
        {},
        {
            "(88, 96)": "list",
            "(36, 41)": "type",
            "(42, 45)": "builtin_function_or_method",
            "(46, 50)": "str",
            "(58, 66)": "list",
            "(74, 78)": "str",
            "(79, 80)": "int"
        }
    ],
    [
        "string = '1oE-err bzz-bmm'\nf = string.title().replace(' ', '')",
        "'1Oe-ErrBzz-Bmm'",
        {},
        {
            "(31, 37)": "str"
        }
    ],
    [
        "array, elem = [6, 2, 7, 1], 6\nif elem in array:\n    f = array.index(elem)\nf = -1",
        "0",
        {
            "(33, 46)": "True\n"
        },
        {
            "(33, 37)": "int",
            "(41, 46)": "list",
            "(68, 72)": "int",
            "(56, 61)": "list"
        }
    ],
    [
        "text = \"the cow goes moo\"\nf = text.ljust(len(text) + 1, \"#\")",
        "'the cow goes moo#'",
        {},
        {
            "(30, 34)": "str",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str"
        }
    ],
    [
        "array, values = [58], [21, 92]\narray.reverse()\nfor value in values:\n    array.insert(len(array) // 2, value)\narray.reverse()\nf = array",
        "[58, 92, 21]",
        {},
        {
            "(60, 66)": "list",
            "(129, 134)": "list",
            "(31, 36)": "list",
            "(102, 107)": "int",
            "(109, 114)": "list",
            "(72, 77)": "list",
            "(85, 88)": "builtin_function_or_method",
            "(89, 94)": "list"
        }
    ],
    [
        "nums = [4, 3, 2, 1, 2, -1, 4, 2]\nnums.clear()\nfor num in nums:\n    nums.append(num*2)\nf = nums",
        "[]",
        {},
        {
            "(90, 94)": "list",
            "(33, 37)": "list"
        }
    ],
    [
        "n = \"6 ** 2\"\nfor i in str(n):\n    if not i.isdigit():\n        n = -1\n        break\nf = n",
        "-1",
        {},
        {
            "(87, 88)": "int",
            "(22, 25)": "type",
            "(26, 27)": "str",
            "(41, 42)": "str"
        }
    ],
    [
        "text = 'nzoh'\nls = list(text)\nfor i in range(0, len(ls)):\n    if ls[i]!='+':\n        ls.insert(i, '+')\n        ls.insert(i, '*')\n        break\nf = '+'.join(ls)",
        "'*+++n+z+o+h'",
        {},
        {
            "(19, 23)": "type",
            "(24, 28)": "str",
            "(39, 44)": "type",
            "(156, 158)": "list",
            "(48, 51)": "builtin_function_or_method",
            "(52, 54)": "list",
            "(65, 67)": "list",
            "(68, 69)": "int",
            "(95, 96)": "int",
            "(121, 122)": "int",
            "(85, 87)": "list",
            "(111, 113)": "list"
        }
    ],
    [
        "text, letter = 'za1fd1as8f7afasdfam97adfa', '7'\ncounts = {}\nfor char in text:\n    if char not in counts:\n        counts[char] = 1\n    else:\n        counts[char] += 1\nf = counts.get(letter, 0)",
        "2",
        {},
        {
            "(72, 76)": "str",
            "(181, 187)": "str",
            "(85, 89)": "str",
            "(97, 103)": "dict",
            "(170, 176)": "dict",
            "(113, 119)": "dict",
            "(120, 124)": "str",
            "(148, 154)": "dict",
            "(155, 159)": "str"
        }
    ],
    [
        "l, c = ['many', 'letters', 'asvsz', 'hello', 'man'], ''\nf = c.join(l)",
        "'manylettersasvszhelloman'",
        {},
        {
            "(67, 68)": "list",
            "(60, 61)": "str"
        }
    ],
    [
        "text = 'bbbbr'\nlength = len(text)\nhalf = length // 2\nencode = text[:half].encode('ascii')\nif text[half:] == encode.decode():\n    f = True\nelse:\n    f = False",
        "False",
        {},
        {
            "(24, 27)": "builtin_function_or_method",
            "(28, 32)": "str",
            "(41, 47)": "int",
            "(62, 66)": "str",
            "(68, 72)": "int"
        }
    ],
    [
        "names = []\nif names == []:\n    f = \"\"\nsmallest = names[0]\nfor name in names[1:]:\n    if name < smallest:\n        smallest = name\nnames.remove(smallest)\nf = names.join(smallest)",
        "''",
        {
            "(14, 25)": "True\n"
        },
        {
            "(14, 19)": "list"
        }
    ],
    [
        "text = '816'\nif text.isidentifier():\n    f = ''.join(c for c in text if c.isdigit())\nelse:\n    f = ''.join(text)",
        "'816'",
        {},
        {
            "(107, 111)": "str"
        }
    ],
    [
        "lst = ['a', 'c', 'v']\nlst.clear()\nlst += [1] * (len(lst) + 1)\nf = lst",
        "[1]",
        {},
        {
            "(66, 69)": "list",
            "(22, 25)": "list",
            "(48, 51)": "builtin_function_or_method",
            "(52, 55)": "list"
        }
    ],
    [
        "num = 21\nif num % 2 == 0:\n    f = s\nelse:\n    f = num - 1",
        "20",
        {},
        {
            "(50, 53)": "int"
        }
    ],
    [
        "text = \"seiq7229 d27\"\na = []\nfor i in range(len(text)):\n    if not text[i].isdecimal():\n        a.append(text[i])\nf = ''.join(a)",
        "'seiq d'",
        {},
        {
            "(38, 43)": "type",
            "(126, 127)": "list",
            "(44, 47)": "builtin_function_or_method",
            "(48, 52)": "str",
            "(96, 97)": "list",
            "(105, 109)": "str",
            "(110, 111)": "int",
            "(67, 71)": "str",
            "(72, 73)": "int"
        }
    ],
    [
        "text = \"URW rNB\"\nocc = {}\nfor ch in text:\n    name = {'a': 'b', 'b': 'c', 'c': 'd', 'd': 'e', 'e': 'f'}\n    name = name.get(ch, ch)\n    occ[name] = occ.get(name, 0) + 1\nf = [x for _, x in occ.items()]",
        "[1, 1, 1, 1, 1, 1, 1]",
        {},
        {
            "(36, 40)": "str",
            "(124, 126)": "str",
            "(128, 130)": "str",
            "(136, 139)": "dict",
            "(140, 144)": "str",
            "(115, 119)": "str",
            "(156, 160)": "str",
            "(148, 151)": "dict",
            "(188, 191)": "dict"
        }
    ],
    [
        "text, s, e = 'happy', 0, 3\nsublist = text[s:e]\nif not sublist:\n    f = -1\nf = sublist.index(min(sublist))",
        "1",
        {},
        {
            "(37, 41)": "str",
            "(42, 43)": "int",
            "(44, 45)": "int",
            "(78, 85)": "str",
            "(92, 95)": "builtin_function_or_method",
            "(96, 103)": "str"
        }
    ],
    [
        "array = [4, 8, 17, 89, 43, 14]\narray_2 = []\nfor i in array:\n    if i>0:\n        array_2 += [i]\narray_2.sort(reverse=True)\nf = array_2",
        "[89, 43, 17, 14, 8, 4]",
        {},
        {
            "(53, 58)": "list",
            "(126, 133)": "list",
            "(67, 68)": "int",
            "(95, 102)": "list",
            "(92, 93)": "int"
        }
    ],
    [
        "sentence = '1z1z1'\nfor c in sentence:\n    if c.isascii() is False:\n        f = False\n    else:\n        continue\nf = True",
        "True",
        {},
        {
            "(28, 36)": "str"
        }
    ],
    [
        "text = 'ax'\ntext = text.upper()\ncount_upper = 0\nfor char in text:\n    if char.isupper():\n        count_upper += 1\n    else:\n        f = 'no'\nf = count_upper // 2",
        "1",
        {},
        {
            "(60, 64)": "str",
            "(145, 156)": "int",
            "(19, 23)": "str",
            "(73, 77)": "str"
        }
    ],
    [
        "nums = [-1, 0, 0, 1, 1]\ncount = len(nums)\nfor i in [i % 2 for i in range(count)]:\n    nums.append(nums[i])\nf = nums",
        "[-1, 0, 0, 1, 1, -1, 0, -1, 0, -1]",
        {},
        {
            "(111, 115)": "list",
            "(32, 35)": "builtin_function_or_method",
            "(36, 40)": "list",
            "(52, 53)": "int",
            "(67, 72)": "type",
            "(73, 78)": "int",
            "(86, 90)": "list",
            "(98, 102)": "list",
            "(103, 104)": "int"
        }
    ],
    [
        "s = 'hi '\na = [char for char in s if char != ' ']\nb = a\nfor c in reversed(a):\n    if c == ' ':\n        b.pop()\n    else:\n        break\nf = ''.join(b)",
        "'hi'",
        {},
        {
            "(54, 55)": "list",
            "(65, 73)": "type",
            "(74, 75)": "list",
            "(147, 148)": "list",
            "(32, 33)": "str"
        }
    ],
    [
        "doc = 'raruwa'\nfor x in doc:\n    if x.isalpha():\n        f = x.capitalize()\nf = '-'",
        "'R'",
        {},
        {
            "(24, 27)": "str",
            "(36, 37)": "str",
            "(61, 62)": "str"
        }
    ],
    [
        "text = \"\"\ntexts = text.split()\nif texts:\n    xtexts = [t for t in texts if t.isascii() and t not in ('nada', '0')]\n    f = max(xtexts, key=len) if xtexts else 'nada'\nf = 'nada'",
        "'nada'",
        {},
        {
            "(18, 22)": "str"
        }
    ],
    [
        "user = {\"eating\" : \"ja\", \"books\" : \"nee\", \"piano\" : \"coke\", \"excitement\" : \"zoo\"}\nif len(list(user.keys())) > len(list(user.values())):\n    f = tuple(user.keys())\nf = tuple(user.values())",
        "('ja', 'nee', 'coke', 'zoo')",
        {},
        {
            "(167, 172)": "type",
            "(173, 177)": "dict"
        }
    ],
    [
        "text, prefix = 'ndbtdabdahesyehu', 'n'\nwhile text.startswith(prefix):\n    text = text[len(prefix):] or text\nf = text",
        "'dbtdabdahesyehu'",
        {},
        {
            "(112, 116)": "str",
            "(61, 67)": "str",
            "(45, 49)": "str",
            "(103, 107)": "str",
            "(81, 85)": "str",
            "(86, 89)": "builtin_function_or_method",
            "(90, 96)": "str"
        }
    ],
    [
        "text, size = \"7\", 10\ncounter = len(text)\nfor i in range(size-int(size%2)):\n    text = ' '+text+' '\n    counter += 2\n    if counter >= size:\n        f = text",
        "'     7     '",
        {},
        {
            "(31, 34)": "builtin_function_or_method",
            "(35, 39)": "str",
            "(50, 55)": "type",
            "(56, 60)": "int",
            "(123, 130)": "int",
            "(134, 138)": "int",
            "(152, 156)": "str",
            "(61, 64)": "type",
            "(90, 94)": "str",
            "(65, 69)": "int"
        }
    ],
    [
        "nums, index = [3, 2, 0, 3, 7], 3\nf = nums[index] % 42 + nums.pop(index) * 2",
        "9",
        {},
        {
            "(37, 41)": "list",
            "(42, 47)": "int",
            "(65, 70)": "int",
            "(56, 60)": "list"
        }
    ],
    [
        "text, prefix = 'happy', 'ha'\nprefix_length = len(prefix)\nif text.startswith(prefix):\n    f = text[(prefix_length - 1) // 2:\n                (prefix_length + 1) // 2 * -1:-1]\nelse:\n    f = text",
        "''",
        {
            "(60, 83)": "True\n"
        },
        {
            "(45, 48)": "builtin_function_or_method",
            "(49, 55)": "str",
            "(76, 82)": "str",
            "(60, 64)": "str"
        }
    ],
    [
        "num1, num2, num3 = 6,8,8\nnums = [num1, num2, num3]\nnums.sort()    \nf = f'{nums[0]},{nums[1]},{nums[2]}'",
        "'6,8,8'",
        {},
        {
            "(33, 37)": "int",
            "(39, 43)": "int",
            "(45, 49)": "int",
            "(51, 55)": "list",
            "(74, 78)": "list",
            "(84, 88)": "list",
            "(94, 98)": "list"
        }
    ],
    [
        "text, pref = 'omeunhwpvr.dq', 'omeunh'\nif text.startswith(pref):\n    n = len(pref)\n    text = '.'.join(text[n:].split('.')[1:] + text[:n].split('.')[:-1])\nf = text",
        "'dq'",
        {
            "(42, 63)": "True\n"
        },
        {
            "(159, 163)": "str",
            "(58, 62)": "str",
            "(42, 46)": "str",
            "(73, 76)": "builtin_function_or_method",
            "(77, 81)": "str",
            "(103, 107)": "str",
            "(129, 133)": "str",
            "(108, 109)": "int",
            "(135, 136)": "int"
        }
    ],
    [
        "x = '999893767522480'\na = 0\nfor i in x.split(' '):\n    a += len(i.zfill(len(i)*2))\nf = a",
        "30",
        {},
        {
            "(87, 88)": "int",
            "(37, 38)": "str",
            "(60, 63)": "builtin_function_or_method",
            "(64, 65)": "str",
            "(72, 75)": "builtin_function_or_method",
            "(76, 77)": "str"
        }
    ],
    [
        "d, n = {1: 2, 3: 4, 5: 6, 7: 8, 9: 10}, 1\nfor i in range(n):\n    item = d.popitem()\n    d[item[1]] = item[0]\nf = d",
        "{1: 2, 3: 4, 5: 6, 7: 8, 10: 9}",
        {},
        {
            "(113, 114)": "dict",
            "(51, 56)": "type",
            "(57, 58)": "int",
            "(88, 89)": "dict",
            "(101, 105)": "tuple",
            "(72, 73)": "dict",
            "(90, 94)": "tuple"
        }
    ],
    [
        "text = '99'\nfor c in text:\n    if not c.isnumeric():\n        f = False\nf = bool(text)",
        "True",
        {},
        {
            "(21, 25)": "str",
            "(75, 79)": "type",
            "(80, 84)": "str"
        }
    ],
    [
        "row = \"100010010\"\nf = (row.count('1'), row.count('0'))",
        "(3, 6)",
        {},
        {
            "(23, 26)": "str",
            "(39, 42)": "str"
        }
    ],
    [
        "lst, i, n = [44, 34, 23, 82, 24, 11, 63, 99], 4, 15\nlst.insert(i, n)\nf = lst",
        "[44, 34, 23, 82, 15, 24, 11, 63, 99]",
        {},
        {
            "(73, 76)": "list",
            "(63, 64)": "int",
            "(66, 67)": "int",
            "(52, 55)": "list"
        }
    ],
    [
        "array, elem = [-1, 2, 1, -8, 2], 2\nind = array.index(elem)\nf = ind * 2 + array[-ind - 1] * 3",
        "-22",
        {},
        {
            "(53, 57)": "int",
            "(41, 46)": "list",
            "(63, 66)": "int",
            "(73, 78)": "list",
            "(80, 83)": "int"
        }
    ],
    [
        "nums = [10, 3, 2, 2, 6, 0]\nnums = [y for y in nums if y > 0]\nif len(nums) <= 3:\n    f = nums\nnums.reverse()\nhalf = len(nums)//2\nf = nums[:half] + [0]*5 + nums[half:]",
        "[6, 2, 0, 0, 0, 0, 0, 2, 3, 10]",
        {},
        {
            "(46, 50)": "list",
            "(93, 97)": "list",
            "(115, 118)": "builtin_function_or_method",
            "(119, 123)": "list",
            "(154, 158)": "list",
            "(132, 136)": "list",
            "(159, 163)": "int",
            "(138, 142)": "int"
        }
    ],
    [
        "text, character = 'h ,lpvvkohh,u', 'i'\nsubject = text[text.rfind(character):]\nf = subject*text.count(character)",
        "''",
        {},
        {
            "(49, 53)": "str",
            "(82, 89)": "str",
            "(101, 110)": "str",
            "(65, 74)": "str",
            "(90, 94)": "str",
            "(54, 58)": "str"
        }
    ],
    [
        "text = 'mTYWLMwbLRVOqNEf.oLsYkZORKE[Ko[{n'\nif text and text.isupper():\n    cs = str.maketrans(string.ascii_uppercase, string.ascii_lowercase)\n    f = text.translate(cs)\nf = text.lower()[:3]",
        "'mty'",
        {},
        {
            "(173, 177)": "str"
        }
    ],
    [
        "arr = [0, 1, 2, 3, 4]\narr = list(arr)\narr.clear()\narr.append('1')\narr.append('2')\narr.append('3')\narr.append('4')\nf = ','.join(arr)",
        "'1,2,3,4'",
        {},
        {
            "(28, 32)": "type",
            "(33, 36)": "list",
            "(127, 130)": "list",
            "(38, 41)": "list",
            "(50, 53)": "list",
            "(66, 69)": "list",
            "(82, 85)": "list",
            "(98, 101)": "list"
        }
    ],
    [
        "s = 'ab        '\nf = ''.join(reversed(s.rstrip()))",
        "'ba'",
        {},
        {
            "(29, 37)": "type",
            "(38, 39)": "str"
        }
    ],
    [
        "dic, inx = {\"Bulls\": 23, \"White Sox\": 45}, \"Bulls\"\ntry:\n    dic[list(dic)[list(dic).index(inx)]] = list(dic)[list(dic).index(inx)].lower()\nexcept ValueError:\n    pass\nf = list(dic.items())",
        "[('Bulls', 'bulls'), ('White Sox', 45)]",
        {},
        {
            "(171, 175)": "type",
            "(176, 179)": "dict"
        }
    ],
    [
        "a, b, c, d = 'CJU', 'BFS', 'WBYDZPVES', 'Y'\nf = a and b or c and d",
        "'BFS'",
        {
            "(48, 55)": "True\n",
            "(59, 66)": "True\n",
            "(48, 66)": "True\n"
        },
        {
            "(48, 49)": "str",
            "(54, 55)": "str",
            "(59, 60)": "str",
            "(65, 66)": "str"
        }
    ],
    [
        "text = 'qq0tt'\nl = text.rpartition('0')\nif l[2] == '':\n    f = '-1:-1'\nf = f'{len(l[0])}:{l[2].find(\"0\") + 1}'",
        "'2:0'",
        {},
        {
            "(19, 23)": "str",
            "(78, 81)": "builtin_function_or_method",
            "(82, 83)": "tuple",
            "(90, 91)": "tuple"
        }
    ],
    [
        "text = \"nwv mef ofme bdryl\"\narr = text.split()\nresult = []\nfor item in arr:\n    if item.endswith('day'):\n        item += 'y'\n    else:\n        item += 'day'\n    result.append(item)\nf = ' '.join(result)",
        "'nwvday mefday ofmeday bdrylday'",
        {},
        {
            "(71, 74)": "list",
            "(194, 200)": "list",
            "(34, 38)": "str",
            "(175, 179)": "str",
            "(161, 167)": "list"
        }
    ],
    [
        "n = 12\nvalues = {0: 3, 1: 4.5, 2: '-'}\nres = {}\nfor i, j in values.items():\n    if i % n != 2:\n        res[j] = n // 2\nf = sorted(res)",
        "[3, 4.5]",
        {},
        {
            "(123, 129)": "builtin_function_or_method",
            "(130, 133)": "dict",
            "(60, 66)": "dict",
            "(83, 84)": "int",
            "(87, 88)": "int",
            "(103, 106)": "dict",
            "(107, 108)": "int",
            "(112, 113)": "int"
        }
    ],
    [
        "instagram, imgur, wins = ['sdfs', 'drcr', '2e'], ['sdfs', 'dr2c', 'QWERTY'], 0\nphotos = [instagram, imgur]\nif instagram == imgur:\n    f = wins\nif wins == 1:\n    f = photos.pop()\nelse:\n    photos.reverse()\n    f = photos.pop()",
        "['sdfs', 'drcr', '2e']",
        {},
        {
            "(89, 98)": "list",
            "(100, 105)": "list",
            "(188, 194)": "list",
            "(213, 219)": "list"
        }
    ],
    [
        "nums = [-1, 9, 3, 1, -2]\nnums.reverse()\nf = ''.join(map(str, nums))",
        "'-2139-1'",
        {},
        {
            "(25, 29)": "list",
            "(52, 55)": "type",
            "(56, 59)": "type",
            "(61, 65)": "list"
        }
    ],
    [
        "s1, s2 = \"he\", \"hello\"\nif s2.endswith(s1):\n    s2 = s2[:len(s1) * -1]\nf = s2",
        "'hello'",
        {},
        {
            "(74, 76)": "str"
        }
    ],
    [
        "char = 'o'\nif char not in 'aeiouAEIOU':\n    f = None\nif char in 'AEIOU':\n    f = char.lower()\nf = char.upper()",
        "'O'",
        {},
        {
            "(98, 102)": "str"
        }
    ],
    [
        "array = [[1, 2, 3], [], [1, 2, 3]]\nreturn_arr = []\nfor a in array:\n    return_arr.append(a.copy())\nf = return_arr",
        "[[1, 2, 3], [], [1, 2, 3]]",
        {},
        {
            "(60, 65)": "list",
            "(103, 113)": "list",
            "(71, 81)": "list",
            "(89, 90)": "list"
        }
    ],
    [
        "s = \"12ab23xy\"\nd = dict.fromkeys(s, 0)\nf = list(d.keys())",
        "['1', '2', 'a', 'b', '3', 'x', 'y']",
        {},
        {
            "(33, 34)": "str",
            "(43, 47)": "type",
            "(19, 23)": "type",
            "(48, 49)": "dict"
        }
    ],
    [
        "text = 'wW\uc758IV]HDJjhgK[dGIUlVO@Ess$coZkBqu[Ct'\nf = text.isascii()",
        "False",
        {},
        {
            "(50, 54)": "str"
        }
    ],
    [
        "n = 'iq'\nlength = len(n) + 2\nrevn = list(n)\nresult = ''.join(revn)\nrevn.clear()\nf = result + ('!' * length)",
        "'iq!!!!'",
        {},
        {
            "(36, 40)": "type",
            "(41, 42)": "str",
            "(61, 65)": "list",
            "(84, 90)": "str",
            "(18, 21)": "builtin_function_or_method",
            "(22, 23)": "str",
            "(67, 71)": "list",
            "(100, 106)": "int"
        }
    ],
    [
        "a, b = {'w': 5, 'wi': 10}, {'w': 3}\nf = {**a, **b}",
        "{'w': 3, 'wi': 10}",
        {},
        {
            "(43, 44)": "dict",
            "(48, 49)": "dict"
        }
    ],
    [
        "zoo = {'AAA': 'fr'}\nf = dict((v, k) for k, v in zoo.items())",
        "{'fr': 'AAA'}",
        {},
        {
            "(24, 28)": "type",
            "(48, 51)": "dict"
        }
    ],
    [
        "text = 'lunabotics'\nf = not any([c.isupper() for c in text])",
        "True",
        {},
        {
            "(28, 31)": "builtin_function_or_method",
            "(54, 58)": "str"
        }
    ],
    [
        "lst = [2, 0]\nlst.clear()\nfor i in lst:\n    if i == 3:\n        f = False\nelse:\n    f = True",
        "True",
        {},
        {
            "(13, 16)": "list"
        }
    ],
    [
        "s = 'SOME OF THIS Is uknowN!'\nf = sum([s.istitle() for s in s.split()])",
        "1",
        {},
        {
            "(34, 37)": "builtin_function_or_method",
            "(39, 40)": "str",
            "(60, 61)": "str"
        }
    ],
    [
        "text, sep, num = 'aa+++bb', '+', 1\nf = '___'.join(text.rsplit(sep, num))",
        "'aa++___bb'",
        {},
        {
            "(62, 65)": "str",
            "(67, 70)": "int",
            "(50, 54)": "str"
        }
    ],
    [
        "d, rm = {'1': 'a', 1: 'a', 1: 'b', '1': 'b'}, [1]\nres = d.copy()\nfor k in rm:\n    if k in res:\n        del res[k]\nf = res",
        "{'1': 'b'}",
        {},
        {
            "(74, 76)": "list",
            "(118, 121)": "dict",
            "(56, 57)": "dict",
            "(85, 86)": "int",
            "(90, 93)": "dict",
            "(107, 110)": "dict",
            "(111, 112)": "int"
        }
    ],
    [
        "array, i_num, elem = [ -4,   1,  0], 1, 4\narray.insert(i_num, elem)\nf = array",
        "[-4, 4, 1, 0]",
        {},
        {
            "(72, 77)": "list",
            "(55, 60)": "int",
            "(62, 66)": "int",
            "(42, 47)": "list"
        }
    ],
    [
        "names, winners = ['e', 'f', 'j', 'x', 'r', 'k'], ['a', 'v', '2', 'im', 'nb', 'vj', 'z']\nls = [names.index(name) for name in names if name in winners]\nls.sort(reverse=True)\nf = ls",
        "[]",
        {},
        {
            "(176, 178)": "list",
            "(124, 129)": "list",
            "(150, 152)": "list",
            "(94, 99)": "list",
            "(141, 148)": "list"
        }
    ],
    [
        "s = 'abcDEFGhIJ'\nf = ''.join((c.casefold() for c in s))",
        "'abcdefghij'",
        {},
        {
            "(52, 53)": "str"
        }
    ],
    [
        "text = \"a\"\ndic = dict()\nfor char in text:\n    dic[char] = dic.get(char, 0) + 1\nfor key in dic:\n    if dic[key] > 1:\n        dic[key] = 1\nf = dic",
        "{'a': 1}",
        {},
        {
            "(36, 40)": "str",
            "(90, 93)": "dict",
            "(141, 144)": "dict",
            "(17, 21)": "type",
            "(46, 49)": "dict",
            "(50, 54)": "str",
            "(66, 70)": "str",
            "(58, 61)": "dict"
        }
    ],
    [
        "text = \"PermissioN is GRANTed\"\nif not text.istitle():\n    f = text.title()\nf = text.lower()",
        "'Permission Is Granted'",
        {
            "(34, 52)": "True\n"
        },
        {
            "(79, 83)": "str",
            "(38, 42)": "str",
            "(62, 66)": "str"
        }
    ],
    [
        "nums = [2, 8, -2, 9, 3, 3]\ncount = len(nums)\nfor i in range(0, count):\n    nums.insert(i, nums[i]*2)\nf = nums",
        "[4, 4, 4, 4, 4, 4, 2, 8, -2, 9, 3, 3]",
        {},
        {
            "(105, 109)": "list",
            "(35, 38)": "builtin_function_or_method",
            "(39, 43)": "list",
            "(54, 59)": "type",
            "(63, 68)": "int",
            "(87, 88)": "int",
            "(75, 79)": "list",
            "(90, 94)": "list",
            "(95, 96)": "int"
        }
    ],
    [
        "text = \"ua6hajq\"\nresult = []\nfor i in range(len(text)):\n    if not text[i].isascii():\n        f = False\n    elif text[i].isalnum():\n        result.append(text[i].upper())\n    else:\n        result.append(text[i])\nf = ''.join(result)",
        "'UA6HAJQ'",
        {},
        {
            "(38, 43)": "type",
            "(224, 230)": "list",
            "(44, 47)": "builtin_function_or_method",
            "(48, 52)": "str",
            "(113, 117)": "str",
            "(118, 119)": "int",
            "(140, 146)": "list",
            "(154, 158)": "str",
            "(159, 160)": "int"
        }
    ],
    [
        "var = 1\namount = len(var) if type(var) == list else 0\nif type(var) == dict:\n    amount = len(var.keys())\nnonzero = amount if amount > 0 else 0\nf = nonzero",
        "0",
        {},
        {
            "(147, 154)": "int",
            "(115, 121)": "int",
            "(42, 46)": "type",
            "(17, 20)": "builtin_function_or_method",
            "(21, 24)": "int",
            "(125, 131)": "int",
            "(29, 33)": "type",
            "(34, 37)": "int"
        }
    ],
    [
        "nums, spot, idx = [1, 0, 1, 1], 0, 9\nnums.insert(spot, idx)\nf = nums",
        "[9, 1, 0, 1, 1]",
        {},
        {
            "(64, 68)": "list",
            "(49, 53)": "int",
            "(55, 58)": "int",
            "(37, 41)": "list"
        }
    ],
    [
        "text = \"       \"\na = ['']\nb = ''\nfor i in text:\n    if not i.isspace():\n        a.append(b)\n        b = ''\n    else:\n        b += i\nf = len(a)",
        "1",
        {},
        {
            "(42, 46)": "str",
            "(136, 139)": "builtin_function_or_method",
            "(140, 141)": "list",
            "(130, 131)": "str"
        }
    ],
    [
        "marks = {'x': 67, 'v': 89, '': 4, 'alij': 11, 'kgfsd': 72, 'yafby': 83}\nhighest = 0\nlowest = 100\nfor value in marks.values():\n    if value > highest:\n        highest = value\n    if value < lowest:\n        lowest = value\nf = highest, lowest",
        "(89, 4)",
        {},
        {
            "(224, 231)": "int",
            "(233, 239)": "int",
            "(110, 115)": "dict",
            "(133, 138)": "int",
            "(141, 148)": "int",
            "(168, 173)": "int",
            "(181, 186)": "int",
            "(189, 195)": "int",
            "(214, 219)": "int"
        }
    ],
    [
        "sentence = 'XYZ LittleRedRidingHood LiTTleBIGGeXEiT fault'\nls = list(sentence)\nfor letter in ls:\n    if not letter.istitle():\n        ls.remove(letter)\nf = ''.join(ls)",
        "'XYZLtRRdnHodLTTBIGGeXET fult'",
        {},
        {
            "(93, 95)": "list",
            "(64, 68)": "type",
            "(69, 77)": "str",
            "(164, 166)": "list",
            "(144, 150)": "str",
            "(108, 114)": "str",
            "(134, 136)": "list"
        }
    ],
    [
        "line = \"987yhNSHAshd 93275yrgSgbgSshfbsfB\"\ncount = 0\na = []\nfor i in range(len(line)):\n    count += 1\n    if count%2==0:\n        a.append(line[i].swapcase())\n    else:\n        a.append(line[i])\nf = ''.join(a)",
        "'987YhnShAShD 93275yRgsgBgssHfBsFB'",
        {},
        {
            "(69, 74)": "type",
            "(206, 207)": "list",
            "(75, 78)": "builtin_function_or_method",
            "(79, 83)": "str",
            "(109, 114)": "int",
            "(129, 130)": "list",
            "(176, 177)": "list",
            "(185, 189)": "str",
            "(190, 191)": "int",
            "(138, 142)": "str",
            "(143, 144)": "int"
        }
    ],
    [
        "text, sep = \"a-.-.b\", \"-.\"\nf = text.rsplit(sep, maxsplit=2)",
        "['a', '', 'b']",
        {},
        {
            "(43, 46)": "str",
            "(31, 35)": "str"
        }
    ],
    [
        "text = 'os||agx5'\nres = []\nfor ch in text.encode('utf-8'):\n    if ch == 61:\n        break\n    if ch == 0:\n        pass\n    res.append(f'{ch}; '.encode('utf-8'))\nf = b''.join(res)",
        "b'111; 115; 124; 124; 97; 103; 120; 53; '",
        {},
        {
            "(174, 177)": "list",
            "(37, 41)": "str",
            "(123, 126)": "list",
            "(137, 139)": "int"
        }
    ],
    [
        "d, count = {}, 200\nfor i in range(count):\n    if d == {}:\n        break\n    d.popitem()\nf = d",
        "{}",
        {},
        {
            "(92, 93)": "dict",
            "(28, 33)": "type",
            "(34, 39)": "int",
            "(49, 50)": "dict"
        }
    ],
    [
        "numbers = \"23157\"\nfor i in range(len(numbers)):\n    if numbers.count('3') > 1:\n        f = i\nf = -1",
        "-1",
        {},
        {
            "(27, 32)": "type",
            "(33, 36)": "builtin_function_or_method",
            "(37, 44)": "str"
        }
    ],
    [
        "text, chars = 'zbzquiuqnmfkx', 'mk'\nnum_applies = 2\nextra_chars = ''\nfor i in range(num_applies):\n    extra_chars += chars\n    text = text.replace(extra_chars, '')\nf = text",
        "'zbzquiuqnmfkx'",
        {},
        {
            "(168, 172)": "str",
            "(78, 83)": "type",
            "(84, 95)": "int",
            "(117, 122)": "str",
            "(147, 158)": "str",
            "(134, 138)": "str"
        }
    ],
    [
        "text = \"vsnlygltaw\"\nresult = \"\"\nfor i in range(len(text)):\n    if i % 2 == 0:\n        result += text[i].swapcase()\n    else:\n        result += text[i]\nf = result",
        "'VsNlYgLtAw'",
        {},
        {
            "(155, 161)": "str",
            "(41, 46)": "type",
            "(47, 50)": "builtin_function_or_method",
            "(51, 55)": "str",
            "(66, 67)": "int",
            "(143, 147)": "str",
            "(148, 149)": "int",
            "(96, 100)": "str",
            "(101, 102)": "int"
        }
    ],
    [
        "countries = {}\nlanguage_country = dict()\nfor country, language in countries.items():\n    if language not in language_country:\n        language_country[language] = []\n    language_country[language].append(country)\nf = language_country",
        "{}",
        {},
        {
            "(217, 233)": "dict",
            "(34, 38)": "type"
        }
    ],
    [
        "s = '01,001'\nnums = ''.join(filter(lambda c:c.isdecimal(), s))\nif nums == '': f = 'none'\nm = max([int(num) for num in nums.split(',')])\nf = str(m)",
        "'1001'",
        {
            "(66, 76)": "False\n"
        },
        {
            "(66, 70)": "str",
            "(93, 96)": "builtin_function_or_method",
            "(140, 143)": "type",
            "(144, 145)": "int",
            "(28, 34)": "type",
            "(59, 60)": "str",
            "(98, 101)": "type",
            "(118, 122)": "str"
        }
    ],
    [
        "string = 'Nuva?dlfuyjys'\nif string[:4] != 'Nuva':\n    f = 'no'\nelse:\n    f = string.rstrip()",
        "'Nuva?dlfuyjys'",
        {},
        {
            "(77, 83)": "str"
        }
    ],
    [
        "array, elem = [1, 2, 3, 5, 8], 6\nfor idx, e in enumerate(array):\n    if e > elem and array[idx - 1] < elem:\n        array.insert(idx, elem)\nf = array",
        "[1, 2, 3, 5, 6, 8]",
        {},
        {
            "(144, 149)": "list",
            "(47, 56)": "type",
            "(57, 62)": "list",
            "(72, 73)": "int",
            "(76, 80)": "int",
            "(102, 106)": "int",
            "(129, 132)": "int",
            "(134, 138)": "int",
            "(85, 90)": "list",
            "(116, 121)": "list",
            "(91, 94)": "int"
        }
    ],
    [
        "txt, sep, sep_count = 'i like you', ' ', -1\no = ''\nwhile sep_count > 0 and txt.count(sep) > 0:\n    o += txt.rsplit(sep, 1)[0] + sep\n    txt = txt.rsplit(sep, 1)[1]\n    sep_count -= 1\nf = o + txt",
        "'i like you'",
        {},
        {
            "(187, 188)": "str",
            "(191, 194)": "str"
        }
    ],
    [
        "text, res = '\"Leap and the net will appear', 123\nfor c in '*\\n\"':\n    text = text.replace(c, '!' + str(res))\nif text.startswith('!'):\n    text = text[len(str(res)):]\nf = text",
        "'3Leap and the net will appear'",
        {
            "(112, 132)": "True\n"
        },
        {
            "(170, 174)": "str",
            "(90, 91)": "str",
            "(112, 116)": "str",
            "(145, 149)": "str",
            "(77, 81)": "str",
            "(99, 102)": "type",
            "(103, 106)": "int",
            "(150, 153)": "builtin_function_or_method",
            "(154, 157)": "type",
            "(158, 161)": "int"
        }
    ],
    [
        "text = 'kkxkxxfck'\ns = text.rpartition('o')\ndiv, div2 = (s[0] == '' and '-' or s[0]), (s[2] == '' and '-' or s[2])\nf = s[1] + div + s[1] + div2",
        "'-kkxkxxfck'",
        {
            "(57, 75)": "True\n",
            "(79, 83)": "False\n",
            "(57, 83)": "True\n",
            "(87, 105)": "False\n",
            "(109, 113)": "True\n",
            "(87, 113)": "True\n"
        },
        {
            "(139, 143)": "str",
            "(23, 27)": "str",
            "(79, 80)": "tuple",
            "(109, 110)": "tuple",
            "(126, 129)": "str",
            "(132, 133)": "tuple",
            "(119, 120)": "tuple",
            "(57, 58)": "tuple",
            "(87, 88)": "tuple"
        }
    ],
    [
        "text = \"145\\n\\n12fjkjg\"\ns = text.splitlines()\nf = len(s)",
        "3",
        {},
        {
            "(50, 53)": "builtin_function_or_method",
            "(54, 55)": "list",
            "(28, 32)": "str"
        }
    ],
    [
        "text = 'Mammoth'\nodd = ''\neven = ''\nfor i, c in enumerate(text):\n    if i % 2 == 0:\n        even += c\n    else:\n        odd += c\nf = even + odd.lower()",
        "'Mmohamt'",
        {},
        {
            "(48, 57)": "type",
            "(58, 62)": "str",
            "(133, 137)": "str",
            "(100, 101)": "str",
            "(127, 128)": "str",
            "(72, 73)": "int",
            "(140, 143)": "str"
        }
    ],
    [
        "text, search_string = 'ONBPICJOHRHDJOSNCPNJ9ONTHBQCJ', 'J'\nindexes = []\nwhile search_string in text:\n    indexes.append(text.rindex(search_string))\n    text = text[:text.rindex(search_string)]\nf = indexes",
        "[28, 19, 12, 6]",
        {},
        {
            "(197, 204)": "list",
            "(78, 91)": "str",
            "(95, 99)": "str",
            "(159, 163)": "str",
            "(105, 112)": "list",
            "(132, 145)": "str",
            "(120, 124)": "str",
            "(177, 190)": "str",
            "(165, 169)": "str"
        }
    ],
    [
        "m = {'l':4, 'h':6, 'o':9}\nitems = list(m.items())\nfor i in range(len(items)-2, -1, -1):\n    tmp = items[i]\n    items[i] = items[i+1] \n    items[i+1] = tmp\nf = ['{}={}', '{1}={0}'][len(items) % 2].format(\n    *m.keys(), **m\n)",
        "'h=l'",
        {},
        {
            "(34, 38)": "type",
            "(59, 64)": "type",
            "(151, 154)": "tuple",
            "(98, 103)": "list",
            "(104, 105)": "int",
            "(111, 116)": "list",
            "(117, 118)": "int",
            "(122, 127)": "list",
            "(138, 143)": "list",
            "(39, 40)": "dict",
            "(65, 68)": "builtin_function_or_method",
            "(69, 74)": "list",
            "(128, 129)": "int",
            "(144, 145)": "int"
        }
    ],
    [
        "text = \"a\\nkgf\\nasd\\n\"\na = len(text)\ncount = 0\nwhile text:\n    if text.startswith('a'):\n        count += text.find(' ')\n    else:\n        count += text.find('\\n')\n    text = text[text.find('\\n')+1:text.find('\\n')+a+1]\nf = count",
        "1",
        {},
        {
            "(53, 57)": "str",
            "(222, 227)": "int",
            "(27, 30)": "builtin_function_or_method",
            "(31, 35)": "str",
            "(174, 178)": "str",
            "(66, 70)": "str",
            "(105, 109)": "str",
            "(213, 214)": "int",
            "(179, 183)": "str",
            "(197, 201)": "str"
        }
    ],
    [
        "a_str, prefix = 'abc', 'abcd'\nif a_str.removeprefix(prefix):\n    f = a_str\nelse:\n    f = prefix + a_str",
        "'abc'",
        {
            "(33, 59)": "True\n"
        },
        {
            "(52, 58)": "str",
            "(69, 74)": "str",
            "(33, 38)": "str"
        }
    ],
    [
        "nums, elements = [7, 1, 2, 6, 0, 2], [9, 0, 3]\nresult = []\nfor i in range(len(elements)):\n    result.append(nums.pop())\nf = nums",
        "[7, 1, 2]",
        {},
        {
            "(124, 128)": "list",
            "(68, 73)": "type",
            "(74, 77)": "builtin_function_or_method",
            "(78, 86)": "list",
            "(94, 100)": "list",
            "(108, 112)": "list"
        }
    ],
    [
        "n = 372359\nt = 0\nb = ''\ndigits = list(map(int, str(n)))\nfor d in digits:\n    if d == 0: t += 1\n    else: break\nfor _ in range(t):\n    b += str(1) + '0' + str(4)\nb += str(n)\nf = b",
        "'372359'",
        {},
        {
            "(65, 71)": "list",
            "(177, 178)": "str",
            "(33, 37)": "type",
            "(166, 169)": "type",
            "(170, 171)": "int",
            "(38, 41)": "type",
            "(42, 45)": "type",
            "(80, 81)": "int",
            "(47, 50)": "type",
            "(51, 52)": "int"
        }
    ],
    [
        "d = {\n    'Russia': [('Moscow', 'Russia'), ('Vladivostok', 'Russia')],\n    'Kazakhstan': [('Astana', 'Kazakhstan')],\n}\nf = list(d.keys())",
        "['Russia', 'Kazakhstan']",
        {},
        {
            "(123, 127)": "type",
            "(128, 129)": "dict"
        }
    ],
    [
        "text, width = \"a\\nbc\\n\\nd\\nef\", 5\nlines = [line.center(width) for line in text.split('\\n')]\nf = '\\n'.join(lines)",
        "'  a  \\n  bc \\n     \\n  d  \\n  ef '",
        {},
        {
            "(106, 111)": "list",
            "(55, 60)": "int",
            "(74, 78)": "str"
        }
    ],
    [
        "nums = [3, 2, 0, 0, 2, 3]\ncount = 0\nfor i in range(len(nums)):\n    if len(nums) == 0:\n        break\n    if count % 2 == 0:\n        nums.pop()\n    else:\n        nums.pop(0)\n    count += 1\nf = nums",
        "[]",
        {},
        {
            "(191, 195)": "list",
            "(45, 50)": "type",
            "(51, 54)": "builtin_function_or_method",
            "(55, 59)": "list",
            "(107, 112)": "int",
            "(131, 135)": "list"
        }
    ],
    [
        "text, chars = 'tflb omn rtt', 'm'\nlistchars = list(chars)\nfirst = listchars.pop()\nfor i in listchars:\n    text = text[0:text.find(i)]+i+text[text.find(i)+1:]\nf = text",
        "'tflb omn rtt'",
        {},
        {
            "(162, 166)": "str",
            "(46, 50)": "type",
            "(51, 56)": "str",
            "(66, 75)": "list"
        }
    ],
    [
        "first, second = [1, 2, 1], [1, 1, 2]\nif len(first) < 10 or len(second) < 10:\n    f = 'no'\nfor i in range(5):\n    if first[i] != second[i]:\n        f = 'no'\nfirst.extend(second)\nf = first",
        "'no'",
        {
            "(40, 75)": "True\n"
        },
        {
            "(99, 104)": "type",
            "(40, 43)": "builtin_function_or_method",
            "(44, 49)": "list",
            "(59, 62)": "builtin_function_or_method",
            "(63, 69)": "list",
            "(116, 121)": "list",
            "(122, 123)": "int",
            "(128, 134)": "list",
            "(135, 136)": "int"
        }
    ],
    [
        "st = 'Hi there'\nif st.lower().rindex('h', st.lower().rindex('i')) >= st.lower().rindex('i'):\n    f = 'Hey'\nelse:\n    f = 'Hi'",
        "'Hey'",
        {
            "(19, 91)": "True\n"
        },
        {
            "(19, 21)": "str",
            "(69, 71)": "str",
            "(42, 44)": "str"
        }
    ],
    [
        "li = ['k', 'x', 'c', 'x', 'x', 'b', 'l', 'f', 'r', 'n', 'g']\nf = [li.count(i) for i in li]",
        "[1, 3, 1, 3, 3, 1, 1, 1, 1, 1, 1]",
        {},
        {
            "(87, 89)": "list",
            "(66, 68)": "list"
        }
    ],
    [
        "x = 'ykdfhp'\nif x.islower():\n    f = x\nelse:\n    f = x[::-1]",
        "'ykdfhp'",
        {
            "(16, 27)": "True\n"
        },
        {
            "(37, 38)": "str",
            "(16, 17)": "str"
        }
    ],
    [
        "s, n = \"daaX\", \"daaX\"\nf = s.casefold() == n.casefold()",
        "True",
        {},
        {
            "(26, 27)": "str",
            "(42, 43)": "str"
        }
    ],
    [
        "vectors = []\nsorted_vecs = []\nfor vec in vectors:\n    vec.sort()\n    sorted_vecs.append(vec)\nf = sorted_vecs",
        "[]",
        {},
        {
            "(97, 108)": "list"
        }
    ],
    [
        "price, product = 8.50, 'grapes'\ninventory = ['olives', 'key', 'orange']\nif product not in inventory:\n    f = price\nelse:\n    price *=.85\n    inventory.remove(product)\nf = price",
        "8.5",
        {
            "(75, 99)": "True\n"
        },
        {
            "(171, 176)": "float",
            "(75, 82)": "str",
            "(90, 99)": "list",
            "(109, 114)": "float"
        }
    ],
    [
        "single_digit = 5\nresult = []\nfor c in range(1, 11):\n    if c != single_digit:\n        result.append(c)\nf = result",
        "[1, 2, 3, 4, 6, 7, 8, 9, 10]",
        {},
        {
            "(107, 113)": "list",
            "(38, 43)": "type",
            "(59, 60)": "int",
            "(64, 76)": "int",
            "(100, 101)": "int",
            "(86, 92)": "list"
        }
    ],
    [
        "nums = [1, 1, 1]\nmiddle = len(nums)//2\nf = nums[middle:] + nums[0:middle]",
        "[1, 1, 1]",
        {},
        {
            "(26, 29)": "builtin_function_or_method",
            "(30, 34)": "list",
            "(43, 47)": "list",
            "(59, 63)": "list",
            "(48, 54)": "int",
            "(66, 72)": "int"
        }
    ],
    [
        "forest, animal = '2imo 12 tfiqr.', 'm'\nindex = forest.index(animal)\nresult = list(forest)\nwhile index < len(forest)-1:\n    result[index] = forest[index+1]\n    index += 1\nif index == len(forest)-1:\n    result[index] = '-'\nf = ''.join(result)",
        "'2io 12 tfiqr.-'",
        {
            "(173, 195)": "True\n"
        },
        {
            "(60, 66)": "str",
            "(77, 81)": "type",
            "(82, 88)": "str",
            "(96, 101)": "int",
            "(173, 178)": "int",
            "(233, 239)": "list",
            "(47, 53)": "str",
            "(123, 129)": "list",
            "(130, 135)": "int",
            "(139, 145)": "str",
            "(201, 207)": "list",
            "(208, 213)": "int",
            "(104, 107)": "builtin_function_or_method",
            "(108, 114)": "str",
            "(146, 151)": "int",
            "(182, 185)": "builtin_function_or_method",
            "(186, 192)": "str"
        }
    ],
    [
        "tuple_list, joint = (32332, 23543, 132323, 33300), ','\nstring = ''\nfor num in tuple_list:\n    string += dict.fromkeys(str(num), joint * len(str(num))).popitem()[0] + joint\nf = string",
        "'2,4,2,0,'",
        {},
        {
            "(78, 88)": "tuple",
            "(176, 182)": "str",
            "(166, 171)": "str",
            "(104, 108)": "type",
            "(118, 121)": "type",
            "(122, 125)": "int",
            "(128, 133)": "str",
            "(136, 139)": "builtin_function_or_method",
            "(140, 143)": "type",
            "(144, 147)": "int"
        }
    ],
    [
        "numbers, index = [-2, 4, -4], 0\nfor n in numbers[index:]:\n    numbers.insert(index, n)\n    index += 1\nf = numbers[:index]",
        "[-2, 4, -4]",
        {},
        {
            "(41, 48)": "list",
            "(106, 113)": "list",
            "(49, 54)": "int",
            "(77, 82)": "int",
            "(84, 85)": "int",
            "(115, 120)": "int",
            "(62, 69)": "list"
        }
    ],
    [
        "text = '697 this is the ultimate 7 address to attack'\nfor c in text:\n    if c.isdigit():\n        if c == '0':\n            c = '.'\n        else:\n            c = '0' if c != '1' else '.'\nf = ''.join(list(text)).replace('.', '0')",
        "'697 this is the ultimate 7 address to attack'",
        {},
        {
            "(63, 67)": "str",
            "(76, 77)": "str",
            "(197, 201)": "type",
            "(202, 206)": "str",
            "(167, 168)": "str"
        }
    ],
    [
        "text = ''.join(['A'] * 20)\nn = 0\nfor char in text:\n    if char.isupper():\n        n += 1\nf = n",
        "20",
        {},
        {
            "(45, 49)": "str",
            "(93, 94)": "int",
            "(58, 62)": "str"
        }
    ],
    [
        "text, suffix, num = 'friends and love', 'and', 3\nstr_num = str(num)\nf = text.endswith(suffix + str_num)",
        "False",
        {},
        {
            "(59, 62)": "type",
            "(63, 66)": "int",
            "(72, 76)": "str",
            "(86, 92)": "str",
            "(95, 102)": "str"
        }
    ],
    [
        "s, c = 'Hello There', '*'\ns = s.split(' ')\nf = ((c + \"  \") + (\"  \".join(s[::-1])))",
        "'*  There  Hello'",
        {},
        {
            "(30, 31)": "list",
            "(49, 50)": "str",
            "(72, 73)": "list"
        }
    ],
    [
        "ip, n = \"dskjs hjcdjnxhjicnn\", 4\ni = 0\nout = ''\nfor c in ip:\n    if i == n:\n        out += '\\n'\n        i = 0\n    i += 1\n    out += c\nf = out",
        "'dskj\\ns hj\\ncdjn\\nxhji\\ncnn'",
        {},
        {
            "(57, 59)": "str",
            "(138, 141)": "str",
            "(132, 133)": "str"
        }
    ],
    [
        "text, limit, char = 'tqzym', 5, 'c'\nif limit < len(text):\n    f = text[0:limit]\nf = text.ljust(limit, char)",
        "'tqzym'",
        {},
        {
            "(95, 100)": "int",
            "(102, 106)": "str",
            "(84, 88)": "str"
        }
    ],
    [
        "phrase = \"aboba 212 has 0 digits\"\nans = 0\nfor w in phrase.split():\n    for ch in w:\n        if ch == \"0\":\n            ans += 1\nf = ans",
        "1",
        {},
        {
            "(131, 134)": "int",
            "(81, 82)": "str",
            "(51, 57)": "str",
            "(95, 97)": "str"
        }
    ],
    [
        "arr = [3, 6, 4, -2, 5]\nn = [item for item in arr if item%2 == 0]\nm = n+arr\nfor i in m:\n    if m.index(i) >= len(n):\n        m.remove(i)\nf = m",
        "[6, 4, -2, 6, 4, -2]",
        {},
        {
            "(84, 85)": "list",
            "(140, 141)": "list",
            "(69, 70)": "list",
            "(71, 74)": "list",
            "(45, 48)": "list",
            "(102, 103)": "int",
            "(108, 111)": "builtin_function_or_method",
            "(112, 113)": "list",
            "(133, 134)": "int",
            "(94, 95)": "list",
            "(124, 125)": "list"
        }
    ],
    [
        "st = 'RTiGM'\nswapped = ''\nfor ch in reversed(st):\n    swapped += ch.swapcase()\nf = swapped",
        "'mgItr'",
        {},
        {
            "(83, 90)": "str",
            "(36, 44)": "type",
            "(45, 47)": "str",
            "(65, 67)": "str"
        }
    ],
    [
        "dictionary = {1: 47698, 1: 32849, 1: 38381, 3: 83607}\nwhile not dictionary.get(1, len(dictionary)):\n    dictionary.clear()\n    break\nf = dictionary",
        "{1: 38381, 3: 83607}",
        {},
        {
            "(137, 147)": "dict"
        }
    ],
    [
        "text, value = 'difkj rinpx', 'k'\nleft, _, right = text.partition(value)\nf = right + left",
        "'j rinpxdif'",
        {},
        {
            "(65, 70)": "str",
            "(76, 81)": "str",
            "(84, 88)": "str",
            "(50, 54)": "str"
        }
    ],
    [
        "text = '\u0441 bishop.Swift'\nresult = ''\nfor char in text:\n    if char.isalnum():\n        result += char.upper()\nf = result",
        "'\u0421BISHOPSWIFT'",
        {},
        {
            "(48, 52)": "str",
            "(112, 118)": "str",
            "(61, 65)": "str",
            "(95, 99)": "str"
        }
    ],
    [
        "text, space_symbol, size = 'w', '))', 7\nspaces = ''.join(space_symbol for i in range(size-len(text)))\nf = text + spaces",
        "'w))))))))))))'",
        {},
        {
            "(106, 110)": "str",
            "(113, 119)": "str",
            "(57, 69)": "str",
            "(79, 84)": "type",
            "(85, 89)": "int",
            "(90, 93)": "builtin_function_or_method",
            "(94, 98)": "str"
        }
    ],
    [
        "lst = [5, 8, 1, 3, 0]\nlst.sort()\nf = lst[0:3]",
        "[0, 1, 3]",
        {},
        {
            "(37, 40)": "list",
            "(22, 25)": "list"
        }
    ],
    [
        "text, lower, upper = '=xtanp|sugv?z', 3, 6\nf = text[lower:upper].isascii()",
        "True",
        {},
        {
            "(47, 51)": "str",
            "(52, 57)": "int",
            "(58, 63)": "int"
        }
    ],
    [
        "graph = {}\nnew_graph = {}\nfor key, value in graph.items():\n    new_graph[key] = {}\n    for subkey in value:\n        new_graph[key][subkey] = ''\nf = new_graph",
        "{}",
        {},
        {
            "(148, 157)": "dict"
        }
    ],
    [
        "XAAXX, s = 'aaXXXXbbXXXXccXXXXde', 'QW'\ncount = 0\nidx = -1\nwhile XAAXX.find('XXXX', idx+1) != -1:\n    idx = XAAXX.find('XXXX', idx+1) \n    count += 1 \ncompound = count * s.title()\nf = XAAXX.replace('XXXX', compound)",
        "'aaQwQwQwbbQwQwQwccQwQwQwde'",
        {},
        {
            "(162, 167)": "int",
            "(206, 214)": "str",
            "(184, 189)": "str",
            "(65, 70)": "str",
            "(84, 87)": "int",
            "(108, 113)": "str",
            "(127, 130)": "int",
            "(170, 171)": "str"
        }
    ],
    [
        "text, new_value, index = 'spain', 'b', 4\nkey = text.maketrans(text[index], new_value)\nf = text.translate(key)",
        "'spaib'",
        {},
        {
            "(75, 84)": "str",
            "(105, 108)": "dict",
            "(47, 51)": "str",
            "(62, 66)": "str",
            "(67, 72)": "int",
            "(90, 94)": "str"
        }
    ],
    [
        "text = 'taole'\nls = list(text)\ntotal = (len(text) - 1) * 2\nfor i in range(1, total+1):\n    if i % 2:\n        ls.append('+')\n    else:\n        ls.insert(0, '+')\nf = ''.join(ls).rjust(total)",
        "'++++taole++++'",
        {},
        {
            "(20, 24)": "type",
            "(25, 29)": "str",
            "(68, 73)": "type",
            "(182, 187)": "int",
            "(77, 82)": "int",
            "(94, 95)": "int",
            "(40, 43)": "builtin_function_or_method",
            "(44, 48)": "str",
            "(172, 174)": "list",
            "(109, 111)": "list",
            "(142, 144)": "list"
        }
    ],
    [
        "nums, number = [12, 0, 13, 4, 12], 12\nf = nums.count(number)",
        "2",
        {},
        {
            "(53, 59)": "int",
            "(42, 46)": "list"
        }
    ],
    [
        "nums = [3, 4, 1, 2, 3]\ncount = len(nums) // 2\nfor _ in range(count):\n    nums.pop(0)\nf = nums",
        "[1, 2, 3]",
        {},
        {
            "(89, 93)": "list",
            "(55, 60)": "type",
            "(61, 66)": "int",
            "(31, 34)": "builtin_function_or_method",
            "(35, 39)": "list",
            "(73, 77)": "list"
        }
    ],
    [
        "array = []\nfor i in range(len(array)):\n    if array[i] < 0:\n        array.pop(i)\nf = array",
        "[]",
        {},
        {
            "(85, 90)": "list"
        }
    ],
    [
        "list_x = [5, 8, 6, 8, 4]\nitem_count = len(list_x)\nnew_list = []\nfor i in range(item_count):\n    new_list.append(list_x.pop())\nf = new_list",
        "[4, 8, 6, 8, 5]",
        {},
        {
            "(130, 138)": "list",
            "(38, 41)": "builtin_function_or_method",
            "(42, 48)": "list",
            "(73, 78)": "type",
            "(79, 89)": "int",
            "(96, 104)": "list",
            "(112, 118)": "list"
        }
    ],
    [
        "lst = [1, 2, 3]\nlst[1:4] = lst[1:4][::-1]\nf = lst",
        "[1, 3, 2]",
        {},
        {
            "(46, 49)": "list",
            "(16, 19)": "list",
            "(27, 30)": "list"
        }
    ],
    [
        "s, amount = '\\n', 2\nlines = s.splitlines()\nw = max(map(lambda l: l.rfind(' '), lines))\nls = [[l, (w + 1) * amount - l.rfind(' ')] for l in lines]\nfor i, line in enumerate(ls):\n    ls[i][0] = line[0] + ' ' * line[1]\nf = '\\n'.join(map(lambda l: l[0], ls))",
        "' '",
        {},
        {
            "(47, 50)": "builtin_function_or_method",
            "(161, 170)": "type",
            "(171, 173)": "list",
            "(28, 29)": "str",
            "(51, 54)": "type",
            "(79, 84)": "list",
            "(139, 144)": "list",
            "(229, 232)": "type",
            "(249, 251)": "list",
            "(180, 182)": "list",
            "(183, 184)": "int",
            "(191, 195)": "list",
            "(107, 113)": "int",
            "(207, 211)": "list",
            "(98, 99)": "int"
        }
    ],
    [
        "text, to_place = 'some text', 'some'\nafter_place = text[:text.find(to_place, 0) + 1]\nbefore_place = text[text.find(to_place, 0) + 1:]\nf = after_place + before_place",
        "'some text'",
        {},
        {
            "(51, 55)": "str",
            "(100, 104)": "str",
            "(138, 149)": "str",
            "(152, 164)": "str",
            "(67, 75)": "str",
            "(115, 123)": "str",
            "(57, 61)": "str",
            "(105, 109)": "str"
        }
    ],
    [
        "text = 'Hey DUdE THis $nd^ &*&this@#'\ntext = list(text)\nfor i in range(len(text)):\n    if i % 2 == 1:\n        text[i] = text[i].swapcase()\nf = ''.join(text)",
        "'HEy Dude tHIs $Nd^ &*&tHiS@#'",
        {},
        {
            "(45, 49)": "type",
            "(50, 54)": "list",
            "(65, 70)": "type",
            "(151, 155)": "list",
            "(71, 74)": "builtin_function_or_method",
            "(75, 79)": "list",
            "(90, 91)": "int",
            "(110, 114)": "list",
            "(115, 116)": "int",
            "(120, 124)": "list",
            "(125, 126)": "int"
        }
    ],
    [
        "array, n = [0, 0, 1, 2, 2, 2, 2], 4\nf = array[n:]",
        "[2, 2, 2]",
        {},
        {
            "(40, 45)": "list",
            "(46, 47)": "int"
        }
    ],
    [
        "nums = [7, 1, 2, 6, 0, 2]\n# Pass in a copy to avoid modifying nums\nnums = nums[:]\ncount = len(nums)\nfor i in range(-count+1, 0):\n    nums.insert(0, nums[i])\nf = nums",
        "[2, 0, 6, 2, 1, 7, 1, 2, 6, 0, 2]",
        {},
        {
            "(161, 165)": "list",
            "(74, 78)": "list",
            "(90, 93)": "builtin_function_or_method",
            "(94, 98)": "list",
            "(109, 114)": "type",
            "(116, 121)": "int",
            "(133, 137)": "list",
            "(148, 152)": "list",
            "(153, 154)": "int"
        }
    ],
    [
        "nums = [-1, 5, 3, -2, -6, 8, 8]\na = -1\nb = nums[1:]\nwhile a <= b[0]:\n    nums.remove(b[0])\n    a = 0\n    b = b[1:]\nf = nums",
        "[-1, -2, -6, 8, 8]",
        {},
        {
            "(119, 123)": "list",
            "(43, 47)": "list",
            "(58, 59)": "int",
            "(63, 64)": "list",
            "(109, 110)": "list",
            "(73, 77)": "list",
            "(85, 86)": "list"
        }
    ],
    [
        "s = \"qwfasgahh329kn12a23\"\ncount = 0\ndigits = \"\"\nfor c in s:\n    if c.isdigit():\n        count += 1\n        digits += c\nf = [digits, count]",
        "['3291223', 7]",
        {},
        {
            "(57, 58)": "str",
            "(124, 130)": "str",
            "(132, 137)": "int",
            "(117, 118)": "str",
            "(67, 68)": "str"
        }
    ],
    [
        "dic = {'b': 1, 'a': 2}\nf = sorted(dic.items(), key=lambda x: x[0])",
        "[('a', 2), ('b', 1)]",
        {},
        {
            "(27, 33)": "builtin_function_or_method",
            "(34, 37)": "dict"
        }
    ],
    [
        "text = \"echo hello!!! nice!\"\nls = text.split()\nlines = \" \".join(ls[::3]).splitlines()\nres = []\nfor i in range(2):\n    ln = ls[1::3]\n    if 3 * i + 1 < len(ln):\n        res.append(\" \".join(ln[3 * i:3 * (i + 1)]))\nf = lines + res",
        "['echo']",
        {},
        {
            "(104, 109)": "type",
            "(216, 221)": "list",
            "(224, 227)": "list",
            "(34, 38)": "str",
            "(123, 125)": "list",
            "(64, 66)": "list"
        }
    ],
    [
        "digits = [1,2]\ndigits.reverse()\nif len(digits) < 2:\n    f = digits\nfor i in range(0, len(digits), 2):\n    digits[i], digits[i+1] = digits[i+1], digits[i]\nf = digits",
        "[1, 2]",
        {},
        {
            "(158, 164)": "list",
            "(76, 81)": "type",
            "(15, 21)": "list",
            "(85, 88)": "builtin_function_or_method",
            "(89, 95)": "list",
            "(106, 112)": "list",
            "(113, 114)": "int",
            "(117, 123)": "list",
            "(131, 137)": "list",
            "(144, 150)": "list",
            "(151, 152)": "int",
            "(124, 125)": "int",
            "(138, 139)": "int"
        }
    ],
    [
        "L = [16, 14, 12, 7, 9, 11]\nN = len(L)\nfor k in range(1, N//2 + 1):\n    i = k - 1\n    j = N - k\n    while i < j:\n        # swap elements:\n        L[i], L[j] = L[j], L[i]\n        # update i, j:\n        i += 1\n        j -= 1\nf = L",
        "[11, 14, 7, 12, 9, 16]",
        {},
        {
            "(226, 227)": "list",
            "(31, 34)": "builtin_function_or_method",
            "(35, 36)": "list",
            "(47, 52)": "type",
            "(75, 76)": "int",
            "(89, 90)": "int",
            "(93, 94)": "int",
            "(105, 106)": "int",
            "(109, 110)": "int",
            "(56, 57)": "int",
            "(145, 146)": "list",
            "(147, 148)": "int",
            "(151, 152)": "list",
            "(153, 154)": "int",
            "(158, 159)": "list",
            "(160, 161)": "int",
            "(164, 165)": "list",
            "(166, 167)": "int"
        }
    ],
    [
        "text = 'pvtso'\nf = ' '.join(map(str.lstrip, text.split()))",
        "'pvtso'",
        {},
        {
            "(28, 31)": "type",
            "(32, 35)": "type",
            "(44, 48)": "str"
        }
    ],
    [
        "d, index = {27:39}, 1\nlength = len(d.items())\nidx = index % length\nv = d.popitem()[1]\nfor _ in range(idx):\n    d.popitem()\nf = v",
        "39",
        {},
        {
            "(127, 128)": "int",
            "(31, 34)": "builtin_function_or_method",
            "(52, 57)": "int",
            "(60, 66)": "int",
            "(35, 36)": "dict",
            "(71, 72)": "dict"
        }
    ],
    [
        "strings = [\"a\", \"b\", \"car\", \"d\"]\nnew_strings = []\nfor string in strings:\n    first_two = string[:2]\n    if first_two.startswith('a') or first_two.startswith('p'):\n        new_strings.append(first_two)\n\nf = new_strings",
        "['a']",
        {},
        {
            "(64, 71)": "list",
            "(206, 217)": "list",
            "(89, 95)": "str",
            "(190, 199)": "str",
            "(107, 116)": "str",
            "(136, 145)": "str",
            "(171, 182)": "list"
        }
    ],
    [
        "out, mapping = \"{{{{}}}}\", {}\nfor key in mapping:\n    out.format_map(mapping)\n    if len(re.findall(r'{\\w}', out)) == 0:\n        break\n    mapping[key][1] = mapping[key][1][::-1]\nf = out",
        "'{{{{}}}}'",
        {},
        {
            "(183, 186)": "str"
        }
    ],
    [
        "text = '980jio80jic kld094398IIl '\nshort = ''\nfor c in text:\n    if(c.islower()):\n        short += c\nf = short",
        "'jiojickldl'",
        {},
        {
            "(55, 59)": "str",
            "(105, 110)": "str",
            "(99, 100)": "str",
            "(68, 69)": "str"
        }
    ],
    [
        "text, suffix = '!klcd!ma:ri', '!'\noutput = text\nwhile text.endswith(suffix):\n    output = text[:-len(suffix)]\n    text = output\nf = output",
        "'!klcd!ma:ri'",
        {},
        {
            "(43, 47)": "str",
            "(132, 138)": "str"
        }
    ],
    [
        "string = '1::1'\ncount = string.count(':')\nf = string.replace(':', '', count - 1)",
        "'1:1'",
        {},
        {
            "(24, 30)": "str",
            "(46, 52)": "str",
            "(70, 75)": "int"
        }
    ],
    [
        "matr, insert_loc = [[5, 6, 2, 3], [1, 9, 5, 6]], 0\nmatr.insert(insert_loc, [])\nf = matr",
        "[[], [5, 6, 2, 3], [1, 9, 5, 6]]",
        {},
        {
            "(83, 87)": "list",
            "(63, 73)": "int",
            "(51, 55)": "list"
        }
    ],
    [
        "text = 'ilfdoirwirmtoibsac'\nfor p in ['acs', 'asp', 'scn']:\n    text = text.removeprefix(p) + ' '\nf = text.removeprefix(' ')[:-1]",
        "'ilfdoirwirmtoibsac  '",
        {},
        {
            "(89, 90)": "str",
            "(102, 106)": "str",
            "(71, 75)": "str"
        }
    ],
    [
        "text = \"398 Is A Poor Year To Sow\"\ntext = text.replace(' x', ' x.')\nif text.istitle(): f = 'correct'\ntext = text.replace(' x.', ' x')\nf = 'mixed'",
        "'correct'",
        {
            "(71, 85)": "True\n"
        },
        {
            "(42, 46)": "str",
            "(71, 75)": "str",
            "(108, 112)": "str"
        }
    ],
    [
        "temp, timeLimit = 1, 1234567890\ns = timeLimit // temp\ne = timeLimit % temp\nf = [f'{e} oC', f'{s} {e}'][s > 1]",
        "'1234567890 0'",
        {},
        {
            "(36, 45)": "int",
            "(49, 53)": "int",
            "(58, 67)": "int",
            "(70, 74)": "int",
            "(103, 104)": "int",
            "(83, 84)": "int",
            "(94, 95)": "int",
            "(98, 99)": "int"
        }
    ],
    [
        "text, strip_chars = 'tcmfsmj', 'cfj'\nf = text[::-1].strip(strip_chars)[::-1]",
        "'tcmfsm'",
        {},
        {
            "(58, 69)": "str",
            "(41, 45)": "str"
        }
    ],
    [
        "str, char = 'mnmnj krupa...##!@#!@#$$@##', '@'\nbase = char * (str.count(char) + 1)\nf = str.removesuffix(base)",
        "'mnmnj krupa...##!@#!@#$$@##'",
        {},
        {
            "(54, 58)": "str",
            "(104, 108)": "str",
            "(87, 90)": "str",
            "(72, 76)": "str",
            "(62, 65)": "str"
        }
    ],
    [
        "text, value = 'jao mt', 'house'\nlength = len(text)\nindex = 0\nwhile length > 0:\n    value = text[index] + value\n    length -= 1\n    index += 1\nf = value",
        "'tm oajhouse'",
        {},
        {
            "(146, 151)": "str",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str",
            "(67, 73)": "int",
            "(105, 110)": "str",
            "(91, 95)": "str",
            "(96, 101)": "int"
        }
    ],
    [
        "text = '--4yrw 251-//4 6p'\nchars = []\nfor c in text:\n    if c.isdigit():\n        chars.append(c)\nf = ''.join(chars[::-1])",
        "'641524'",
        {},
        {
            "(47, 51)": "str",
            "(109, 114)": "list",
            "(60, 61)": "str",
            "(94, 95)": "str",
            "(81, 86)": "list"
        }
    ],
    [
        "array, list = [2, 15], [15, 1]\narray.extend(list)\n[e for e in array if e % 2 == 0]\nf = [e for e in array if e >= 10]",
        "[15, 15]",
        {},
        {
            "(44, 48)": "list",
            "(31, 36)": "list",
            "(62, 67)": "list",
            "(99, 104)": "list"
        }
    ],
    [
        "d = {'a': 3, 'b': -1, 'c': 'Dum'}\nd.clear()\nf = d",
        "{}",
        {},
        {
            "(48, 49)": "dict",
            "(34, 35)": "dict"
        }
    ],
    [
        "name = \"master. \"\nf = [name[0], name[1][::-1][0]]",
        "['m', 'a']",
        {},
        {
            "(23, 27)": "str",
            "(32, 36)": "str"
        }
    ],
    [
        "a = \"##fiu##nk#he###wumun##\"\nfor _ in range(10):\n    for j in range(len(a)):\n        if a[j] != '#':\n            a = a[j:]\n            break\n    else:\n        a = \"\"\n        break\nwhile a[-1] == '#':\n    a = a[:-1]\nf = a",
        "'fiu##nk#he###wumun'",
        {},
        {
            "(219, 220)": "str",
            "(38, 43)": "type",
            "(62, 67)": "type",
            "(186, 187)": "str",
            "(208, 209)": "str",
            "(68, 71)": "builtin_function_or_method",
            "(72, 73)": "str",
            "(88, 89)": "str",
            "(90, 91)": "int",
            "(117, 118)": "str",
            "(119, 120)": "int"
        }
    ],
    [
        "a = ' h e l l o   w o r l d! '\nf = ' '.join(a.split())",
        "'h e l l o w o r l d!'",
        {},
        {
            "(44, 45)": "str"
        }
    ],
    [
        "commands = [{\"brown\": 2}, {\"blue\": 5}, {\"bright\": 4}]\nd = {}\nfor c in commands:\n    d.update(c)\nf = d",
        "{'brown': 2, 'blue': 5, 'bright': 4}",
        {},
        {
            "(70, 78)": "list",
            "(100, 101)": "dict",
            "(93, 94)": "dict",
            "(84, 85)": "dict"
        }
    ],
    [
        "items = ['123', 'cat', 'd dee']\nresult = []\nfor item in items:\n    for d in item:\n        if not d.isdigit():\n            result.append(d)\nf = result",
        "['c', 'a', 't', 'd', ' ', 'd', 'e', 'e']",
        {},
        {
            "(56, 61)": "list",
            "(143, 149)": "list",
            "(76, 80)": "str",
            "(136, 137)": "str",
            "(97, 98)": "str",
            "(122, 128)": "list"
        }
    ],
    [
        "prefix, s = 'hymi', 'hymifulhxhzpnyihyf'\nf = str.removeprefix(prefix, s)",
        "'hymi'",
        {},
        {
            "(62, 68)": "str",
            "(70, 71)": "str",
            "(45, 48)": "type"
        }
    ],
    [
        "n, m, num = 46, 48, 21\nx_list = list(range(n, m+1))\nj = 0\nwhile True:\n    j = (j + num) % len(x_list)\n    if x_list[j] % 2 == 0:\n        f = x_list[j]",
        "46",
        {},
        {
            "(32, 36)": "type",
            "(37, 42)": "type",
            "(43, 44)": "int",
            "(46, 47)": "int",
            "(79, 80)": "int",
            "(83, 86)": "int",
            "(90, 93)": "builtin_function_or_method",
            "(94, 100)": "list",
            "(141, 147)": "list",
            "(148, 149)": "int",
            "(109, 115)": "list",
            "(116, 117)": "int"
        }
    ],
    [
        "s = \"abca dea ead\"\ncount = 0\nfor c in s:\n    if s.rindex(c) != s.index(c):\n        count+=1\nf = count",
        "10",
        {},
        {
            "(38, 39)": "str",
            "(96, 101)": "int",
            "(57, 58)": "str",
            "(71, 72)": "str",
            "(48, 49)": "str",
            "(63, 64)": "str"
        }
    ],
    [
        "nums = [1, -9, 7, 2, 6, -3, 3]\nfor _ in range(len(nums) - 1):\n    nums.reverse()\nf = nums",
        "[1, -9, 7, 2, 6, -3, 3]",
        {},
        {
            "(85, 89)": "list",
            "(40, 45)": "type",
            "(46, 49)": "builtin_function_or_method",
            "(50, 54)": "list",
            "(66, 70)": "list"
        }
    ],
    [
        "s = \"(ac)\"\nf = s.replace('(', '[').replace(')', ']')",
        "'[ac]'",
        {},
        {
            "(15, 16)": "str"
        }
    ],
    [
        "sample = 'present/here/car%2Fwe'\ni = -1\nwhile sample.find('/', i+1) != -1:\n    i = sample.find('/', i+1)\nf = sample.rindex('/', 0, i)",
        "7",
        {},
        {
            "(131, 132)": "int",
            "(109, 115)": "str",
            "(46, 52)": "str",
            "(63, 64)": "int",
            "(83, 89)": "str",
            "(100, 101)": "int"
        }
    ],
    [
        "text = ')'\nnew_text = text\nwhile len(text) > 1 and text[0] == text[-1]:\n    new_text = text = text[1:-1]\nf = new_text",
        "')'",
        {},
        {
            "(22, 26)": "str",
            "(109, 117)": "str"
        }
    ],
    [
        "letters = \"dp ef1 gh2\"\ncount = 0\nfor l in letters:\n    if l.isdigit():\n        count += 1\nf = count",
        "2",
        {},
        {
            "(42, 49)": "str",
            "(94, 99)": "int",
            "(58, 59)": "str"
        }
    ],
    [
        "string, sep = 'caabcfcabfc', 'ab'\ncnt = string.count(sep)\nreturn((string+sep) * cnt)[::-1]",
        "'bacfbacfcbaacbacfbacfcbaac'",
        {},
        {
            "(53, 56)": "str",
            "(40, 46)": "str"
        }
    ],
    [
        "s1, s2 = \"Hello\", \")\"\nfor k in range(0, len(s2)+len(s1)):\n    s1 += s1[0]\n    if s1.find(s2) >= 0:\n        f = True\nf = False",
        "False",
        {},
        {
            "(31, 36)": "type",
            "(68, 70)": "str",
            "(40, 43)": "builtin_function_or_method",
            "(44, 46)": "str",
            "(48, 51)": "builtin_function_or_method",
            "(52, 54)": "str"
        }
    ],
    [
        "text, m, n = \"abcdefgabc\", 1, 2\ntext = \"{}{}{}\".format(text, text[:m], text[n:])\nresult = \"\"\nfor i in range(n, len(text)-m):\n    result = text[i] + result\nf = result",
        "'bagfedcacbagfedc'",
        {},
        {
            "(159, 165)": "str",
            "(55, 59)": "str",
            "(102, 107)": "type",
            "(108, 109)": "int",
            "(61, 65)": "str",
            "(71, 75)": "str",
            "(121, 122)": "int",
            "(148, 154)": "str",
            "(67, 68)": "int",
            "(76, 77)": "int",
            "(111, 114)": "builtin_function_or_method",
            "(115, 119)": "str",
            "(138, 142)": "str",
            "(143, 144)": "int"
        }
    ],
    [
        "text, delim = 'bpxa24fc5.', '.'\nfirst, second = text.split(delim)\nf = second + delim + first",
        "'.bpxa24fc5'",
        {},
        {
            "(59, 64)": "str",
            "(87, 92)": "str",
            "(48, 52)": "str",
            "(70, 76)": "str",
            "(79, 84)": "str"
        }
    ],
    [
        "mess, char = '0aabbaa0b', 'a'\nwhile mess.find(char, mess.rindex(char) + 1) != -1:\n    mess = mess[:mess.rindex(char) + 1] + mess[mess.rindex(char) + 2:]\nf = mess",
        "'0aabbaa0b'",
        {},
        {
            "(157, 161)": "str"
        }
    ],
    [
        "array, target = [1, 2, -1, 4], 2\ncount, i = 0, 1\nfor j in range(1, len(array)):\n    if ((array[j] > array[j-1]) and (array[j] <= target)): count += i\n    elif array[j] <= array[j-1]: i = 1\n    else: i += 1\nf = count",
        "1",
        {},
        {
            "(210, 215)": "int",
            "(58, 63)": "type",
            "(67, 70)": "builtin_function_or_method",
            "(71, 76)": "list",
            "(148, 149)": "int",
            "(129, 135)": "int",
            "(89, 94)": "list",
            "(95, 96)": "int",
            "(100, 105)": "list",
            "(117, 122)": "list",
            "(123, 124)": "int",
            "(159, 164)": "list",
            "(165, 166)": "int",
            "(171, 176)": "list",
            "(106, 107)": "int",
            "(177, 178)": "int"
        }
    ],
    [
        "array, value = ['23'], 123\narray.reverse()\narray.pop()\nodd = []\nwhile len(array) > 0:\n    tmp = {}\n    tmp[array.pop()] = value\n    odd.append(tmp)\nresult = {}\nwhile len(odd) > 0:\n    result.update(odd.pop())\nf = result",
        "{}",
        {},
        {
            "(213, 219)": "dict",
            "(27, 32)": "list",
            "(43, 48)": "list"
        }
    ],
    [
        "nums = [1, 3]\nfor i in range(len(nums)):\n    if nums[i] % 3 == 0:\n        nums.append(nums[i])\nf = nums",
        "[1, 3, 3]",
        {},
        {
            "(99, 103)": "list",
            "(23, 28)": "type",
            "(29, 32)": "builtin_function_or_method",
            "(33, 37)": "list",
            "(48, 52)": "list",
            "(53, 54)": "int",
            "(74, 78)": "list",
            "(86, 90)": "list",
            "(91, 92)": "int"
        }
    ],
    [
        "text = 'Manolo'\ntext = text.lower()\nhead, tail = text[0], text[1:]\nf = head.upper() + tail",
        "'Manolo'",
        {},
        {
            "(86, 90)": "str",
            "(23, 27)": "str",
            "(49, 53)": "str",
            "(58, 62)": "str",
            "(71, 75)": "str"
        }
    ],
    [
        "text, splitter = 'LlTHH sAfLAPkPhtsWP', '#'\nf = splitter.join(text.lower().split())",
        "'llthh#saflapkphtswp'",
        {},
        {
            "(48, 56)": "str",
            "(62, 66)": "str"
        }
    ],
    [
        "dic, value = {'9m':2, 'mA':1, '10K':2, 'Lk':2}, 1\nresult = []\nfor e in dic:\n    result.append(e[0])\n    if e[1] == value:\n        result.reverse()\n    else:\n        result.append(e[1])\nf = result",
        "['9', 'm', 'm', 'A', '1', '0', 'L', 'k']",
        {},
        {
            "(71, 74)": "dict",
            "(189, 195)": "list",
            "(80, 86)": "list",
            "(94, 95)": "str",
            "(165, 171)": "list",
            "(179, 180)": "str"
        }
    ],
    [
        "text = '102x0zoq'\nresult = ''\ni = len(text)-1\nwhile i >= 0:\n    c = text[i]\n    if c.isalpha():\n        result += c\n    i -= 1\nf = result",
        "'qozx'",
        {},
        {
            "(131, 137)": "str",
            "(52, 53)": "int",
            "(34, 37)": "builtin_function_or_method",
            "(38, 42)": "str",
            "(68, 72)": "str",
            "(73, 74)": "int",
            "(114, 115)": "str",
            "(83, 84)": "str"
        }
    ],
    [
        "years = [1872, 1995, 1945]\na10 = sum(1 for x in years if x <= 1900)\na90 = sum(1 for x in years if x > 1910)\nif a10 > 3:\n    f = 3\nelif a90 > 3:\n    f = 1\nelse:\n    f = 2",
        "2",
        {},
        {
            "(33, 36)": "builtin_function_or_method",
            "(74, 77)": "builtin_function_or_method",
            "(48, 53)": "list",
            "(89, 94)": "list"
        }
    ],
    [
        "text, changes = 'fssnvd', 'yes'\nresult = ''\ncount = 0\nchanges = list(changes)\nfor char in text:\n    result += char if char in 'e' else changes[count % len(changes)]\n    count += (1 if char not in 'e' else 0)\nf = result",
        "'yesyes'",
        {},
        {
            "(90, 94)": "str",
            "(212, 218)": "str",
            "(64, 68)": "type",
            "(69, 76)": "list",
            "(110, 114)": "str",
            "(118, 122)": "str",
            "(135, 142)": "list",
            "(184, 188)": "str",
            "(143, 148)": "int",
            "(151, 154)": "builtin_function_or_method",
            "(155, 162)": "list"
        }
    ],
    [
        "xs = [1, 2, 3]\nfor idx in reversed(range(-len(xs)-1, -1)):\n    xs.insert(idx, xs.pop(0))\nf = xs",
        "[1, 2, 3]",
        {},
        {
            "(93, 95)": "list",
            "(26, 34)": "type",
            "(35, 40)": "type",
            "(73, 76)": "int",
            "(63, 65)": "list",
            "(78, 80)": "list",
            "(42, 45)": "builtin_function_or_method",
            "(46, 48)": "list"
        }
    ],
    [
        "text, char = 'wduhzxlfk', 'w'\nposition = len(text)\nif char in text:\n    position = text.index(char)\n    if position > 1:\n        position = (position + 1) % len(text)\nf = position",
        "0",
        {
            "(54, 66)": "True\n"
        },
        {
            "(171, 179)": "int",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str",
            "(54, 58)": "str",
            "(62, 66)": "str",
            "(94, 98)": "str",
            "(83, 87)": "str"
        }
    ],
    [
        "array, arr = [], []\nresult = []\nfor s in arr:\n    result += list(filter(lambda l: l != '', s.split(arr[array.index(s)])))\nf = result",
        "[]",
        {},
        {
            "(126, 132)": "list"
        }
    ],
    [
        "array = ['ac8', 'qk6', '9wg']\nif len(array) == 1:\n    f = ''.join(array)\nresult = list(array)\ni = 0\nwhile i < len(array)-1:\n    for j in range(2):\n        result[i*2] = array[i]\n        i += 1\nf = ''.join(result)",
        "'ac8qk6qk6'",
        {},
        {
            "(82, 86)": "type",
            "(87, 92)": "list",
            "(106, 107)": "int",
            "(205, 211)": "list",
            "(137, 142)": "type",
            "(110, 113)": "builtin_function_or_method",
            "(114, 119)": "list",
            "(155, 161)": "list",
            "(169, 174)": "list",
            "(175, 176)": "int",
            "(162, 163)": "int"
        }
    ],
    [
        "text, char = 'uzlwaqiaj', 'u'\nif char in text:\n    suff, char, pref = text.partition(char)\n    pref = suff[:-len(char)] + suff[len(char):] + char + pref\n    f = suff + char + pref\nf = text",
        "'uuzlwaqiaj'",
        {
            "(33, 45)": "True\n"
        },
        {
            "(184, 188)": "str",
            "(33, 37)": "str",
            "(41, 45)": "str",
            "(85, 89)": "str",
            "(148, 152)": "str",
            "(175, 179)": "str",
            "(70, 74)": "str",
            "(141, 145)": "str",
            "(161, 165)": "str",
            "(168, 172)": "str",
            "(102, 106)": "str",
            "(122, 126)": "str",
            "(127, 130)": "builtin_function_or_method",
            "(131, 135)": "str",
            "(109, 112)": "builtin_function_or_method",
            "(113, 117)": "str"
        }
    ],
    [
        "ls, n = [[1, 9, 4], [83, 0, 5], [9, 6, 100]], 1\nanswer = 0\nfor i in ls:\n    if i[0] == n:\n        answer = i\nf = answer",
        "[1, 9, 4]",
        {},
        {
            "(68, 70)": "list",
            "(113, 119)": "list",
            "(87, 88)": "int",
            "(107, 108)": "list",
            "(79, 80)": "list"
        }
    ],
    [
        "text, froms = '0 t 1cos ', 'st ' + '0\\t\\n  '\ntext = text.lstrip(froms)\ntext = text.rstrip(froms)\nf = text",
        "'1co'",
        {},
        {
            "(101, 105)": "str",
            "(64, 69)": "str",
            "(90, 95)": "str",
            "(52, 56)": "str",
            "(78, 82)": "str"
        }
    ],
    [
        "float_number = 3.121\nnumber = str(float_number)\ndot = number.find('.')\nif dot != -1:\n    f = number[:dot] + '.' + number[dot+1:].ljust(2, '0')\nf = number + '.00'",
        "'3.121'",
        {
            "(74, 83)": "True\n"
        },
        {
            "(30, 33)": "type",
            "(34, 46)": "float",
            "(74, 77)": "int",
            "(147, 153)": "str",
            "(54, 60)": "str",
            "(93, 99)": "str",
            "(101, 104)": "int",
            "(114, 120)": "str",
            "(121, 124)": "int"
        }
    ],
    [
        "postcode = 'ED20 CW'\nf = postcode[postcode.index('C'):]",
        "'CW'",
        {},
        {
            "(25, 33)": "str",
            "(34, 42)": "str"
        }
    ],
    [
        "book = \"udhv zcvi nhtnfyd :erwuyawa pun\"\na = book.rsplit(':', 1)\nif a[0].split(' ')[-1] == a[1].split(' ')[0]:\n    f = f(' '.join(a[0].split(' ')[:-1]) + ' ' + a[1])\nf = book",
        "'udhv zcvi nhtnfyd :erwuyawa pun'",
        {},
        {
            "(170, 174)": "str",
            "(45, 49)": "str"
        }
    ],
    [
        "text, char = 'abc', 'e'\nf = char.islower() and text.islower()",
        "True",
        {
            "(28, 42)": "True\n",
            "(47, 61)": "True\n",
            "(28, 61)": "True\n"
        },
        {
            "(28, 32)": "str",
            "(47, 51)": "str"
        }
    ],
    [
        "text, symbols = '', 'BC1ty'\ncount = 0\nif symbols:\n    for i in symbols:\n        count += 1\n    text = text * count\nf = text.rjust(len(text) + count*2)[:-2]",
        "'        '",
        {
            "(41, 48)": "True\n"
        },
        {
            "(41, 48)": "str",
            "(63, 70)": "str",
            "(102, 106)": "str",
            "(109, 114)": "int",
            "(119, 123)": "str",
            "(130, 133)": "builtin_function_or_method",
            "(134, 138)": "str",
            "(142, 147)": "int"
        }
    ],
    [
        "alphabet, s = 'abcdefghijklmnopqrstuvwxyz', \"uppercased # % ^ @ ! vz.\"\na = [x for x in alphabet if x.upper() in s]\nif s.upper() == s:\n    a.append('all_uppercased')\nf = a",
        "[]",
        {},
        {
            "(169, 170)": "list",
            "(87, 95)": "str",
            "(112, 113)": "str"
        }
    ],
    [
        "haystack, needle = \"345gerghjehg\", \"345\"\nfor i in range(haystack.find(needle), -1, -1):\n    if haystack[i:] == needle:\n        f = i\nf = -1",
        "-1",
        {},
        {
            "(50, 55)": "type",
            "(70, 76)": "str",
            "(56, 64)": "str"
        }
    ],
    [
        "s = 'Boolean'\nif s.isalpha():\n    f = \"yes\"\nif s == \"\":\n    f = \"str is empty\"\nf = \"no\"",
        "'yes'",
        {
            "(17, 28)": "True\n"
        },
        {
            "(17, 18)": "str"
        }
    ],
    [
        "a, b = [666], []\na.sort()\nb.sort(reverse=True)\nf = a + b",
        "[666]",
        {},
        {
            "(51, 52)": "list",
            "(55, 56)": "list",
            "(17, 18)": "list",
            "(26, 27)": "list"
        }
    ],
    [
        "s = \"FSA\"\ncount = {}\nfor i in s:\n    if i.islower():\n        count[i.lower()] = s.count(i.lower()) + count.get(i.lower(), 0)\n    else:\n        count[i.lower()] = s.count(i.upper()) + count.get(i.lower(), 0)\nf = count",
        "{'f': 1, 's': 1, 'a': 1}",
        {},
        {
            "(30, 31)": "str",
            "(211, 216)": "dict",
            "(143, 148)": "dict",
            "(149, 150)": "str",
            "(162, 163)": "str",
            "(183, 188)": "dict",
            "(170, 171)": "str",
            "(193, 194)": "str"
        }
    ],
    [
        "text = 'wlace A'\ncount = len(text)\nfor i in range(-count+1, 0):\n    text = text + text[i]\nf = text",
        "'wlace Alc l  '",
        {},
        {
            "(94, 98)": "str",
            "(25, 28)": "builtin_function_or_method",
            "(29, 33)": "str",
            "(44, 49)": "type",
            "(75, 79)": "str",
            "(51, 56)": "int",
            "(82, 86)": "str",
            "(87, 88)": "int"
        }
    ],
    [
        "messages = [['Marie','Nelson','Oscar']]\nphone_code = \"+353\"\nresult = []\nfor message in messages:\n    message.extend(phone_code)\n    result.append(\";\".join(message))\nf = \". \".join(result)",
        "'Marie;Nelson;Oscar;+;3;5;3'",
        {},
        {
            "(87, 95)": "list",
            "(179, 185)": "list",
            "(116, 126)": "str",
            "(101, 108)": "list",
            "(132, 138)": "list",
            "(155, 162)": "list"
        }
    ],
    [
        "text, char = '\\\\foo', '\\\\'\nif char in text:\n    if not text.startswith(char):\n        text = text.replace(char,'')\nf = text",
        "'\\\\foo'",
        {
            "(30, 42)": "True\n"
        },
        {
            "(119, 123)": "str",
            "(30, 34)": "str",
            "(38, 42)": "str"
        }
    ],
    [
        "text, pref = 'kumwwfv', 'k'\nlength = len(pref)\nif pref == text[:length]:\n    f = text[length:]\nf = text",
        "'umwwfv'",
        {
            "(50, 71)": "True\n"
        },
        {
            "(99, 103)": "str",
            "(37, 40)": "builtin_function_or_method",
            "(41, 45)": "str",
            "(50, 54)": "str",
            "(58, 62)": "str",
            "(81, 85)": "str",
            "(64, 70)": "int",
            "(86, 92)": "int"
        }
    ],
    [
        "text, repl = 'upper case', 'lower case'\ntrans = str.maketrans(text.lower(), repl.lower())\nf = text.translate(trans)",
        "'lwwer case'",
        {},
        {
            "(109, 114)": "dict",
            "(48, 51)": "type",
            "(94, 98)": "str",
            "(62, 66)": "str",
            "(76, 80)": "str"
        }
    ],
    [
        "text, fill, size = 'no asw', 'j', 1\nif size < 0:\n    size = -size\nif len(text) > size:\n    f = text[len(text) - size:]\nf = text.rjust(size, fill)",
        "'w'",
        {
            "(69, 85)": "True\n"
        },
        {
            "(81, 85)": "int",
            "(134, 138)": "int",
            "(140, 144)": "str",
            "(69, 72)": "builtin_function_or_method",
            "(73, 77)": "str",
            "(95, 99)": "str",
            "(123, 127)": "str",
            "(112, 116)": "int",
            "(100, 103)": "builtin_function_or_method",
            "(104, 108)": "str"
        }
    ],
    [
        "text, sub = 'dorfunctions', '2'\na = 0\nb = len(text) - 1\n\nwhile a <= b:\n    c = (a + b) // 2\n    if text.rfind(sub) >= c:\n        a = c + 1\n    else:\n        b = c - 1\n\nf = a",
        "0",
        {},
        {
            "(172, 173)": "int",
            "(63, 64)": "int",
            "(68, 69)": "int",
            "(42, 45)": "builtin_function_or_method",
            "(46, 50)": "str",
            "(80, 81)": "int",
            "(84, 85)": "int",
            "(161, 162)": "int"
        }
    ],
    [
        "text = ['Hello World\\n\"I am String\"']\nls = []\nfor x in text:\n    ls.append(x.splitlines())\nf = ls",
        "[['Hello World', '\"I am String\"']]",
        {},
        {
            "(55, 59)": "list",
            "(95, 97)": "list",
            "(65, 67)": "list",
            "(75, 76)": "str"
        }
    ],
    [
        "text = 'String matching is a big part of RexEx library.'\nnew_text = []\nfor character in text:\n    if character.isupper():\n        new_text.insert(len(new_text) // 2, character)\nif len(new_text) == 0:\n    new_text = ['-']\nf = ''.join(new_text)",
        "'RES'",
        {},
        {
            "(88, 92)": "str",
            "(233, 241)": "list",
            "(101, 110)": "str",
            "(166, 175)": "str",
            "(130, 138)": "list",
            "(146, 149)": "builtin_function_or_method",
            "(150, 158)": "list"
        }
    ],
    [
        "nums, start, k = [1, 2, 3, 4, 5, 6], 4, 2\nnums[start:start+k] = nums[start:start + k][::-1]\nf = nums",
        "[1, 2, 3, 4, 6, 5]",
        {},
        {
            "(96, 100)": "list",
            "(42, 46)": "list",
            "(47, 52)": "int",
            "(64, 68)": "list",
            "(53, 58)": "int",
            "(59, 60)": "int",
            "(69, 74)": "int",
            "(75, 80)": "int",
            "(83, 84)": "int"
        }
    ],
    [
        "nums, target = [12, 516, 5, 2, 3, 214, 51], 5\nlows, higgs = [], []\nfor i in nums:\n    if i < target:\n        lows.append(i)\n    else:\n        higgs.append(i)\nlows.clear()\nf = lows, higgs",
        "([], [12, 516, 5, 214, 51])",
        {},
        {
            "(76, 80)": "list",
            "(175, 179)": "list",
            "(181, 186)": "list",
            "(89, 90)": "int",
            "(93, 99)": "int",
            "(158, 162)": "list",
            "(121, 122)": "int",
            "(155, 156)": "int",
            "(109, 113)": "list",
            "(142, 147)": "list"
        }
    ],
    [
        "nums = [4, 5]\ncount = len(nums)\nscore = {0: \"F\", 1: \"E\", 2: \"D\", 3: \"C\", 4: \"B\", 5: \"A\", 6: \"\"}\nresult = []\nfor i in range(count):\n    result.append(score.get(nums[i]))\nf = ''.join(result)",
        "'BA'",
        {},
        {
            "(22, 25)": "builtin_function_or_method",
            "(26, 30)": "list",
            "(117, 122)": "type",
            "(123, 128)": "int",
            "(181, 187)": "list",
            "(135, 141)": "list",
            "(149, 154)": "dict",
            "(159, 163)": "list",
            "(164, 165)": "int"
        }
    ],
    [
        "base, delta = [\"gloss\", \"banana\", \"barn\", \"lawn\"], []\nfor j in range(len(delta)):\n    for i in range(len(base)):\n        if base[i] == delta[j][0]:\n            assert delta[j][1] != base[i]\n            base[i] = delta[j][1]\nf = base",
        "['gloss', 'banana', 'barn', 'lawn']",
        {},
        {
            "(228, 232)": "list"
        }
    ],
    [
        "test_str = \"papera\"\ns = test_str.replace('a', 'A')\nf = s.replace('e', 'A')",
        "'pApArA'",
        {},
        {
            "(24, 32)": "str",
            "(55, 56)": "str"
        }
    ],
    [
        "d, k = {1: 2, 2: 4, 3: 3}, 3\nnew_d = {}\nfor key, val in d.items():\n    if key < k:\n        new_d[key] = val\nf = new_d",
        "{1: 2, 2: 4}",
        {},
        {
            "(112, 117)": "dict",
            "(56, 57)": "dict",
            "(74, 77)": "int",
            "(80, 81)": "int",
            "(104, 107)": "int",
            "(91, 96)": "dict",
            "(97, 100)": "int"
        }
    ],
    [
        "nums = [2, 3, 4, 6, -2]\nfor i in range(len(nums)-1, -1, -1):\n    if nums[i] % 2 == 1:\n        nums.insert(i+1, nums[i])\nf = nums",
        "[2, 3, 3, 4, 6, -2]",
        {},
        {
            "(124, 128)": "list",
            "(33, 38)": "type",
            "(39, 42)": "builtin_function_or_method",
            "(43, 47)": "list",
            "(68, 72)": "list",
            "(73, 74)": "int",
            "(94, 98)": "list",
            "(106, 107)": "int",
            "(111, 115)": "list",
            "(116, 117)": "int"
        }
    ],
    [
        "text, space = 'sowpf', -7\nif space < 0:\n    f = text\nf = text.ljust(len(text) // 2 + space)",
        "'sowpf'",
        {
            "(29, 38)": "True\n"
        },
        {
            "(29, 34)": "int",
            "(48, 52)": "str",
            "(57, 61)": "str",
            "(85, 90)": "int",
            "(68, 71)": "builtin_function_or_method",
            "(72, 76)": "str"
        }
    ],
    [
        "s, separator = 'h grateful k', ' '\nfor i in range(len(s)):\n    if s[i] == separator:\n        new_s = list(s)\n        new_s[i] = '/'\n        f = ' '.join(new_s)",
        "'h / g r a t e f u l   k'",
        {},
        {
            "(44, 49)": "type",
            "(50, 53)": "builtin_function_or_method",
            "(54, 55)": "str",
            "(74, 83)": "str",
            "(66, 67)": "str",
            "(68, 69)": "int",
            "(101, 105)": "type",
            "(106, 107)": "str",
            "(117, 122)": "list",
            "(123, 124)": "int",
            "(153, 158)": "list"
        }
    ],
    [
        "array = [9, 2]\nzero_len = (len(array) - 1) % 3\nfor i in range(zero_len):\n    array[i] = '0'\nfor i in range(zero_len + 1, len(array), 3):\n    array[i - 1:i + 2] = ['0', '0', '0']\nf = array",
        "['0', 2]",
        {},
        {
            "(182, 187)": "list",
            "(56, 61)": "type",
            "(62, 70)": "int",
            "(77, 82)": "list",
            "(83, 84)": "int",
            "(27, 30)": "builtin_function_or_method",
            "(31, 36)": "list"
        }
    ],
    [
        "dic = {}\nd = {}\nfor key in dic:\n    d[key] = dic.popitem(last = False)[1]\nf = d",
        "{}",
        {},
        {
            "(78, 79)": "dict"
        }
    ],
    [
        "text, c = 'uufhl', 'l'\nls = list(text)\nif c not in text:\n    raise ValueError('Text has no {c}')\nls.pop(text.rindex(c))\nf = ''.join(ls)",
        "'uufh'",
        {},
        {
            "(28, 32)": "type",
            "(33, 37)": "str",
            "(132, 134)": "list",
            "(97, 99)": "list",
            "(116, 117)": "str",
            "(104, 108)": "str"
        }
    ],
    [
        "base_list, nums = [9, 7, 5, 3, 1], [2, 4, 6, 8, 0]\nbase_list.extend(nums)\nres = base_list.copy()\nfor i in range(-len(nums), 0):\n    res.append(res[i])\nf = res",
        "[9, 7, 5, 3, 1, 2, 4, 6, 8, 0, 2, 6, 0, 6, 6]",
        {},
        {
            "(155, 158)": "list",
            "(68, 72)": "list",
            "(106, 111)": "type",
            "(51, 60)": "list",
            "(80, 89)": "list",
            "(113, 116)": "builtin_function_or_method",
            "(117, 121)": "list",
            "(132, 135)": "list",
            "(143, 146)": "list",
            "(147, 148)": "int"
        }
    ],
    [
        "name = '.NET'\nnew_name =''\nname = name[::-1]\nfor i in range(len(name)):\n    n = name[i]\n    if n !='.' and  new_name.count('.')<2:\n        new_name=n+new_name\n    else:\n        break\nf = new_name",
        "'NET'",
        {},
        {
            "(187, 195)": "str",
            "(34, 38)": "str",
            "(54, 59)": "type",
            "(60, 63)": "builtin_function_or_method",
            "(64, 68)": "str",
            "(80, 84)": "str",
            "(85, 86)": "int",
            "(95, 96)": "str",
            "(148, 149)": "str",
            "(150, 158)": "str",
            "(108, 116)": "str"
        }
    ],
    [
        "nums, target = [1, 2, 3], 4\ncount = 0\nfor n1 in nums:\n    for n2 in nums:\n        count += (n1+n2==target)\nf = count",
        "3",
        {},
        {
            "(48, 52)": "list",
            "(111, 116)": "int",
            "(68, 72)": "list",
            "(99, 105)": "int",
            "(92, 94)": "int",
            "(95, 97)": "int"
        }
    ],
    [
        "dic = {-1: \"a\", 0: \"b\", 1: \"c\"}\ndic2 = dict(zip(dic.values(), dic.keys()))\nf = dic2",
        "{'a': -1, 'b': 0, 'c': 1}",
        {},
        {
            "(79, 83)": "dict",
            "(39, 43)": "type",
            "(44, 47)": "type",
            "(48, 51)": "dict",
            "(62, 65)": "dict"
        }
    ],
    [
        "a = []\nif len(a) >= 2 and a[0] > 0 and a[1] > 0:\n    a.reverse()\n    f = a\na.append(0)\nf = a",
        "[0]",
        {},
        {
            "(91, 92)": "list",
            "(75, 76)": "list"
        }
    ],
    [
        "lst, mode = [1, 2, 3, 4], 1\nresult = [el for el in lst]\nif mode:\n    result.reverse()\nf = result",
        "[4, 3, 2, 1]",
        {
            "(59, 63)": "True\n"
        },
        {
            "(59, 63)": "int",
            "(90, 96)": "list",
            "(51, 54)": "list",
            "(69, 75)": "list"
        }
    ],
    [
        "array1, array2 = [0, 132], [5, 991, 32, 997]\nresult = dict.fromkeys(array1)\nfor key in result:\n    result[key] = [el for el in array2 if key * 2 > el]\nf = result",
        "{0: [], 132: [5, 32]}",
        {},
        {
            "(87, 93)": "dict",
            "(155, 161)": "dict",
            "(68, 74)": "list",
            "(54, 58)": "type",
            "(99, 105)": "dict",
            "(106, 109)": "int",
            "(127, 133)": "list",
            "(137, 140)": "int"
        }
    ],
    [
        "text = \"\"\nans = ''\nwhile text != '':\n    x, sep, text = text.partition('(')\n    ans = x + sep.replace('(', '|') + ans\n    ans = ans + text[0] + ans\n    text = text[1:]\nf = ans",
        "''",
        {},
        {
            "(172, 175)": "str"
        }
    ],
    [
        "text = '00000000 00000000 01101100 01100101 01101110'\nglobal g, field\nfield = text.replace(' ', '')\ng = text.replace('0', ' ')\ntext = text.replace('1', 'i')\n\nf = text",
        "'00000000 00000000 0ii0ii00 0ii00i0i 0ii0iii0'",
        {},
        {
            "(162, 166)": "str",
            "(78, 82)": "str",
            "(104, 108)": "str",
            "(134, 138)": "str"
        }
    ],
    [
        "c, index, value = {1: 2, 3: 4, 5: 6, 'message': 'qrTHo'}, 8, 2\nc[index] = value\nif value >= 3:\n    c.update({'message' : 'xcrWt'})\nelse: \n    del c['message']\nf = c",
        "{1: 2, 3: 4, 5: 6, 8: 2}",
        {},
        {
            "(74, 79)": "int",
            "(163, 164)": "dict",
            "(63, 64)": "dict",
            "(65, 70)": "int",
            "(146, 147)": "dict"
        }
    ],
    [
        "s1, s2 = 'xinyyexyxx', 'xx'\nposition = 1\ncount = 0\nwhile position > 0:\n    position = s1.find(s2, position)\n    count += 1\n    position += 1\nf = count",
        "2",
        {},
        {
            "(145, 150)": "int",
            "(57, 65)": "int",
            "(94, 96)": "str",
            "(98, 106)": "int",
            "(86, 88)": "str"
        }
    ],
    [
        "dictionary, key = {'Iron Man': 4, 'Captain America': 3, 'Black Panther': 0,'Thor': 1, 'Ant-Man': 6}, 'Iron Man'\ndel dictionary[key]\nif min(dictionary) == key:\n    key = list(dictionary)[0]\nf = key",
        "'Iron Man'",
        {},
        {
            "(193, 196)": "str",
            "(116, 126)": "dict",
            "(127, 130)": "str"
        }
    ],
    [
        "text, prefix = 'bestest', 'bestest'\nidx = 0\nfor letter in prefix:\n    if text[idx] != letter:\n        f = None\n    idx += 1\nf = text[idx:]",
        "''",
        {},
        {
            "(58, 64)": "str",
            "(128, 132)": "str",
            "(86, 92)": "str",
            "(133, 136)": "int",
            "(73, 77)": "str",
            "(78, 81)": "int"
        }
    ],
    [
        "text, ch = \"This be Pirate's Speak for 'help'!\", ' '\n\"\"\"Counting vowels in Pirates' Curse\"\"\"\nf = text.count(ch)",
        "5",
        {},
        {
            "(108, 110)": "str",
            "(97, 101)": "str"
        }
    ],
    [
        "array, x, i = [1,2,3,4,5,6,7,8,9,10], 11, 4\nif i < -len(array) or i > len(array) - 1:\n    f = 'no'\ntemp = array[i]\narray[i] = x\nf = array",
        "[1, 2, 3, 4, 11, 6, 7, 8, 9, 10]",
        {},
        {
            "(126, 127)": "int",
            "(132, 137)": "list",
            "(106, 111)": "list",
            "(112, 113)": "int",
            "(115, 120)": "list",
            "(121, 122)": "int"
        }
    ],
    [
        "name = 'Pinneaple'\nif name.islower():\n    name = name.upper()\nelse:\n    name = name.lower()\nf = name",
        "'pinneaple'",
        {},
        {
            "(96, 100)": "str",
            "(79, 83)": "str"
        }
    ],
    [
        "d = {55: 4, 4: 555, 1: 3, 99: 21, 499: 4, 71: 7, 12: 6}\nsorted_pairs = sorted(list(d.items()), key=lambda x: len(str(str(x[0])+str(x[1]))))\nf = [(k, v) for k, v in sorted_pairs if k < v]\nf = ret",
        "[(1, 3), (4, 555)]",
        {},
        {
            "(71, 77)": "builtin_function_or_method",
            "(78, 82)": "type",
            "(164, 176)": "list",
            "(83, 84)": "dict",
            "(109, 112)": "builtin_function_or_method",
            "(113, 116)": "type",
            "(117, 120)": "type",
            "(127, 130)": "type"
        }
    ],
    [
        "code = '148'\nf = \"{}: {}\".format(code, code.encode())",
        "\"148: b'148'\"",
        {},
        {
            "(33, 37)": "str",
            "(39, 43)": "str"
        }
    ],
    [
        "text, prefix = 'abixaaaily', 'al'\nif text.startswith(prefix):\n    f = text.removeprefix(prefix)\nif prefix in text:\n    f = text.replace(prefix, '').strip()\nf = text.upper()",
        "'ABIXAAAILY'",
        {},
        {
            "(160, 164)": "str"
        }
    ],
    [
        "dictionary, arr = {}, ['a', 2]\ndictionary.update({arr[0]: [arr[1]]})\nif len(dictionary[arr[0]]) == arr[1]:\n    dictionary[arr[0]] = arr[0]\nf = dictionary",
        "{'a': [2]}",
        {},
        {
            "(143, 153)": "dict",
            "(31, 41)": "dict",
            "(50, 53)": "list",
            "(59, 62)": "list"
        }
    ],
    [
        "text = '5f83u23saa'\nnew_text = [c if c.isdigit() else '*' for c in text]\nf = ''.join(new_text)",
        "'5*83*23***'",
        {},
        {
            "(85, 93)": "list",
            "(67, 71)": "str"
        }
    ],
    [
        "text = 'dEXE'\ns = text.lower()\nfor i in range(len(s)):\n    if s[i] == 'x':\n        f = 'no'\nf = text.isupper()",
        "'no'",
        {},
        {
            "(40, 45)": "type",
            "(18, 22)": "str",
            "(46, 49)": "builtin_function_or_method",
            "(50, 51)": "str",
            "(96, 100)": "str",
            "(62, 63)": "str",
            "(64, 65)": "int"
        }
    ],
    [
        "n, m, text = \"x\", \"$\", \"2xz&5H3*1a@#a*1hris\"\nif text.strip() == '':\n    f = text\nhead, mid, tail = text[0], text[1:-1], text[-1]\njoined = head.replace(n, m) + mid.replace(n, m) + tail.replace(n, m)\nf = joined",
        "'2$z&5H3*1a@#a*1hris'",
        {},
        {
            "(202, 208)": "str",
            "(99, 103)": "str",
            "(108, 112)": "str",
            "(120, 124)": "str",
            "(192, 193)": "str",
            "(195, 196)": "str",
            "(151, 152)": "str",
            "(154, 155)": "str",
            "(171, 172)": "str",
            "(174, 175)": "str",
            "(179, 183)": "str",
            "(138, 142)": "str",
            "(159, 162)": "str"
        }
    ],
    [
        "fruits = ['apple', 'apple', 'pear', 'banana', 'pear', 'orange', 'orange']\nif fruits[-1] == fruits[0]:\n    f = 'no'\nelse:\n    fruits.pop(0)\n    fruits.pop()\n    fruits.pop(0)\n    fruits.pop()\n    f = fruits",
        "['pear', 'banana', 'pear']",
        {},
        {
            "(199, 205)": "list",
            "(125, 131)": "list",
            "(143, 149)": "list",
            "(160, 166)": "list",
            "(178, 184)": "list"
        }
    ],
    [
        "url = \"https://www.www.ekapusta.com/image/url\"\nf = url.removeprefix('http://www.')",
        "'https://www.www.ekapusta.com/image/url'",
        {},
        {
            "(51, 54)": "str"
        }
    ],
    [
        "text = 'dst vavf n dmv dfvm gamcu dgcvb.'\nnew_text = list(text)\nfor i in range(len(new_text)):\n    character = new_text[i]\n    new_character = character.swapcase()\n    new_text[i] = new_character\nf = ''.join(new_text)",
        "'DST VAVF N DMV DFVM GAMCU DGCVB.'",
        {},
        {
            "(53, 57)": "type",
            "(58, 62)": "str",
            "(73, 78)": "type",
            "(182, 195)": "str",
            "(208, 216)": "list",
            "(79, 82)": "builtin_function_or_method",
            "(83, 91)": "list",
            "(111, 119)": "list",
            "(120, 121)": "int",
            "(168, 176)": "list",
            "(177, 178)": "int",
            "(143, 152)": "str"
        }
    ],
    [
        "text, char = 'staovk', 'k'\nif not text.endswith(char):\n    f = f(char + text, char)\nf = text",
        "'staovk'",
        {},
        {
            "(88, 92)": "str"
        }
    ],
    [
        "nums = [1, 2, 3]\ncount = 1\nfor i in range(count, len(nums) - 1, 2):\n    nums[i] = max(nums[i], nums[count-1])\n    count += 1\nf = nums",
        "[1, 2, 3]",
        {},
        {
            "(129, 133)": "list",
            "(36, 41)": "type",
            "(42, 47)": "int",
            "(72, 76)": "list",
            "(77, 78)": "int",
            "(82, 85)": "builtin_function_or_method",
            "(49, 52)": "builtin_function_or_method",
            "(53, 57)": "list",
            "(86, 90)": "list",
            "(91, 92)": "int",
            "(95, 99)": "list",
            "(100, 105)": "int"
        }
    ],
    [
        "nums = [0, 6, 2, -1, -2]\ncount = len(nums)\nfor i in range(-count+1, 0):\n    nums.extend([nums[i], nums[i]])\nf = nums",
        "[0, 6, 2, -1, -2, 6, 6, -2, -2, -2, -2, -2, -2]",
        {},
        {
            "(112, 116)": "list",
            "(33, 36)": "builtin_function_or_method",
            "(37, 41)": "list",
            "(52, 57)": "type",
            "(59, 64)": "int",
            "(76, 80)": "list",
            "(89, 93)": "list",
            "(94, 95)": "int",
            "(98, 102)": "list",
            "(103, 104)": "int"
        }
    ],
    [
        "string = 'wdeejjjzsjsjjsxjjneddaddddddefsfd'\nf = string.replace('needles', 'haystacks')",
        "'wdeejjjzsjsjjsxjjneddaddddddefsfd'",
        {},
        {
            "(49, 55)": "str"
        }
    ],
    [
        "text = 'mJkLbn'\ni = (len(text) + 1) // 2\nresult = list(text)\nwhile i < len(text):\n    t = result[i].lower()\n    if t == result[i]:\n        i += 1\n    else:\n        result[i] = t\n    i += 2\nf = ''.join(result)",
        "'mJklbn'",
        {},
        {
            "(50, 54)": "type",
            "(55, 59)": "str",
            "(67, 68)": "int",
            "(201, 207)": "list",
            "(71, 74)": "builtin_function_or_method",
            "(75, 79)": "str",
            "(176, 177)": "str",
            "(21, 24)": "builtin_function_or_method",
            "(25, 29)": "str",
            "(164, 170)": "list",
            "(171, 172)": "int",
            "(90, 96)": "list",
            "(97, 98)": "int"
        }
    ],
    [
        "d = {2: 3, 17: 3, 16: 6, 18: 6, 87: 7}\nkey1 = sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\nval1 = d.pop(key1)\nkey2 = sorted(d.items(), key=lambda x: x[0], reverse=True)[0][0]\nval2 = d.pop(key2)\nf = dict({key1: val1, key2: val2})",
        "{87: 7, 18: 6}",
        {},
        {
            "(117, 121)": "int",
            "(201, 205)": "int",
            "(211, 215)": "type",
            "(111, 112)": "dict",
            "(195, 196)": "dict",
            "(217, 221)": "int",
            "(229, 233)": "int",
            "(223, 227)": "int",
            "(235, 239)": "int",
            "(46, 52)": "builtin_function_or_method",
            "(130, 136)": "builtin_function_or_method",
            "(53, 54)": "dict",
            "(137, 138)": "dict"
        }
    ],
    [
        "text, char = 'o horseto', 'r'\nlength = len(text)\nindex = -1\nfor i in range(length):\n    if text[i] == char:\n        index = i\nif index == -1:\n    index = length // 2\nnew_text = list(text)\nnew_text.pop(index)\nf = ''.join(new_text)",
        "'o hoseto'",
        {},
        {
            "(39, 42)": "builtin_function_or_method",
            "(43, 47)": "str",
            "(69, 74)": "type",
            "(75, 81)": "int",
            "(177, 181)": "type",
            "(182, 186)": "str",
            "(201, 206)": "int",
            "(220, 228)": "list",
            "(102, 106)": "str",
            "(124, 125)": "int",
            "(188, 196)": "list",
            "(91, 95)": "str",
            "(96, 97)": "int"
        }
    ],
    [
        "nums = [0, 6, '1', '2', 0]\ndigits = []\nfor num in nums:\n    if (isinstance(num, str) and num.isnumeric()) or isinstance(num, int):\n        digits.append(num)\ndigits = list(map(int, digits))\nf = digits",
        "[0, 6, 1, 2, 0]",
        {},
        {
            "(50, 54)": "list",
            "(194, 200)": "list",
            "(167, 171)": "type",
            "(172, 175)": "type",
            "(176, 179)": "type",
            "(181, 187)": "list",
            "(109, 119)": "builtin_function_or_method",
            "(120, 123)": "int",
            "(125, 128)": "type",
            "(153, 156)": "int",
            "(64, 74)": "builtin_function_or_method",
            "(75, 78)": "int",
            "(80, 83)": "type",
            "(139, 145)": "list",
            "(89, 92)": "int"
        }
    ],
    [
        "text = 'pxcznyf'\nrtext = list(text)\nfor i in range(1, len(rtext) - 1):\n    rtext.insert(i + 1, '|')\nf = ''.join(rtext)",
        "'px|||||cznyf'",
        {},
        {
            "(25, 29)": "type",
            "(30, 34)": "str",
            "(45, 50)": "type",
            "(112, 117)": "list",
            "(54, 57)": "builtin_function_or_method",
            "(58, 63)": "list",
            "(75, 80)": "list",
            "(88, 89)": "int"
        }
    ],
    [
        "strings = [\"La\", \"Q\", \"9\", \"La\", \"La\"]\noccurances = {}\nfor string in strings:\n    if string not in occurances:\n        occurances[string] = strings.count(string)\nf = occurances",
        "{'La': 3, 'Q': 1, '9': 1}",
        {},
        {
            "(69, 76)": "list",
            "(166, 176)": "dict",
            "(85, 91)": "str",
            "(99, 109)": "dict",
            "(119, 129)": "dict",
            "(130, 136)": "str",
            "(154, 160)": "str",
            "(140, 147)": "list"
        }
    ],
    [
        "text, suffix = 'faqo osax f', 'f'\ntext += suffix\nwhile text[-len(suffix):] == suffix:\n    text = text[:-1]\nf = text",
        "'faqo osax '",
        {},
        {
            "(42, 48)": "str",
            "(111, 115)": "str",
            "(78, 84)": "str",
            "(55, 59)": "str",
            "(97, 101)": "str",
            "(61, 64)": "builtin_function_or_method",
            "(65, 71)": "str"
        }
    ],
    [
        "strands = ['__', '1', '.', '0', 'r0', '__', 'a_j', '6', '__', '6']\nsubs = strands\nfor i, j in enumerate(subs):\n    for _ in range(len(j) // 2):\n        subs[i] = subs[i][-1:] + subs[i][1:-1] + subs[i][0]\nf = ''.join(subs)",
        "'__1.00r__j_a6__6'",
        {},
        {
            "(74, 81)": "list",
            "(94, 103)": "type",
            "(104, 108)": "list",
            "(216, 220)": "list",
            "(124, 129)": "type",
            "(152, 156)": "list",
            "(157, 158)": "int",
            "(130, 133)": "builtin_function_or_method",
            "(134, 135)": "str",
            "(193, 197)": "list",
            "(198, 199)": "int",
            "(162, 166)": "list",
            "(167, 168)": "int",
            "(177, 181)": "list",
            "(182, 183)": "int"
        }
    ],
    [
        "text = 'A'\ntext = text.replace('#', '1').replace('$', '5')\nf = 'yes' if text.isnumeric() else 'no'",
        "'no'",
        {},
        {
            "(72, 76)": "str",
            "(18, 22)": "str"
        }
    ],
    [
        "str = '777'\nif str.isalnum():\n    f = \"True\"\nf = \"False\"",
        "'True'",
        {
            "(15, 28)": "True\n"
        },
        {
            "(15, 18)": "str"
        }
    ],
    [
        "s, l = 'urecord', 8\nf = s.ljust(l, '=').rpartition('=')[0]",
        "'urecord'",
        {},
        {
            "(32, 33)": "int",
            "(24, 25)": "str"
        }
    ],
    [
        "text = '244, 105, -90'\nif ',' in text:\n    before, _, after = text.partition(',')\n    f = after + ' ' + before\nf = ',' + text.partition(' ')[-1] + ' 0'",
        "' 105, -90 244'",
        {
            "(26, 37)": "True\n"
        },
        {
            "(33, 37)": "str",
            "(104, 110)": "str",
            "(62, 66)": "str",
            "(90, 95)": "str",
            "(121, 125)": "str"
        }
    ],
    [
        "challenge = 'czywZ'\nf = challenge.casefold().replace('l', ',')",
        "'czywz'",
        {},
        {
            "(24, 33)": "str"
        }
    ],
    [
        "name = 'i am your father'\nf = '| ' + ' '.join(name.split(' ')) + ' |'",
        "'| i am your father |'",
        {},
        {
            "(46, 50)": "str"
        }
    ],
    [
        "text, a, b = ' vup a zwwo oihee amuwuuw! ', 'a', 'u'\ntext = text.replace(a, b)\nf = text.replace(b, a)",
        "' vap a zwwo oihee amawaaw! '",
        {},
        {
            "(73, 74)": "str",
            "(76, 77)": "str",
            "(96, 97)": "str",
            "(99, 100)": "str",
            "(60, 64)": "str",
            "(83, 87)": "str"
        }
    ],
    [
        "value, char = '234rtccde', 'e'\ntotal = 0\nfor c in value:\n    if c == char or c == char.lower():\n        total += 1\nf = total",
        "1",
        {},
        {
            "(50, 55)": "str",
            "(119, 124)": "int",
            "(64, 65)": "str",
            "(69, 73)": "str",
            "(77, 78)": "str",
            "(82, 86)": "str"
        }
    ],
    [
        "needle, haystack = 'a', 'xxxaaxaaxx'\ncount = 0\nwhile needle in haystack:\n    haystack = haystack.replace(needle, '', 1)\n    count += 1\nf = count",
        "4",
        {},
        {
            "(139, 144)": "int",
            "(53, 59)": "str",
            "(63, 71)": "str",
            "(105, 111)": "str",
            "(88, 96)": "str"
        }
    ],
    [
        "text = 'USaR'\nindex = 1\nwhile index < len(text):\n    if text[index] != text[index - 1]:\n        index += 1\n    else:\n        text1 = text[:index]\n        text2 = text[index:].swapcase()\n        f = text1 + text2\nf = text.swapcase()",
        "'usAr'",
        {},
        {
            "(30, 35)": "int",
            "(38, 41)": "builtin_function_or_method",
            "(42, 46)": "str",
            "(216, 220)": "str",
            "(56, 60)": "str",
            "(61, 66)": "int",
            "(71, 75)": "str",
            "(76, 81)": "int"
        }
    ],
    [
        "update, starting = {}, {'desciduous': 2}\nd = starting.copy()\nfor k in update:\n    if k in d:\n        d[k] += update[k]\n    else:\n        d[k] = update[k]\nf = d",
        "{'desciduous': 2}",
        {},
        {
            "(158, 159)": "dict",
            "(45, 53)": "dict"
        }
    ],
    [
        "chemicals, num = ['lsi', 's', 't', 't', 'd'], 0\nfish = chemicals[1:]\nchemicals.reverse()\nfor i in range(num):\n    fish.append(chemicals.pop(1))\nchemicals.reverse()\nf = chemicals",
        "['lsi', 's', 't', 't', 'd']",
        {},
        {
            "(168, 177)": "list",
            "(55, 64)": "list",
            "(69, 78)": "list",
            "(144, 153)": "list"
        }
    ],
    [
        "text = 'ncdsdfdaaa0a1cdscsk*XFd'\nf = len(text.splitlines())",
        "1",
        {},
        {
            "(37, 40)": "builtin_function_or_method",
            "(41, 45)": "str"
        }
    ],
    [
        "nums = []\nasc, desc = nums.copy(), []\nasc.reverse()\ndesc = asc[:len(asc)//2]\nf = desc + asc + desc",
        "[]",
        {},
        {
            "(59, 62)": "list",
            "(94, 98)": "list",
            "(38, 41)": "list",
            "(81, 85)": "list",
            "(88, 91)": "list",
            "(22, 26)": "list",
            "(64, 67)": "builtin_function_or_method",
            "(68, 71)": "list"
        }
    ],
    [
        "s = \"\"\nl = list(s)\nfor i in range(len(l)):\n    l[i] = l[i].lower()\n    if not l[i].isdigit():\n        f = False\nf = True",
        "True",
        {},
        {
            "(11, 15)": "type",
            "(16, 17)": "str"
        }
    ],
    [
        "text = 'Thisisastring'\nnumber = 0\nfor t in text:\n    if t.isnumeric():\n        number += 1\nf = number",
        "0",
        {},
        {
            "(43, 47)": "str",
            "(95, 101)": "int"
        }
    ],
    [
        "lst = [1, 7, -1, -3]\nnew = list()\ni = len(lst)-1\nfor _ in range(len(lst)):\n    if i%2 == 0:\n        new.append(-lst[i])\n    else:\n        new.append(lst[i])\n    i -= 1\nf = new",
        "[-3, 1, 7, -1]",
        {},
        {
            "(172, 175)": "list",
            "(27, 31)": "type",
            "(58, 63)": "type",
            "(38, 41)": "builtin_function_or_method",
            "(42, 45)": "list",
            "(64, 67)": "builtin_function_or_method",
            "(68, 71)": "list",
            "(138, 141)": "list",
            "(149, 152)": "list",
            "(153, 154)": "int"
        }
    ],
    [
        "array, L = [1, 2, 3], 4\nif L <= 0:\n    f = array\nif len(array) < L:\n    array.extend(f(array, L - len(array)))\nf = array",
        "[1, 2, 3, 1, 2, 3]",
        {
            "(52, 66)": "True\n"
        },
        {
            "(65, 66)": "int",
            "(52, 55)": "builtin_function_or_method",
            "(56, 61)": "list"
        }
    ],
    [
        "text = 'jh54kkk6'\nfor i in range(len(text)):\n    if text[i] == text[i].upper() and text[i-1].islower():\n        f = True\nf = False",
        "True",
        {},
        {
            "(27, 32)": "type",
            "(33, 36)": "builtin_function_or_method",
            "(37, 41)": "str",
            "(52, 56)": "str",
            "(57, 58)": "int",
            "(83, 87)": "str",
            "(63, 67)": "str",
            "(68, 69)": "int",
            "(88, 89)": "int"
        }
    ],
    [
        "text = 'm4n2o'\nans = []\nfor char in text:\n    if char.isdigit():\n        ans.append(char)\n    else:\n        ans.append(' ')\nf = ''.join(ans)",
        "' 4 2 '",
        {},
        {
            "(36, 40)": "str",
            "(136, 139)": "list",
            "(49, 53)": "str",
            "(84, 88)": "str",
            "(73, 76)": "list",
            "(108, 111)": "list"
        }
    ],
    [
        "strand, zmnc = '', 'abc'\npoz = strand.find(zmnc)\nwhile poz != -1:\n    strand = strand[poz + 1:]\n    poz = strand.find(zmnc)\nf = strand.rfind(zmnc)",
        "-1",
        {},
        {
            "(43, 47)": "str",
            "(141, 145)": "str",
            "(31, 37)": "str",
            "(128, 134)": "str"
        }
    ],
    [
        "nums = [-6, -2, 1, -3, 0, 1]\ncount = len(nums)\nif count == 0:\n    nums = [0] * int(nums.pop())\nelif count % 2 == 0:\n    nums.clear()\nelse:\n    del nums[:count//2:]\nf = nums",
        "[]",
        {
            "(100, 114)": "True\n"
        },
        {
            "(168, 172)": "list",
            "(37, 40)": "builtin_function_or_method",
            "(41, 45)": "list",
            "(100, 105)": "int",
            "(120, 124)": "list"
        }
    ],
    [
        "places, lazy = [375, 564, 857, 90, 728, 92], [728]\nplaces.sort()\nfor lazy in lazy:\n    places.remove(lazy)\nif len(places) == 1:\n    f = 1\nfor i, place in enumerate(places):\n    if places.count(place+1) == 0:\n        f = i+1\nf = i+1",
        "1",
        {},
        {
            "(77, 81)": "int",
            "(154, 163)": "type",
            "(164, 170)": "list",
            "(228, 229)": "int",
            "(51, 57)": "list",
            "(101, 105)": "int",
            "(87, 93)": "list",
            "(220, 221)": "int",
            "(180, 186)": "list",
            "(193, 198)": "int"
        }
    ],
    [
        "a, b = '00', ['nU', ' 9 rCSAz', 'w', ' lpA5BO', 'sizL', 'i7rlVr']\nf = a.join(b)",
        "'nU00 9 rCSAz00w00 lpA5BO00sizL00i7rlVr'",
        {},
        {
            "(77, 78)": "list",
            "(70, 71)": "str"
        }
    ],
    [
        "text, to_remove = 'sjbrlfqmw', 'l'\nnew_text = list(text)\nif to_remove in new_text:\n    index = new_text.index(to_remove)\n    new_text.remove(to_remove)\n    new_text.insert(index, '?')\n    new_text.remove('?')\nf = ''.join(new_text)",
        "'sjbrfqmw'",
        {
            "(60, 81)": "True\n"
        },
        {
            "(46, 50)": "type",
            "(51, 55)": "str",
            "(60, 69)": "str",
            "(73, 81)": "list",
            "(221, 229)": "list",
            "(110, 119)": "str",
            "(141, 150)": "str",
            "(172, 177)": "int",
            "(95, 103)": "list",
            "(125, 133)": "list",
            "(156, 164)": "list",
            "(188, 196)": "list"
        }
    ],
    [
        "s, sep = '234dsfssdfs333324314', 's'\ns += sep\nf = s.rpartition(sep)[0]",
        "'234dsfssdfs333324314'",
        {},
        {
            "(42, 45)": "str",
            "(63, 66)": "str",
            "(50, 51)": "str"
        }
    ],
    [
        "txt = \"5ll6\"\nd = []\nfor c in txt:\n    if c.isdigit():\n        continue\n    if c.islower():\n        d.append(c.upper())\n    elif c.isupper():\n        d.append(c.lower())\nf = ''.join(d)",
        "'LL'",
        {},
        {
            "(29, 32)": "str",
            "(181, 182)": "list",
            "(41, 42)": "str",
            "(78, 79)": "str",
            "(99, 100)": "list",
            "(108, 109)": "str"
        }
    ],
    [
        "my_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 2}\nresult = {v: k for k, v in my_dict.items()}\nf = result",
        "{1: 'a', 2: 'd', 3: 'c'}",
        {},
        {
            "(91, 97)": "dict",
            "(70, 77)": "dict"
        }
    ],
    [
        "array, elem = [-1, 2, 1, -8, -8, 2], 2\nelem = str(elem)\nd = 0\nfor i in array:\n    if str(i) == elem:\n        d += 1\nf = d",
        "2",
        {},
        {
            "(71, 76)": "list",
            "(120, 121)": "int",
            "(46, 49)": "type",
            "(50, 54)": "str",
            "(95, 99)": "str",
            "(85, 88)": "type",
            "(89, 90)": "int"
        }
    ],
    [
        "text = 'E jIkx HtDpV G'\nuppercase_index = text.find('A')\nif uppercase_index >= 0:\n    f = text[:uppercase_index] + text[text.find('a') + 1 :]\nelse:\n    f = ''.join(sorted(text))",
        "'   DEGHIVjkptx'",
        {},
        {
            "(42, 46)": "str",
            "(164, 170)": "builtin_function_or_method",
            "(171, 175)": "str"
        }
    ],
    [
        "cart = {}\nwhile len(cart) > 5:\n    cart.popitem()\nf = cart",
        "{}",
        {},
        {
            "(54, 58)": "dict"
        }
    ],
    [
        "text = \"---123-4\"\nf = text.count('-') == len(text)",
        "False",
        {},
        {
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str",
            "(22, 26)": "str"
        }
    ],
    [
        "array, elem = [[1, 2, 3], [1, 2], 1], [[1, 2, 3], 3, [2, 1]]\narray.extend(elem)\nf = array",
        "[[1, 2, 3], [1, 2], 1, [1, 2, 3], 3, [2, 1]]",
        {},
        {
            "(84, 89)": "list",
            "(74, 78)": "list",
            "(61, 66)": "list"
        }
    ],
    [
        "list, operation = [6, 4, 2, 8, 15], (lambda x: x.reverse())\nnew_list = list[:]\nnew_list.sort()\noperation(new_list)\nf = list",
        "[6, 4, 2, 8, 15]",
        {},
        {
            "(119, 123)": "list",
            "(71, 75)": "list",
            "(95, 104)": "function",
            "(105, 113)": "list",
            "(79, 87)": "list"
        }
    ],
    [
        "a, b = 'ml', 'mv'\nif a < b:\n    f = (b, a)\nf = (a, b)",
        "('mv', 'ml')",
        {
            "(21, 26)": "True\n"
        },
        {
            "(21, 22)": "str",
            "(25, 26)": "str",
            "(48, 49)": "str",
            "(51, 52)": "str",
            "(37, 38)": "str",
            "(40, 41)": "str"
        }
    ],
    [
        "filename = 'docs.doc'\nsuffix = filename.split('.')[-1]\nf2 = filename + suffix[::-1]\nf = f2.endswith(suffix)",
        "False",
        {},
        {
            "(60, 68)": "str",
            "(100, 106)": "str",
            "(71, 77)": "str",
            "(88, 90)": "str",
            "(31, 39)": "str"
        }
    ],
    [
        "text = 'hzcw'\nls = list(text)\nlength = len(ls)\nfor i in range(length):\n    ls.insert(i, ls[i])\nf = ''.join(ls).ljust(length * 2)",
        "'hhhhhzcw'",
        {},
        {
            "(19, 23)": "type",
            "(24, 28)": "str",
            "(39, 42)": "builtin_function_or_method",
            "(43, 45)": "list",
            "(56, 61)": "type",
            "(62, 68)": "int",
            "(85, 86)": "int",
            "(117, 123)": "int",
            "(75, 77)": "list",
            "(88, 90)": "list",
            "(91, 92)": "int",
            "(107, 109)": "list"
        }
    ],
    [
        "dictionary = {563: 555, 133: None}\nf = dictionary.copy()",
        "{563: 555, 133: None}",
        {},
        {
            "(39, 49)": "dict"
        }
    ],
    [
        "dictionary = {'noeohqhk': 623}\ndictionary[1049] = 55\nkey, value = dictionary.popitem()\ndictionary[key] = value\nf = dictionary",
        "{'noeohqhk': 623, 1049: 55}",
        {},
        {
            "(105, 110)": "int",
            "(115, 125)": "dict",
            "(31, 41)": "dict",
            "(87, 97)": "dict",
            "(98, 101)": "int",
            "(66, 76)": "dict"
        }
    ],
    [
        "d = {'a': 1, 'b': 2, 'c': 3}\nsize = len(d)\nv = [0] * size\nif size == 0:\n    f = v\nfor i, e in enumerate(d.values()):\n    v[i] = e\nf = v",
        "[1, 2, 3]",
        {},
        {
            "(134, 135)": "list",
            "(36, 39)": "builtin_function_or_method",
            "(40, 41)": "dict",
            "(53, 57)": "int",
            "(94, 103)": "type",
            "(128, 129)": "int",
            "(121, 122)": "list",
            "(123, 124)": "int",
            "(104, 105)": "dict"
        }
    ],
    [
        "text = 'a_A_b_B3 '\ntry:\n    while 'nnet lloP' in text:\n        text = text.replace('nnet lloP', 'nnet loLp')\nfinally:\n    f = text",
        "'a_A_b_B3 '",
        {},
        {
            "(126, 130)": "str"
        }
    ],
    [
        "nums = [-1, -3, -5, -7, 0]\nf = nums[len(nums)//2]",
        "-5",
        {},
        {
            "(31, 35)": "list",
            "(36, 39)": "builtin_function_or_method",
            "(40, 44)": "list"
        }
    ],
    [
        "x = [1, 0, 2, 2, 0, 0, 0, 1]\nif x == []:\n    f = -1\nelse:\n    cache = {}\n    for item in x:\n        if item in cache:\n            cache[item] += 1\n        else:\n            cache[item] = 1\n    f = max(cache.values())",
        "4",
        {},
        {
            "(89, 90)": "list",
            "(197, 200)": "builtin_function_or_method",
            "(173, 178)": "dict",
            "(179, 183)": "int",
            "(201, 206)": "dict"
        }
    ],
    [
        "description, values = '{0}, {0}!!!', ['R', None]\nif values[1] is None:\n    values = values[0:1]\nelse:\n    values = values[1:]\nf = description.format(*values)",
        "'R, R!!!'",
        {
            "(52, 69)": "True\n"
        },
        {
            "(52, 58)": "list",
            "(84, 90)": "list",
            "(130, 141)": "str",
            "(150, 156)": "list"
        }
    ],
    [
        "text, prefix = '123x John z', 'z'\nf = text[len(prefix):]",
        "'23x John z'",
        {},
        {
            "(38, 42)": "str",
            "(43, 46)": "builtin_function_or_method",
            "(47, 53)": "str"
        }
    ],
    [
        "array, num = [1, 2], 1\nreverse = False\nif num < 0:\n    reverse = True\n    num *= -1\narray = array[::-1] * num\nl = len(array)\n\nif reverse:\n    array = array[::-1]\nf = array",
        "[2, 1]",
        {},
        {
            "(166, 171)": "list",
            "(106, 109)": "int",
            "(114, 117)": "builtin_function_or_method",
            "(118, 123)": "list",
            "(92, 97)": "list"
        }
    ],
    [
        "s = 'crew'\nr = []\nfor i in range(len(s) - 1, 0 - 1, -1):\n    r += s[i]\nf = ''.join(r)",
        "'werc'",
        {},
        {
            "(27, 32)": "type",
            "(83, 84)": "list",
            "(66, 67)": "str",
            "(68, 69)": "int",
            "(33, 36)": "builtin_function_or_method",
            "(37, 38)": "str"
        }
    ],
    [
        "text, value = 'btrburger', 'b'\nindexes = []\nfor i in range(len(text)):\n    if text[i] == value and (i == 0 or text[i-1] != value):\n        indexes.append(i) \nif len(indexes) % 2 == 1:\n    f = text\nf = text[indexes[0]+1:indexes[-1]]",
        "'tr'",
        {},
        {
            "(53, 58)": "type",
            "(201, 205)": "str",
            "(59, 62)": "builtin_function_or_method",
            "(63, 67)": "str",
            "(89, 94)": "str",
            "(154, 155)": "int",
            "(219, 226)": "list",
            "(78, 82)": "str",
            "(83, 84)": "int",
            "(100, 101)": "int",
            "(123, 128)": "str",
            "(139, 146)": "list",
            "(206, 213)": "list",
            "(110, 114)": "str",
            "(115, 116)": "int"
        }
    ],
    [
        "lines = ['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']\nfor i in range(len(lines)):\n    lines[i] = lines[i].center(len(lines[-1]))\nf = lines",
        "['dZwbSR', 'wijHeq', 'qluVok', 'dxjxbF']",
        {},
        {
            "(128, 133)": "list",
            "(58, 63)": "type",
            "(64, 67)": "builtin_function_or_method",
            "(68, 73)": "list",
            "(81, 86)": "list",
            "(87, 88)": "int",
            "(108, 111)": "builtin_function_or_method",
            "(92, 97)": "list",
            "(98, 99)": "int",
            "(112, 117)": "list"
        }
    ],
    [
        "text, n = 'g', 15\nif len(text) <= 2:\n    f = text\nleading_chars = text[0] * (n - len(text) + 1)\nf = leading_chars + text[1:-1] + text[-1]",
        "'g'",
        {
            "(21, 35)": "True\n"
        },
        {
            "(45, 49)": "str",
            "(21, 24)": "builtin_function_or_method",
            "(25, 29)": "str",
            "(66, 70)": "str",
            "(100, 113)": "str",
            "(129, 133)": "str",
            "(77, 78)": "int",
            "(116, 120)": "str",
            "(81, 84)": "builtin_function_or_method",
            "(85, 89)": "str"
        }
    ],
    [
        "text = \"#! : #!\"\nf = text.split(':')[0].count('#')",
        "1",
        {},
        {
            "(21, 25)": "str"
        }
    ],
    [
        "text = 'wrazugizoernmgzu'\nfor i in range(len(text)-1):\n    if text[i:].islower():\n        f = text[i + 1:]\nf = ''",
        "'razugizoernmgzu'",
        {},
        {
            "(35, 40)": "type",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str",
            "(94, 98)": "str",
            "(62, 66)": "str",
            "(67, 68)": "int",
            "(99, 100)": "int"
        }
    ],
    [
        "nums = [1]\nnums.sort()\nn = len(nums)\nnew_nums = [nums[n//2]]\n\nif n % 2 == 0:\n    new_nums = [nums[n//2 - 1], nums[n//2]]\n\nfor i in range(0, n//2):\n    new_nums.insert(0, nums[n-i-1])\n    new_nums.append(nums[i])\nf = new_nums",
        "[1]",
        {},
        {
            "(216, 224)": "list",
            "(27, 30)": "builtin_function_or_method",
            "(31, 35)": "list",
            "(11, 15)": "list",
            "(49, 53)": "list",
            "(54, 55)": "int"
        }
    ],
    [
        "nums, verdict = [0, 3, 0, 1], lambda x: x < 2\nres = [x for x in nums if x != 0]\nresult = [[x, verdict(x)] for x in res]\nif result:\n    f = result\nf = 'error - no numbers or all zeros!'",
        "[[3, False], [1, True]]",
        {
            "(123, 129)": "True\n"
        },
        {
            "(123, 129)": "list",
            "(139, 145)": "list",
            "(64, 68)": "list",
            "(115, 118)": "list",
            "(94, 101)": "function"
        }
    ],
    [
        "n, s = 'xqc', 'mRcwVqXsRDRb'\nif s.startswith(n):\n    pre, _ = s.split(n, 1)\n    f = pre + n + s[len(n):]\nf = s",
        "'mRcwVqXsRDRb'",
        {},
        {
            "(109, 110)": "str"
        }
    ],
    [
        "string = '[ Hello ]+ Hello, World!!_ Hi'\ntmp = string.lower()\nfor char in string.lower():\n    if char in tmp:\n        tmp = tmp.replace(char, '', 1)\nf = tmp",
        "''",
        {},
        {
            "(153, 156)": "str",
            "(47, 53)": "str",
            "(74, 80)": "str",
            "(97, 101)": "str",
            "(105, 108)": "str",
            "(136, 140)": "str",
            "(124, 127)": "str"
        }
    ],
    [
        "nums, rmvalue = [6, 2, 1, 1, 4, 1], 5\nres = nums[:]\nwhile rmvalue in res:\n    popped = res.pop(res.index(rmvalue))\n    if popped != rmvalue:\n        res.append(popped)\nf = res",
        "[6, 2, 1, 1, 4, 1]",
        {},
        {
            "(172, 175)": "list",
            "(44, 48)": "list"
        }
    ],
    [
        "string, numbers = '4327', [2, 8, 9, 2, 7, 1]\narr = []\nfor num in numbers:\n    arr.append(string.zfill(num))\nf = ' '.join(arr)",
        "'4327 00004327 000004327 4327 0004327 4327'",
        {},
        {
            "(65, 72)": "list",
            "(121, 124)": "list",
            "(78, 81)": "list",
            "(102, 105)": "int",
            "(89, 95)": "str"
        }
    ],
    [
        "text = '     i'\nfor char in text:\n    if not char.isspace():\n        f = False\nf = True",
        "False",
        {},
        {
            "(28, 32)": "str",
            "(45, 49)": "str"
        }
    ],
    [
        "nums = [11, 21, 0, 11]\nfor odd in nums[:]:\n    if odd % 2 != 0:\n        nums.remove(odd)\nsum_ = 0\nfor num in nums:\n    sum_ += num\nf = sum_",
        "0",
        {},
        {
            "(109, 113)": "list",
            "(135, 139)": "int",
            "(34, 38)": "list",
            "(127, 130)": "int",
            "(50, 53)": "int",
            "(84, 87)": "int",
            "(72, 76)": "list"
        }
    ],
    [
        "list_, num = ['v'], 1\ntemp = []\nfor i in list_:\n    i = num // 2 * ('%s,' % i)\n    temp.append(i)\nf = temp",
        "['']",
        {},
        {
            "(41, 46)": "list",
            "(102, 106)": "list",
            "(95, 96)": "str",
            "(56, 59)": "int",
            "(76, 77)": "str",
            "(83, 87)": "list"
        }
    ],
    [
        "orig = [1, 2, 3]\ncopy = orig\ncopy.append(100)\norig.pop()\nf = copy",
        "[1, 2, 3]",
        {},
        {
            "(24, 28)": "list",
            "(61, 65)": "list",
            "(29, 33)": "list",
            "(46, 50)": "list"
        }
    ],
    [
        "seq, v = [ 'oH', 'ee', 'mb', 'deft', 'n', 'zz', 'f', 'abA' ], 'zz'\na = []\nfor i in seq:\n    if i.endswith(v):\n        a.append(i*2)\nf = a",
        "['zzzz']",
        {},
        {
            "(83, 86)": "list",
            "(136, 137)": "list",
            "(106, 107)": "str",
            "(95, 96)": "str",
            "(118, 119)": "list",
            "(127, 128)": "str"
        }
    ],
    [
        "a, b = 'sierizam', 'iz'\nif b in a:\n    f = b.join(a.partition(a[a.index(b) + 1]))\nelse:\n    f = a",
        "'sieriizzizam'",
        {
            "(27, 33)": "True\n"
        },
        {
            "(27, 28)": "str",
            "(32, 33)": "str",
            "(43, 44)": "str",
            "(50, 51)": "str",
            "(62, 63)": "str",
            "(72, 73)": "str",
            "(64, 65)": "str"
        }
    ],
    [
        "text = \"2two programmers\"\nfor i in range(len(text)):\n    if text[0:i].startswith(\"two\"):\n        f = text[i:]\nf = 'no'",
        "'no'",
        {},
        {
            "(35, 40)": "type",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "str"
        }
    ],
    [
        "text = \"BYE\\nNO\\nWAY\"\nf = ', '.join(text.splitlines())",
        "'BYE, NO, WAY'",
        {},
        {
            "(36, 40)": "str"
        }
    ],
    [
        "dic, key = dict(did=0), 'u'\ndic = dict(dic)\nv = dic.pop(key, 0)\nif v == 0:\n    f = 'No such key!'\nwhile len(dic) > 0:\n    dic[dic.popitem()[1]] = dic.popitem()[0]\nf = int(dic.popitem()[0])",
        "'No such key!'",
        {
            "(67, 73)": "True\n"
        },
        {
            "(34, 38)": "type",
            "(39, 42)": "dict",
            "(56, 59)": "str",
            "(67, 68)": "int",
            "(11, 15)": "type",
            "(48, 51)": "dict",
            "(104, 107)": "builtin_function_or_method",
            "(108, 111)": "dict"
        }
    ],
    [
        "nums = [0, 0, 1, 2, 1]\nfor i in range(len(nums) - 1, -1, -3):\n    if nums[i] == 0:\n        nums.clear()\n        f = False\nf = nums",
        "False",
        {},
        {
            "(126, 130)": "list",
            "(32, 37)": "type",
            "(38, 41)": "builtin_function_or_method",
            "(42, 46)": "list",
            "(69, 73)": "list",
            "(74, 75)": "int",
            "(91, 95)": "list"
        }
    ],
    [
        "text, delimiter = 'xxjarczx', 'x'\ntext = text.rpartition(delimiter)\nf = text[0] + text[-1]",
        "'xxjarcz'",
        {},
        {
            "(57, 66)": "str",
            "(41, 45)": "tuple",
            "(72, 76)": "tuple",
            "(82, 86)": "tuple"
        }
    ],
    [
        "text, num_digits = '19', 5\nwidth = max(1, num_digits)\nf = text.zfill(width)",
        "'00019'",
        {},
        {
            "(35, 38)": "builtin_function_or_method",
            "(42, 52)": "int",
            "(69, 74)": "int",
            "(58, 62)": "str"
        }
    ],
    [
        "a = {15: \"Qltuf\", 12: \"Rwrepny\"}\ns = dict(list(a.items())\n[::-1])\nf = \" \".join([str(i) for i in s.items()])",
        "\"(12, 'Rwrepny') (15, 'Qltuf')\"",
        {},
        {
            "(80, 83)": "type",
            "(96, 97)": "dict"
        }
    ],
    [
        "text, chars = 'ellod!p.nkyp.exa.bi.y.hain', '.n.in.ha.y'\nresult = list(text)\nwhile chars in result[-3::-2]:\n    result.remove(result[-3])\n    result.remove(result[-3])\nf = ''.join(result).strip('.')",
        "'ellod!p.nkyp.exa.bi.y.hain'",
        {},
        {
            "(66, 70)": "type",
            "(71, 75)": "str",
            "(180, 186)": "list"
        }
    ],
    [
        "text, chars = 'asfdellos', 'Ta'\nchars = list(chars)\ntext = list(text)\nnew_text = text\nwhile len(new_text) > 0 and text:\n    if new_text[0] in chars:\n        new_text = new_text[1:]\n    else:\n        break \nf = ''.join(new_text)",
        "'sfdellos'",
        {},
        {
            "(81, 85)": "list",
            "(40, 44)": "type",
            "(45, 50)": "list",
            "(59, 63)": "type",
            "(64, 68)": "list",
            "(114, 118)": "list",
            "(218, 226)": "list",
            "(142, 147)": "list",
            "(92, 95)": "builtin_function_or_method",
            "(96, 104)": "list",
            "(127, 135)": "list",
            "(168, 176)": "list"
        }
    ],
    [
        "lst = [0, 2, 1, 2, 6, 2, 6, 3, 0]\ni = 0\nnew_list = []\nwhile i < len(lst):\n    if lst[i] in lst[i+1:]:\n        new_list.append(lst[i])\n        if len(new_list) == 3:\n            f = new_list\n    i += 1\nf = new_list",
        "[0, 2, 2]",
        {},
        {
            "(205, 213)": "list",
            "(60, 61)": "int",
            "(64, 67)": "builtin_function_or_method",
            "(68, 71)": "list",
            "(81, 84)": "list",
            "(85, 86)": "int",
            "(91, 94)": "list",
            "(181, 189)": "list",
            "(110, 118)": "list",
            "(126, 129)": "list",
            "(130, 131)": "int",
            "(145, 148)": "builtin_function_or_method",
            "(149, 157)": "list",
            "(95, 96)": "int"
        }
    ],
    [
        "concat, di = 'mid', {'0':'q','1':'f','2':'w','3':'i'}\ncount = len(di)\nfor i in range(count):\n    if di[str(i)] in concat:\n        di.pop(str(i))\nf = \"Done!\"",
        "'Done!'",
        {},
        {
            "(62, 65)": "builtin_function_or_method",
            "(66, 68)": "dict",
            "(79, 84)": "type",
            "(85, 90)": "int",
            "(114, 120)": "str",
            "(100, 102)": "dict",
            "(103, 106)": "type",
            "(107, 108)": "int",
            "(130, 132)": "dict",
            "(137, 140)": "type",
            "(141, 142)": "int"
        }
    ],
    [
        "nums, pos, value = [3, 1, 2], 2, 0\nnums.insert(pos, value)\nf = nums",
        "[3, 1, 0, 2]",
        {},
        {
            "(63, 67)": "list",
            "(47, 50)": "int",
            "(52, 57)": "int",
            "(35, 39)": "list"
        }
    ],
    [
        "text, characters = \"2nm_28in\", \"nm\"\ncharacter_list = list(characters) + [' ', '_']\n\ni = 0\nwhile i < len(text) and text[i] in character_list:\n    i += 1\n\nf = text[i:]",
        "'2nm_28in'",
        {},
        {
            "(157, 161)": "str",
            "(53, 57)": "type",
            "(58, 68)": "str",
            "(162, 163)": "int"
        }
    ],
    [
        "total, arg = [1, 2, 3], 'nammo'\nif type(arg) is list:\n    for e in arg:\n        total.extend(e)\nelse:\n    total.extend(arg)\nf = total",
        "[1, 2, 3, 'n', 'a', 'm', 'm', 'o']",
        {},
        {
            "(128, 133)": "list",
            "(119, 122)": "str",
            "(106, 111)": "list"
        }
    ],
    [
        "text = \" \\t \"\nif not text.strip():\n    f = len(text.strip())\nf = None",
        "0",
        {
            "(17, 33)": "True\n"
        },
        {
            "(43, 46)": "builtin_function_or_method",
            "(21, 25)": "str",
            "(47, 51)": "str"
        }
    ],
    [
        "students = ['r', '9']\nseatlist = students\nseatlist.reverse()\ncnt = 0\nfor cnt in range(len(seatlist)):\n    cnt += 2\n    seatlist[cnt - 1:cnt] = ['+']\nseatlist.append('+')\nf = seatlist",
        "['9', '+', '+', '+']",
        {},
        {
            "(33, 41)": "list",
            "(174, 182)": "list",
            "(80, 85)": "type",
            "(42, 50)": "list",
            "(86, 89)": "builtin_function_or_method",
            "(90, 98)": "list",
            "(119, 127)": "list",
            "(149, 157)": "list",
            "(136, 139)": "int",
            "(128, 131)": "int"
        }
    ],
    [
        "text = 'Hello Is It MyClass'\nif text.upper() == text:\n    f = 'ALL UPPERCASE'\nf = text",
        "'Hello Is It MyClass'",
        {},
        {
            "(82, 86)": "str"
        }
    ],
    [
        "text = 'scala'\nls = text[::-1]\ntext2 = ''\nfor i in range(len(ls) - 3, 0, -3):\n    text2 += '---'.join(ls[i:i + 3]) + '---'\nf = text2[:-3]",
        "'a---c---s'",
        {},
        {
            "(20, 24)": "str",
            "(51, 56)": "type",
            "(127, 132)": "str",
            "(57, 60)": "builtin_function_or_method",
            "(61, 63)": "str",
            "(102, 104)": "str",
            "(105, 106)": "int",
            "(107, 108)": "int"
        }
    ],
    [
        "text = \"2 m2 \\n\\nbike\"\nk = text.splitlines()\ni = 0\nfor j in k:\n    if len(j) == 0:\n        f = i\n    i+=1\nf = -1",
        "1",
        {},
        {
            "(60, 61)": "list",
            "(27, 31)": "str",
            "(95, 96)": "int",
            "(70, 73)": "builtin_function_or_method",
            "(74, 75)": "str"
        }
    ],
    [
        "s = \"11\"\nfor i in range(len(s)):\n    if s[i].isdecimal():\n        f = i + (s[i] == '0')\n    elif s[i] == '0':\n        f = -1\nf = -1",
        "0",
        {},
        {
            "(18, 23)": "type",
            "(24, 27)": "builtin_function_or_method",
            "(28, 29)": "str",
            "(70, 71)": "int",
            "(40, 41)": "str",
            "(42, 43)": "int",
            "(75, 76)": "str",
            "(77, 78)": "int"
        }
    ],
    [
        "ets = {}\nwhile ets:\n    k, v = ets.popitem()\n    ets[k] = v**2\nf = ets",
        "{}",
        {},
        {
            "(67, 70)": "dict"
        }
    ],
    [
        "ls = ['x', 'u', 'w', 'j', 3, 6]\nf = dict.fromkeys(ls, 0)",
        "{'x': 0, 'u': 0, 'w': 0, 'j': 0, 3: 0, 6: 0}",
        {},
        {
            "(50, 52)": "list",
            "(36, 40)": "type"
        }
    ],
    [
        "counts = {'2': 2, '0': 1, '1': 2}\ndict = {}\nfor k, v in counts.items():\n    count = counts[k]\n    if count not in dict:\n        dict[count] = []\n    dict[count].append(k)\ncounts.update(dict)\nf = counts",
        "{'2': 2, '0': 1, '1': 2, 2: ['2', '1'], 1: ['0']}",
        {},
        {
            "(195, 201)": "dict",
            "(185, 189)": "dict",
            "(56, 62)": "dict",
            "(84, 90)": "dict",
            "(91, 92)": "str",
            "(101, 106)": "int",
            "(114, 118)": "dict",
            "(168, 169)": "str",
            "(171, 177)": "dict",
            "(128, 132)": "dict",
            "(133, 138)": "int",
            "(149, 153)": "dict",
            "(154, 159)": "int"
        }
    ],
    [
        "text, old, new = 'avacado', 'va', '-'\nif len(old) > 3:\n    f = text\nif old in text and ' ' not in text:\n    f = text.replace(old, new*len(old))\nwhile old in text:\n    text = text.replace(old, new)\nf = text",
        "'a--cado'",
        {
            "(71, 102)": "True\n"
        },
        {
            "(201, 205)": "str",
            "(150, 153)": "str",
            "(157, 161)": "str",
            "(71, 74)": "str",
            "(78, 82)": "str",
            "(98, 102)": "str",
            "(125, 128)": "str",
            "(187, 190)": "str",
            "(192, 195)": "str",
            "(112, 116)": "str",
            "(130, 133)": "str",
            "(174, 178)": "str",
            "(134, 137)": "builtin_function_or_method",
            "(138, 141)": "str"
        }
    ],
    [
        "multi_string = 'I am hungry! eat food.'\ncond_string = map(str.isascii, multi_string.split())\nif True in cond_string:\n    f = ', '.join(x for x in multi_string.split() if x.isascii())\nf = ''",
        "'I, am, hungry!, eat, food.'",
        {
            "(96, 115)": "True\n"
        },
        {
            "(54, 57)": "type",
            "(104, 115)": "map",
            "(58, 61)": "type",
            "(71, 83)": "str",
            "(146, 158)": "str"
        }
    ],
    [
        "text, suffix = 'mathematics', 'example'\nif suffix and text.endswith(suffix):\n    f = text[:- len(suffix)]\nf = text",
        "'mathematics'",
        {},
        {
            "(110, 114)": "str"
        }
    ],
    [
        "n, l = 0, ['aaa', 'bbb']\narchive = {}\nfor _ in range(n):\n    archive.clear()\n    archive.update({x + 10: x * 10 for x in l})\nf = archive",
        "{}",
        {},
        {
            "(129, 136)": "dict"
        }
    ],
    [
        "full, part = 'hrsiajiajieihruejfhbrisvlmmy', 'hr'\nlength = len(part)\nindex = full.find(part)\ncount = 0\nwhile index >= 0:\n    full = full[index + length:]\n    index = full.find(part)\n    count += 1\nf = count",
        "2",
        {},
        {
            "(201, 206)": "int",
            "(59, 62)": "builtin_function_or_method",
            "(63, 67)": "str",
            "(87, 91)": "str",
            "(109, 114)": "int",
            "(77, 81)": "str",
            "(132, 136)": "str",
            "(176, 180)": "str",
            "(166, 170)": "str",
            "(137, 142)": "int",
            "(145, 151)": "int"
        }
    ],
    [
        "no = ['l', 'f', 'h', 'g', 's', 'b']\nd = dict.fromkeys(no, False) \nf = sum([1 for i in d.keys()])",
        "6",
        {},
        {
            "(54, 56)": "list",
            "(70, 73)": "builtin_function_or_method",
            "(40, 44)": "type",
            "(86, 87)": "dict"
        }
    ],
    [
        "xs = [6, 3, 4, 1, 2, 3, 5]\nnew_x = xs[0] - 1\nxs.pop(0)\nwhile(new_x <= xs[0]):\n    xs.pop(0)\n    new_x -= 1\nxs.insert(0, new_x)\nf = xs",
        "[5, 3, 4, 1, 2, 3, 5]",
        {},
        {
            "(131, 133)": "list",
            "(120, 125)": "int",
            "(35, 37)": "list",
            "(45, 47)": "list",
            "(107, 109)": "list"
        }
    ],
    [
        "text = 'Josh'\nls = list(text)\nls[0], ls[-1] = ls[-1].upper(), ls[0].upper()\nf = ''.join(ls).istitle()",
        "False",
        {},
        {
            "(19, 23)": "type",
            "(24, 28)": "str",
            "(30, 32)": "list",
            "(37, 39)": "list",
            "(88, 90)": "list",
            "(46, 48)": "list",
            "(62, 64)": "list"
        }
    ],
    [
        "s = [6, 1, 2, 3]\nwhile len(s) > 1:\n    s.clear()\n    s.append(len(s))\nf = s.pop()",
        "0",
        {},
        {
            "(23, 26)": "builtin_function_or_method",
            "(27, 28)": "list",
            "(74, 75)": "list",
            "(39, 40)": "list",
            "(53, 54)": "list",
            "(62, 65)": "builtin_function_or_method",
            "(66, 67)": "list"
        }
    ],
    [
        "m = [-4, 6, 0, 4, -7, 2, -1]\nm.reverse()\nf = m",
        "[-1, 2, -7, 4, 0, 6, -4]",
        {},
        {
            "(45, 46)": "list",
            "(29, 30)": "list"
        }
    ],
    [
        "text, char = 'querist', 'u'\nif text:\n    text = text.removeprefix(char)\n    text = text.removeprefix(text[-1])\n    text = text[:-1] + text[-1].capitalize()\nf = text",
        "'querisT'",
        {
            "(31, 35)": "True\n"
        },
        {
            "(31, 35)": "str",
            "(160, 164)": "str",
            "(66, 70)": "str",
            "(48, 52)": "str",
            "(83, 87)": "str",
            "(101, 105)": "str",
            "(122, 126)": "str",
            "(134, 138)": "str"
        }
    ],
    [
        "nums = [1, 3, -1, 1, -2, 6]\na = 0\nfor i in range(len(nums)):\n    nums.insert(i, nums[a])\n    a += 1\nf = nums",
        "[1, 1, 1, 1, 1, 1, 1, 3, -1, 1, -2, 6]",
        {},
        {
            "(104, 108)": "list",
            "(43, 48)": "type",
            "(49, 52)": "builtin_function_or_method",
            "(53, 57)": "list",
            "(77, 78)": "int",
            "(65, 69)": "list",
            "(80, 84)": "list",
            "(85, 86)": "int"
        }
    ],
    [
        "text, pref = 'Hello World', 'W'\nif isinstance(pref, list):\n    f = ', '.join(text.startswith(x) for x in pref)\nelse:\n    f = text.startswith(pref)",
        "False",
        {},
        {
            "(141, 145)": "str",
            "(125, 129)": "str"
        }
    ],
    [
        "start, end, interval = 3, 10, 1\nsteps = list(range(start, end + 1, interval))\nif 1 in steps:\n    steps[-1] = end + 1\nf = len(steps)",
        "8",
        {},
        {
            "(40, 44)": "type",
            "(121, 124)": "builtin_function_or_method",
            "(125, 130)": "list",
            "(45, 50)": "type",
            "(51, 56)": "int",
            "(67, 75)": "int",
            "(58, 61)": "int"
        }
    ],
    [
        "s = 'jbucwc'\nf = '{}{}{}'.format(s[3:], s[2], s[5:8])",
        "'cwcuc'",
        {},
        {
            "(33, 34)": "str",
            "(40, 41)": "str",
            "(46, 47)": "str"
        }
    ],
    [
        "d = {'X': ['x', 'y']}\ndCopy = d.copy()\nfor key, value in dCopy.items():\n    for i in range(len(value)):\n        value[i] = value[i].upper()\nf = dCopy",
        "{'X': ['X', 'Y']}",
        {},
        {
            "(144, 149)": "dict",
            "(30, 31)": "dict",
            "(57, 62)": "dict",
            "(85, 90)": "type",
            "(91, 94)": "builtin_function_or_method",
            "(95, 100)": "list",
            "(112, 117)": "list",
            "(118, 119)": "int",
            "(123, 128)": "list",
            "(129, 130)": "int"
        }
    ],
    [
        "array = ((8, 5), (8, 2), (5, 3))\nd = dict(array)\nfor key, value in d.items():\n    if value < 0 or value > 9:\n        f = None\nf = d",
        "{8: 2, 5: 3}",
        {},
        {
            "(130, 131)": "dict",
            "(37, 41)": "type",
            "(42, 47)": "tuple",
            "(67, 68)": "dict"
        }
    ],
    [
        "text, old, new = 'jysrhfm ojwesf xgwwdyr dlrul ymba bpq', 'j', '1'\nindex = text.rfind(old, 0, text.find(old))\nresult = list(text)\nwhile index > 0:\n    result[index:index+len(old)] = new\n    index = text.rfind(old, 0, index)\nf = ''.join(result)",
        "'jysrhfm ojwesf xgwwdyr dlrul ymba bpq'",
        {},
        {
            "(86, 89)": "str",
            "(119, 123)": "type",
            "(124, 128)": "str",
            "(236, 242)": "list",
            "(75, 79)": "str",
            "(104, 107)": "str",
            "(94, 98)": "str"
        }
    ],
    [
        "lst = [7, 8, 2, 8]\nlst.reverse()\nlst.pop()\nlst.reverse()\nf = lst",
        "[8, 2, 8]",
        {},
        {
            "(61, 64)": "list",
            "(19, 22)": "list",
            "(33, 36)": "list",
            "(43, 46)": "list"
        }
    ],
    [
        "s, p = \"qqqqq\", \"qqq\"\narr = s.partition(p)\npart_one, part_two, part_three = len(arr[0]), len(arr[1]), len(arr[2])\nif part_one >= 2 and part_two <= 2 and part_three >= 2:\n    f = (arr[0][::-1] + arr[1] + arr[2][::-1] + '#')\nf = (arr[0] + arr[1] + arr[2])",
        "'qqqqq'",
        {},
        {
            "(40, 41)": "str",
            "(28, 29)": "str",
            "(76, 79)": "builtin_function_or_method",
            "(89, 92)": "builtin_function_or_method",
            "(102, 105)": "builtin_function_or_method",
            "(246, 249)": "tuple",
            "(80, 83)": "tuple",
            "(93, 96)": "tuple",
            "(106, 109)": "tuple",
            "(228, 231)": "tuple",
            "(237, 240)": "tuple"
        }
    ],
    [
        "text, value = 'mmfbifen', 'i'\nif not value in text:\n    f = ''\nf = text.rpartition(value)[0]",
        "'mmfb'",
        {},
        {
            "(83, 88)": "str",
            "(67, 71)": "str"
        }
    ],
    [
        "str, n = \"try.\", 5\nif len(str) < n:\n    f = str\nelse:\n    f = str.removeprefix(str[:n])",
        "'try.'",
        {
            "(22, 34)": "True\n"
        },
        {
            "(33, 34)": "int",
            "(44, 47)": "str",
            "(22, 25)": "builtin_function_or_method",
            "(26, 29)": "str"
        }
    ],
    [
        "array = [1, 2, 1]\nnew_array = array.copy()\nnew_array = reversed(new_array)\nf = [x*x for x in new_array]",
        "[1, 4, 1]",
        {},
        {
            "(55, 63)": "type",
            "(64, 73)": "list_reverseiterator",
            "(30, 35)": "list",
            "(93, 102)": "list_reverseiterator"
        }
    ],
    [
        "selfie = [4, 2, 5, 1, 3, 2, 6]\nlo = len(selfie)\nfor i in range(lo-1, -1, -1):\n    if selfie[i] == selfie[0]:\n        selfie.remove(selfie[lo-1])\nf = selfie",
        "[4, 2, 5, 1, 3, 2]",
        {},
        {
            "(149, 155)": "list",
            "(36, 39)": "builtin_function_or_method",
            "(40, 46)": "list",
            "(57, 62)": "type",
            "(63, 65)": "int",
            "(85, 91)": "list",
            "(92, 93)": "int",
            "(98, 104)": "list",
            "(117, 123)": "list",
            "(131, 137)": "list",
            "(138, 140)": "int"
        }
    ],
    [
        "s = '\"Makers of a Statement\"'\ns = s.replace('\"', '')\nlst = list(s)\ncol = 0\ncount = 1\nwhile col < len(lst) and lst[col] in \".:,\":\n    if lst[col] == \".\":\n        count = ls[col] + 1\n    col += 1\nf = s[col+count:]",
        "'akers of a Statement'",
        {},
        {
            "(59, 63)": "type",
            "(64, 65)": "str",
            "(198, 199)": "str",
            "(34, 35)": "str",
            "(200, 203)": "int",
            "(204, 209)": "int"
        }
    ],
    [
        "a = '/CL44     '\na = a.replace('/', ':')\nz = a.rpartition(':')\nf = [z[0], z[1], z[2]]",
        "['', ':', 'CL44     ']",
        {},
        {
            "(21, 22)": "str",
            "(45, 46)": "str",
            "(68, 69)": "tuple",
            "(74, 75)": "tuple",
            "(80, 81)": "tuple"
        }
    ],
    [
        "numbers, elem, idx = [1, 2, 3], 8, 5\nnumbers.insert(idx, elem)\nf = numbers",
        "[1, 2, 3, 8]",
        {},
        {
            "(67, 74)": "list",
            "(52, 55)": "int",
            "(57, 61)": "int",
            "(37, 44)": "list"
        }
    ],
    [
        "s = 's a a b s d s a a s a a'\ncount = len(s) - 1\nreverse_s = s[::-1]\nwhile count > 0 and reverse_s[::2].rfind('sea') == -1:\n    count -= 1\n    reverse_s = reverse_s[:count]\nf = reverse_s[count:]",
        "''",
        {},
        {
            "(61, 62)": "str",
            "(177, 186)": "str",
            "(38, 41)": "builtin_function_or_method",
            "(42, 43)": "str",
            "(75, 80)": "int",
            "(155, 164)": "str",
            "(187, 192)": "int",
            "(166, 171)": "int",
            "(89, 98)": "str"
        }
    ],
    [
        "nums = []\nfor i in range(len(nums)):\n    if not i % 2:\n        nums.append(nums[i] * nums[i + 1])\nf = nums",
        "[]",
        {},
        {
            "(102, 106)": "list"
        }
    ],
    [
        "d = {5: 1, 'abc': 2, 'defghi': 2, 87.29: 3}\nresult = []\nwhile len(d.keys()) > 0:\n    result.append(d.popitem())\nf = result",
        "[(87.29, 3), ('defghi', 2), ('abc', 2), (5, 1)]",
        {},
        {
            "(116, 122)": "list",
            "(62, 65)": "builtin_function_or_method",
            "(85, 91)": "list",
            "(66, 67)": "dict",
            "(99, 100)": "dict"
        }
    ],
    [
        "arr1, arr2 = [5, 1, 3, 7, 8], ['', 0, -1, []]\nnew_arr = arr1.copy()\nnew_arr.extend(arr2)\nf = new_arr",
        "[5, 1, 3, 7, 8, '', 0, -1, []]",
        {},
        {
            "(93, 100)": "list",
            "(83, 87)": "list",
            "(56, 60)": "list",
            "(68, 75)": "list"
        }
    ],
    [
        "n, m = 1, 3\narr = list(range(1, n+1))\nfor i in range(m):\n    arr.clear()\nf = arr",
        "[]",
        {},
        {
            "(77, 80)": "list",
            "(18, 22)": "type",
            "(47, 52)": "type",
            "(53, 54)": "int",
            "(23, 28)": "type",
            "(32, 33)": "int",
            "(61, 64)": "list"
        }
    ],
    [
        "text = \"Dmreh,Sspp,T,G ,.tB,Vxk,Cct\"\ntext = text.split(',')\ntext.pop(0)\ntext.insert(0, text.pop(text.index('T')))\nf = 'T' + ',' + ','.join(text)",
        "'T,T,Sspp,G ,.tB,Vxk,Cct'",
        {},
        {
            "(44, 48)": "list",
            "(60, 64)": "list",
            "(72, 76)": "list",
            "(139, 143)": "list",
            "(87, 91)": "list",
            "(96, 100)": "list"
        }
    ],
    [
        "numbers, num, val = [], 0, 1\nwhile len(numbers) < num:\n    numbers.insert(len(numbers) // 2, val)\nfor _ in range(len(numbers) // (num - 1) - 4):\n    numbers.insert(len(numbers) // 2, val)\nf = ' '.join(numbers)",
        "''",
        {},
        {
            "(201, 208)": "list"
        }
    ],
    [
        "s, characters = 's7 6s 1ss', [1, 3, 6, 1, 2]\nf = [s[i:i+1] for i in characters]",
        "['7', '6', '1', '7', ' ']",
        {},
        {
            "(50, 51)": "str",
            "(68, 78)": "list"
        }
    ],
    [
        "tap_hierarchy = ['john', 'doe', 'the', 'john', 'doe']\nhierarchy = {}\nfor gift in tap_hierarchy:\n    hierarchy = hierarchy.fromkeys(gift, None)\nf = hierarchy",
        "{'d': None, 'o': None, 'e': None}",
        {},
        {
            "(81, 94)": "list",
            "(147, 156)": "dict",
            "(131, 135)": "str",
            "(112, 121)": "dict"
        }
    ],
    [
        "string = '1  \\t\\t\\t3'\nbigTab = 100\nfor i in range(10, 30):\n    if 0 < string.count('\\t') < 20:\n        bigTab = i\n        break\nf = string.expandtabs(bigTab)",
        "'1                             3'",
        {},
        {
            "(44, 49)": "type",
            "(150, 156)": "int",
            "(112, 113)": "int",
            "(132, 138)": "str",
            "(70, 76)": "str"
        }
    ],
    [
        "value = 'coscifysu'\nparts = value.partition(' ')[::2]\nf = ''.join(parts)",
        "'coscifysu'",
        {},
        {
            "(66, 71)": "tuple",
            "(28, 33)": "str"
        }
    ],
    [
        "base, k, v = {37: 'forty-five'}, '23', 'what?'\nbase[k] = v\nf = base",
        "{37: 'forty-five', '23': 'what?'}",
        {},
        {
            "(57, 58)": "str",
            "(63, 67)": "dict",
            "(47, 51)": "dict",
            "(52, 53)": "str"
        }
    ],
    [
        "lst = [1, 2, 3, 4]\nres = []\nfor i in range(len(lst)):\n    if lst[i] % 2 == 0:\n        res.append(lst[i])\n\nf = lst.copy()",
        "[1, 2, 3, 4]",
        {},
        {
            "(37, 42)": "type",
            "(43, 46)": "builtin_function_or_method",
            "(47, 50)": "list",
            "(110, 113)": "list",
            "(61, 64)": "list",
            "(65, 66)": "int",
            "(86, 89)": "list",
            "(97, 100)": "list",
            "(101, 102)": "int"
        }
    ],
    [
        "text = \"lorem ipsum\"\nfor space in text:\n    if space == ' ':\n        text = text.lstrip()\n    else:\n        text = text.replace('cd', space)\nf = text",
        "'lorem ipsum'",
        {},
        {
            "(34, 38)": "str",
            "(145, 149)": "str",
            "(47, 52)": "str",
            "(134, 139)": "str",
            "(76, 80)": "str",
            "(115, 119)": "str"
        }
    ],
    [
        "nums = [-5, 3, -2, -3, -1, 3, 5]\ncount = len(nums)\nfor i in range(count-1, 0, -2):\n    nums.insert(i, nums.pop(0) + nums.pop(0))\nf = nums",
        "[5, -2, 2, -5]",
        {},
        {
            "(133, 137)": "list",
            "(41, 44)": "builtin_function_or_method",
            "(45, 49)": "list",
            "(60, 65)": "type",
            "(66, 71)": "int",
            "(99, 100)": "int",
            "(87, 91)": "list",
            "(102, 106)": "list",
            "(116, 120)": "list"
        }
    ],
    [
        "names = \"carrot, banana, and strawberry\"\nparts = names.split(',')\nfor i, part in enumerate(parts):\n    parts[i] = part.replace(' and', '+').title().replace('+', ' and')\nf = ', '.join(parts)",
        "'Carrot,  Banana,  and Strawberry'",
        {},
        {
            "(81, 90)": "type",
            "(91, 96)": "list",
            "(183, 188)": "list",
            "(49, 54)": "str",
            "(103, 108)": "list",
            "(109, 110)": "int",
            "(114, 118)": "str"
        }
    ],
    [
        "array = []\nl = len(array)\nif l % 2 == 0:\n    array.clear()\nelse:\n    array.reverse()\nf = array",
        "[]",
        {
            "(29, 39)": "True\n"
        },
        {
            "(89, 94)": "list",
            "(15, 18)": "builtin_function_or_method",
            "(19, 24)": "list",
            "(29, 30)": "int",
            "(45, 50)": "list"
        }
    ],
    [
        "text, tab_size = \"\\ta\", 3\nres = ''\ntext = text.replace('\\t', ' '*(tab_size-1))\nfor i in range(len(text)):\n    if text[i] == ' ':\n        res += '|'\n    else:\n        res += text[i]\nf = res",
        "'||a'",
        {},
        {
            "(185, 188)": "str",
            "(88, 93)": "type",
            "(42, 46)": "str",
            "(94, 97)": "builtin_function_or_method",
            "(98, 102)": "str",
            "(66, 74)": "int",
            "(113, 117)": "str",
            "(118, 119)": "int",
            "(173, 177)": "str",
            "(178, 179)": "int"
        }
    ],
    [
        "text, suffix = 'uMeGndkGh', 'kG'\nif suffix == '':\n    suffix = None\nf = text.endswith(suffix)",
        "False",
        {},
        {
            "(86, 92)": "str",
            "(72, 76)": "str"
        }
    ],
    [
        "x = '1'\nn = len(x)\ni = 0\nwhile i < n and x[i].isdigit():\n    i += 1\nf = i == n",
        "True",
        {},
        {
            "(12, 15)": "builtin_function_or_method",
            "(16, 17)": "str",
            "(72, 73)": "int",
            "(77, 78)": "int",
            "(31, 32)": "int",
            "(35, 36)": "int",
            "(41, 42)": "str",
            "(43, 44)": "int"
        }
    ],
    [
        "strs = 'K zBK'\nstrs = strs.split()\nfor i in range(1, len(strs), 2):\n    strs[i] = ''.join(reversed(strs[i]))\nf = ' '.join(strs)",
        "'K KBz'",
        {},
        {
            "(44, 49)": "type",
            "(122, 126)": "list",
            "(22, 26)": "list",
            "(53, 56)": "builtin_function_or_method",
            "(57, 61)": "list",
            "(72, 76)": "list",
            "(77, 78)": "int",
            "(90, 98)": "type",
            "(99, 103)": "list",
            "(104, 105)": "int"
        }
    ],
    [
        "text, char = 'pn', 'p'\ntext = list(text)\nfor count, item in enumerate(text):\n    if item == char:\n        text.remove(item)\n        f = ''.join(text)\nf = text",
        "'n'",
        {},
        {
            "(154, 158)": "list",
            "(30, 34)": "type",
            "(35, 39)": "list",
            "(60, 69)": "type",
            "(70, 74)": "list",
            "(84, 88)": "str",
            "(92, 96)": "str",
            "(118, 122)": "str",
            "(144, 148)": "list",
            "(106, 110)": "list"
        }
    ],
    [
        "text = 'l000*',\ncounter = 0\nfor char in text:\n    if char.isalpha():\n        counter += 1\nf = counter",
        "1",
        {},
        {
            "(40, 44)": "tuple",
            "(94, 101)": "int"
        }
    ],
    [
        "string, c = 'wrsch)xjmb8', 'c'\nf = string.endswith(c)",
        "False",
        {},
        {
            "(51, 52)": "str",
            "(35, 41)": "str"
        }
    ],
    [
        "d, count = {'a': 2, 'b': [], 'c': {}}, 0\nnew_dict = {}\nfor _ in range(count):\n    d = d.copy()\n    new_dict = {**d, **new_dict}\nf = new_dict",
        "{}",
        {},
        {
            "(132, 140)": "dict"
        }
    ],
    [
        "text = '?XyZ'\nuppers = 0\nfor c in text:\n    if c.isupper():\n        uppers += 1\nf = text.upper() if uppers >= 10 else text",
        "'?XyZ'",
        {},
        {
            "(34, 38)": "str",
            "(118, 122)": "str",
            "(100, 106)": "int",
            "(47, 48)": "str",
            "(84, 88)": "str"
        }
    ],
    [
        "s, tab = \"Join us in Hungary\", 4\nf = s.expandtabs(tab)",
        "'Join us in Hungary'",
        {},
        {
            "(50, 53)": "int",
            "(37, 38)": "str"
        }
    ],
    [
        "nums = [3, 1, 7, 5, 6]\ncount = list(range(len(nums)))\nfor i in range(len(nums)):\n    nums.pop()\n    if len(count) > 0:\n        count.pop(0)\nf = nums",
        "[]",
        {},
        {
            "(144, 148)": "list",
            "(31, 35)": "type",
            "(63, 68)": "type",
            "(36, 41)": "type",
            "(69, 72)": "builtin_function_or_method",
            "(73, 77)": "list",
            "(42, 45)": "builtin_function_or_method",
            "(46, 50)": "list",
            "(85, 89)": "list",
            "(103, 106)": "builtin_function_or_method",
            "(107, 112)": "list",
            "(127, 132)": "list"
        }
    ],
    [
        "text, search_chars, replace_chars = 'mmm34mIm', 'mm3', ',po'\ntrans_table = str.maketrans(search_chars, replace_chars)\nf = text.translate(trans_table)",
        "'pppo4pIp'",
        {},
        {
            "(89, 101)": "str",
            "(103, 116)": "str",
            "(137, 148)": "dict",
            "(75, 78)": "type",
            "(122, 126)": "str"
        }
    ],
    [
        "arr, d = ['b', 'vzjmc', 'f', 'ae', '0'], dict()\nfor i in range(1, len(arr), 2):\n    d.update({arr[i]: arr[i-1]})\n\nf = d",
        "{'vzjmc': 'b', 'ae': 'f'}",
        {},
        {
            "(118, 119)": "dict",
            "(57, 62)": "type",
            "(41, 45)": "type",
            "(66, 69)": "builtin_function_or_method",
            "(70, 73)": "list",
            "(84, 85)": "dict",
            "(94, 97)": "list",
            "(98, 99)": "int",
            "(102, 105)": "list",
            "(106, 107)": "int"
        }
    ],
    [
        "text, amount = 'GENERAL NAGOOR', 5\nlength = len(text)\npre_text = '|'\nif amount >= length:\n    extra_space = amount - length\n    pre_text += ' ' * (extra_space // 2)\n    f = pre_text + text + pre_text\nf = text",
        "'GENERAL NAGOOR'",
        {},
        {
            "(204, 208)": "str",
            "(44, 47)": "builtin_function_or_method",
            "(48, 52)": "str"
        }
    ],
    [
        "text, search = '123', '123eenhas0'\nf = search.startswith(text) or False",
        "True",
        {
            "(39, 62)": "True\n",
            "(66, 71)": "False\n",
            "(39, 71)": "True\n"
        },
        {
            "(57, 61)": "str",
            "(39, 45)": "str"
        }
    ],
    [
        "text, value = 'ldebgp o', 'o'\nlength = len(text)\nletters = list(text)\nif value not in letters:\n    value = letters[0]\nf = value * length",
        "'oooooooo'",
        {},
        {
            "(39, 42)": "builtin_function_or_method",
            "(43, 47)": "str",
            "(59, 63)": "type",
            "(64, 68)": "str",
            "(122, 127)": "str",
            "(130, 136)": "int"
        }
    ],
    [
        "dict = {-1: -1, 5: 5, 3: 6, -4: -4}\nresult = dict.copy()\nremove_keys = []\nfor k, v in dict.items():\n    if v in dict:\n        del result[k]\nf = result",
        "{3: 6}",
        {},
        {
            "(144, 150)": "dict",
            "(45, 49)": "dict",
            "(86, 90)": "dict",
            "(107, 108)": "int",
            "(112, 116)": "dict",
            "(130, 136)": "dict",
            "(137, 138)": "int"
        }
    ],
    [
        "ans = '0'\nif ans.isdecimal():\n    total = int(ans) * 4 - 50\n    total -= len([c for c in list(ans) if c not in '02468']) * 100\n    f = total\nf = 'NAN'",
        "-50",
        {
            "(13, 28)": "True\n"
        },
        {
            "(135, 140)": "int",
            "(13, 16)": "str",
            "(73, 76)": "builtin_function_or_method",
            "(42, 45)": "type",
            "(46, 49)": "str",
            "(89, 93)": "type",
            "(94, 97)": "str"
        }
    ],
    [
        "seq, value = ['wise king', 'young king'], ''\nroles = dict.fromkeys(seq, 'north')\nif value:\n    roles.update(key.strip() for key in value.split(', '))\nf = roles",
        "{'wise king': 'north', 'young king': 'north'}",
        {},
        {
            "(154, 159)": "dict",
            "(67, 70)": "list",
            "(53, 57)": "type"
        }
    ],
    [
        "text = '-----\\t\\n\\tth\\n-----'\nlength = len(text)\nindex = 0\nwhile index < length and text[index].isspace():\n    index += 1\nf = text[index:index+5]",
        "'-----'",
        {},
        {
            "(39, 42)": "builtin_function_or_method",
            "(43, 47)": "str",
            "(126, 130)": "str",
            "(131, 136)": "int",
            "(137, 142)": "int"
        }
    ],
    [
        "nums = {}\ncopy = nums.copy()\nnewDict = dict()\nfor k in copy:\n    newDict[k] = len(copy[k])\nf = newDict",
        "{}",
        {},
        {
            "(95, 102)": "dict",
            "(39, 43)": "type",
            "(17, 21)": "dict"
        }
    ],
    [
        "a, b, n = 'unrndqafi', 'c', 2\nresult = m = b\nfor _ in range(n):\n    if m:\n        a, m = a.replace(m, '', 1), None\n        result = m = b\nf = result.join(a.split(b))",
        "'unrndqafi'",
        {},
        {
            "(43, 44)": "str",
            "(54, 59)": "type",
            "(60, 61)": "int",
            "(71, 72)": "str",
            "(136, 137)": "str",
            "(142, 148)": "str",
            "(162, 163)": "str",
            "(154, 155)": "str",
            "(99, 100)": "NoneType",
            "(89, 90)": "str"
        }
    ],
    [
        "text, position, value = 'sduyai', 1, 'y'\nlength = len(text)\nindex = position % (length)\nif position < 0:\n    index = length // 2\nnew_text = list(text)\nnew_text.insert(index, value)\nnew_text.pop(length-1)\nf = ''.join(new_text)",
        "'syduyi'",
        {},
        {
            "(50, 53)": "builtin_function_or_method",
            "(54, 58)": "str",
            "(68, 76)": "int",
            "(80, 86)": "int",
            "(140, 144)": "type",
            "(145, 149)": "str",
            "(167, 172)": "int",
            "(174, 179)": "str",
            "(216, 224)": "list",
            "(151, 159)": "list",
            "(181, 189)": "list",
            "(194, 200)": "int"
        }
    ],
    [
        "number = 2\ntransl = {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5}\nresult = []\nfor key, value in transl.items():\n    if value % number == 0:\n        result.append(key)\nf = result",
        "['B', 'D']",
        {},
        {
            "(166, 172)": "list",
            "(91, 97)": "dict",
            "(114, 119)": "int",
            "(122, 128)": "int",
            "(157, 160)": "str",
            "(143, 149)": "list"
        }
    ],
    [
        "val, text = 'o', 'fnmart'\nindices = [index for index in range(len(text)) if text[index] == val]\nif len(indices) == 0:\n    f = -1\nelse:\n    f = indices[0]",
        "-1",
        {
            "(99, 116)": "True\n"
        },
        {
            "(99, 102)": "builtin_function_or_method",
            "(103, 110)": "list",
            "(56, 61)": "type",
            "(91, 94)": "str",
            "(62, 65)": "builtin_function_or_method",
            "(66, 70)": "str",
            "(76, 80)": "str"
        }
    ],
    [
        "text = \"x--y-z-5-C\"\nd = {}\nfor char in text.replace('-', '').lower():\n    d[char] = d[char] + 1 if char in d else 1\nd = sorted(d.items(), key=lambda x: x[1])\nf = [val for i, val in d]",
        "[1, 1, 1, 1, 1]",
        {},
        {
            "(120, 126)": "builtin_function_or_method",
            "(74, 75)": "dict",
            "(76, 80)": "str",
            "(181, 182)": "list",
            "(99, 103)": "str",
            "(107, 108)": "dict",
            "(127, 128)": "list",
            "(39, 43)": "str",
            "(84, 85)": "dict",
            "(86, 90)": "str"
        }
    ],
    [
        "text, value = 'scedvtvotkwqfoqn', 'o'\nindexes = list()\nfor i in range(len(text)):\n    if text[i] == value:\n        indexes.append(i)\nnew_text = list(text)\nfor i in indexes:\n    new_text.remove(value)\nf = ''.join(new_text)",
        "'scedvtvtkwqfqn'",
        {},
        {
            "(164, 171)": "list",
            "(48, 52)": "type",
            "(64, 69)": "type",
            "(144, 148)": "type",
            "(149, 153)": "str",
            "(212, 220)": "list",
            "(70, 73)": "builtin_function_or_method",
            "(74, 78)": "str",
            "(100, 105)": "str",
            "(193, 198)": "str",
            "(89, 93)": "str",
            "(94, 95)": "int",
            "(130, 131)": "int",
            "(177, 185)": "list",
            "(115, 122)": "list"
        }
    ],
    [
        "txt, marker = '#[)[]>[^e>\\n 8', -5\na = []\nlines = txt.split('\\n')\nfor line in lines:\n    a.append(line.center(marker))\nf = '\\n'.join(a)",
        "'#[)[]>[^e>\\n 8'",
        {},
        {
            "(78, 83)": "list",
            "(133, 134)": "list",
            "(50, 53)": "str",
            "(89, 90)": "list",
            "(110, 116)": "int",
            "(98, 102)": "str"
        }
    ],
    [
        "array, index = [1], 0\nif index < 0:\n    index = len(array) + index\nf = array[index]",
        "1",
        {},
        {
            "(71, 76)": "list",
            "(77, 82)": "int"
        }
    ],
    [
        "a, split_on = \"booty boot-boot bootclass\", 'k'\nt = a.split()\na = []\nfor i in t:\n    for j in i:\n        a.append(j)\nif split_on in a:\n    f = True\nelse:\n    f = False",
        "False",
        {},
        {
            "(77, 78)": "list",
            "(93, 94)": "str",
            "(51, 52)": "str",
            "(113, 114)": "str",
            "(104, 105)": "list"
        }
    ],
    [
        "text = '|xduaisf'\ntopic, sep, problem = text.rpartition('|')\nif problem == 'r':\n    problem = topic.replace('u', 'p')\nf = topic, problem",
        "('', 'xduaisf')",
        {},
        {
            "(122, 127)": "str",
            "(129, 136)": "str",
            "(40, 44)": "str"
        }
    ],
    [
        "sb = 'meow meow'\nd = {}\nfor s in sb:\n    d[s] = d.get(s, 0) + 1\nf = d",
        "{'m': 2, 'e': 2, 'o': 2, 'w': 2, ' ': 1}",
        {},
        {
            "(33, 35)": "str",
            "(68, 69)": "dict",
            "(41, 42)": "dict",
            "(43, 44)": "str",
            "(54, 55)": "str",
            "(48, 49)": "dict"
        }
    ],
    [
        "nums, pop1, pop2 = [1, 5, 2, 3, 6], 2, 4\nnums.pop(pop1 - 1)\nnums.pop(pop2 - 1)\nf = nums",
        "[1, 2, 3]",
        {},
        {
            "(83, 87)": "list",
            "(41, 45)": "list",
            "(50, 54)": "int",
            "(60, 64)": "list",
            "(69, 73)": "int"
        }
    ],
    [
        "s, c1, c2 = '', 'mi', 'siast'\nif s == '':\n    f = s\nls = s.split(c1)\nfor index, item in enumerate(ls):\n    if c1 in item:\n        ls[index] = item.replace(c1, c2, 1)\nf = c1.join(ls)",
        "''",
        {
            "(33, 40)": "True\n"
        },
        {
            "(33, 34)": "str",
            "(50, 51)": "str",
            "(65, 67)": "str",
            "(88, 97)": "type",
            "(98, 100)": "list",
            "(178, 180)": "list",
            "(57, 58)": "str",
            "(170, 172)": "str"
        }
    ],
    [
        "values, item1, item2 = [1, 1], 2, 3\nif values[-1] == item2:\n    if values[0] not in values[1:]:\n        values.append(values[0])\nelif values[-1] == item1:\n    if values[0] == item2:\n        values.append(values[0])\nf = values",
        "[1, 1]",
        {},
        {
            "(219, 225)": "list"
        }
    ],
    [
        "text = 'Because it intrigues them'\nf = text.replace('\\\\\"', '\"')",
        "'Because it intrigues them'",
        {},
        {
            "(39, 43)": "str"
        }
    ],
    [
        "text, char = 'a', 'a'\nf = ' '.join(text.split(char, len(text)))",
        "' '",
        {},
        {
            "(46, 50)": "str",
            "(35, 39)": "str",
            "(52, 55)": "builtin_function_or_method",
            "(56, 60)": "str"
        }
    ],
    [
        "arr = ['91', '16', '6r', '5r', 'egr', '', 'f', 'q1f', '-2']\nresult = []\nfor item in arr:\n    try:\n        if item.isnumeric():\n            result.append(int(item)*2)\n    except ValueError:\n        result.append(item[::-1])\nf = result",
        "[182, 32]",
        {},
        {
            "(84, 87)": "list",
            "(227, 233)": "list"
        }
    ],
    [
        "tokens = 'gsd avdropj'\ntokens = tokens.split()\nif len(tokens) == 2:\n    tokens = list(reversed(tokens))\nresult = ' '.join([tokens[0].ljust(5), tokens[1].ljust(5)])\nf = result",
        "'avdropj gsd  '",
        {
            "(50, 66)": "True\n"
        },
        {
            "(168, 174)": "str",
            "(32, 38)": "list",
            "(50, 53)": "builtin_function_or_method",
            "(54, 60)": "list",
            "(81, 85)": "type",
            "(86, 94)": "type",
            "(95, 101)": "list",
            "(123, 129)": "list",
            "(143, 149)": "list"
        }
    ],
    [
        "dic = {1:1, 2:2, 3:3}\ndic_op = dic.copy()\nfor key, val in dic.items():\n    dic_op[key] = val * val\nf = dic_op",
        "{1: 1, 2: 4, 3: 9}",
        {},
        {
            "(103, 109)": "dict",
            "(31, 34)": "dict",
            "(58, 61)": "dict",
            "(75, 81)": "dict",
            "(82, 85)": "int",
            "(89, 92)": "int",
            "(95, 98)": "int"
        }
    ],
    [
        "dict = { 4: 'a' }\neven_keys = []\nfor key in dict.keys():\n    if key % 2 == 0:\n        even_keys.append(key)\nf = even_keys",
        "[4]",
        {},
        {
            "(112, 121)": "list",
            "(44, 48)": "dict",
            "(64, 67)": "int",
            "(103, 106)": "int",
            "(86, 95)": "list"
        }
    ],
    [
        "text, char = 'tezmgvn 651h', '6'\ncount = text.count(char)\nchars = list(text)\nif count > 0:\n    index = chars.index(char) + 1\n    chars[:index:index+1] = [c for c in chars[index:index+count:1]]\nf = ''.join(chars)",
        "'5ezmgvn 651h'",
        {
            "(80, 89)": "True\n"
        },
        {
            "(52, 56)": "str",
            "(66, 70)": "type",
            "(71, 75)": "str",
            "(80, 85)": "int",
            "(205, 210)": "list",
            "(41, 45)": "str",
            "(129, 134)": "list",
            "(115, 119)": "str",
            "(136, 141)": "int",
            "(103, 108)": "list",
            "(142, 147)": "int",
            "(165, 170)": "list",
            "(171, 176)": "int",
            "(177, 182)": "int",
            "(183, 188)": "int"
        }
    ],
    [
        "text, value = 'coscifysu', 'cos'\nf = text.removeprefix(value.lower())",
        "'cifysu'",
        {},
        {
            "(37, 41)": "str",
            "(55, 60)": "str"
        }
    ],
    [
        "s =  '\\ngiyixjkvu\\n\\r\\r \\frgjuo'\nf = ''.join([c for c in s if c.isspace()])",
        "'\\n\\n\\r\\r \\x0c'",
        {},
        {
            "(57, 58)": "str"
        }
    ],
    [
        "xs = [4, 8, 8, 5]\nfor i in range(-1, -len(xs)-1, -1):\n    xs.extend([xs[i], xs[i]])\nf = xs",
        "[4, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5]",
        {},
        {
            "(88, 90)": "list",
            "(27, 32)": "type",
            "(58, 60)": "list",
            "(38, 41)": "builtin_function_or_method",
            "(42, 44)": "list",
            "(69, 71)": "list",
            "(72, 73)": "int",
            "(76, 78)": "list",
            "(79, 80)": "int"
        }
    ],
    [
        "text, value = 'abbkebaniuwurzvr', 'm'\nls = list(text)\nif (ls.count(value)) % 2 == 0:\n    while value in ls:\n        ls.remove(value)\nelse:\n    ls.clear()\nf = ''.join(ls)",
        "'abbkebaniuwurzvr'",
        {
            "(57, 83)": "True\n"
        },
        {
            "(43, 47)": "type",
            "(48, 52)": "str",
            "(166, 168)": "list",
            "(67, 72)": "str",
            "(58, 60)": "list"
        }
    ],
    [
        "d = {'-4':'4','1':'2','-':'-3'}\nkeys = []\nfor k in d:\n    keys.append('%s => %s' % (k, d[k]))\nf = keys",
        "['-4 => 4', '1 => 2', '- => -3']",
        {},
        {
            "(51, 52)": "dict",
            "(98, 102)": "list",
            "(58, 62)": "list",
            "(84, 85)": "str",
            "(87, 88)": "dict",
            "(89, 90)": "str"
        }
    ],
    [
        "num, l = \"1\", 3\nt = \"\"\nwhile l > len(num):\n    t += '0'\n    l -= 1\nf = t + num",
        "'001'",
        {},
        {
            "(29, 30)": "int",
            "(71, 72)": "str",
            "(75, 78)": "str",
            "(33, 36)": "builtin_function_or_method",
            "(37, 40)": "str"
        }
    ],
    [
        "s = 'a1234\u00e5r'\nif str.isascii(s[-5:]):\n    f = s[-5:], s[0:][:3]\nelif str.isascii(s[:5]):\n    f = s[:5], s[-5:][3:]\nelse:\n    f = s",
        "('a1234', '\u00e5r')",
        {
            "(69, 87)": "True\n"
        },
        {
            "(69, 72)": "type",
            "(81, 82)": "str",
            "(97, 98)": "str",
            "(104, 105)": "str"
        }
    ],
    [
        "text, value = 'eftw{\u044c\u0422\u0441k_1', '\\\\'\nif isinstance(value, str):\n    f = text.count(value) + text.count(value.lower())\nf = text.count(value)",
        "0",
        {
            "(37, 59)": "True\n"
        },
        {
            "(37, 47)": "builtin_function_or_method",
            "(48, 53)": "str",
            "(55, 58)": "type",
            "(130, 135)": "str",
            "(119, 123)": "str",
            "(80, 85)": "str",
            "(69, 73)": "str",
            "(89, 93)": "str",
            "(100, 105)": "str"
        }
    ],
    [
        "n = 44\nb = list(str(n))\nfor i in range(2,len(b)): b[i] += '+'\nf = b",
        "['4', '4']",
        {},
        {
            "(66, 67)": "list",
            "(11, 15)": "type",
            "(33, 38)": "type",
            "(16, 19)": "type",
            "(20, 21)": "int",
            "(41, 44)": "builtin_function_or_method",
            "(45, 46)": "list",
            "(50, 51)": "list"
        }
    ],
    [
        "nums, idx, added = [2, 2, 2, 3, 3], 2, 3\nnums[idx:idx] = (added,)\nf = nums",
        "[2, 2, 3, 2, 3, 3]",
        {},
        {
            "(70, 74)": "list",
            "(41, 45)": "list",
            "(58, 63)": "int",
            "(46, 49)": "int",
            "(50, 53)": "int"
        }
    ],
    [
        "text, length, fillchar = 'magazine', 25, '.'\nsize = len(text)\nf = text.center(length, fillchar)",
        "'.........magazine........'",
        {},
        {
            "(52, 55)": "builtin_function_or_method",
            "(56, 60)": "str",
            "(78, 84)": "int",
            "(86, 94)": "str",
            "(66, 70)": "str"
        }
    ],
    [
        "text, delim = 'dsj osq wi w', ' '\nf = text[:text[::-1].find(delim)][::-1]",
        "'d'",
        {},
        {
            "(38, 42)": "str",
            "(60, 65)": "str",
            "(44, 48)": "str"
        }
    ],
    [
        "text, char = 'qpfi jzm', 'j'\nindex = text.rindex(char)\nresult = list(text)\nwhile index > 0:\n    result[index] = result[index-1]\n    result[index-1] = char\n    index -= 2\nf = ''.join(result)",
        "'jqjfj zm'",
        {},
        {
            "(49, 53)": "str",
            "(64, 68)": "type",
            "(69, 73)": "str",
            "(81, 86)": "int",
            "(150, 154)": "str",
            "(182, 188)": "list",
            "(37, 41)": "str",
            "(96, 102)": "list",
            "(103, 108)": "int",
            "(112, 118)": "list",
            "(132, 138)": "list",
            "(119, 124)": "int",
            "(139, 144)": "int"
        }
    ],
    [
        "name = 'Fred Smith'\nf = '*'.join(name.split(' '))",
        "'Fred*Smith'",
        {},
        {
            "(33, 37)": "str"
        }
    ],
    [
        "d = {}\nresult = [None] * len(d)\na = b = 0\nwhile d:\n    result[a] = d.popitem(a == b)\n    a, b = b, (b+1) % len(result)\nf = result",
        "[]",
        {},
        {
            "(123, 129)": "list",
            "(25, 28)": "builtin_function_or_method",
            "(29, 30)": "dict"
        }
    ],
    [
        "values = [1, 1, 1, 1]\nvalues.sort()\nf = values",
        "[1, 1, 1, 1]",
        {},
        {
            "(40, 46)": "list",
            "(22, 28)": "list"
        }
    ],
    [
        "string = '--4/0-209'\nwhile string:\n    if string[-1].isalpha():\n        f = string\n    string = string[:-1]\nf = string",
        "''",
        {},
        {
            "(27, 33)": "str",
            "(112, 118)": "str",
            "(96, 102)": "str"
        }
    ],
    [
        "n = 1\np = ''\nif n%2 == 1:\n    p+='sn'\nelse:\n    f = n*n\nfor x in range(1, n+1):\n    if x%2 == 0:\n        p+='to'\n    else:\n        p+='ts'\nf = p",
        "'snts'",
        {
            "(16, 24)": "True\n"
        },
        {
            "(143, 144)": "str",
            "(65, 70)": "type",
            "(16, 17)": "int",
            "(74, 75)": "int"
        }
    ],
    [
        "text, search = 'car hat', 'car'\nresult = text.lower()\nf = result.find(search.lower())",
        "0",
        {},
        {
            "(41, 45)": "str",
            "(58, 64)": "str",
            "(70, 76)": "str"
        }
    ],
    [
        "text, sep, maxsplit = 'ertubwi', 'p', 5\nsplitted = text.rsplit(sep, maxsplit)\nlength = len(splitted)\nnew_splitted = splitted[:length // 2]\nnew_splitted.reverse()\nnew_splitted += splitted[length // 2:]\nf = sep.join(new_splitted)",
        "'ertubwi'",
        {},
        {
            "(63, 66)": "str",
            "(68, 76)": "int",
            "(87, 90)": "builtin_function_or_method",
            "(91, 99)": "list",
            "(116, 124)": "list",
            "(178, 186)": "list",
            "(214, 226)": "list",
            "(51, 55)": "str",
            "(139, 151)": "list",
            "(205, 208)": "str",
            "(126, 132)": "int",
            "(187, 193)": "int"
        }
    ],
    [
        "value, width = 5, 1\nif value >= 0:\n    f = str(value).zfill(width)\n\nif value < 0:\n    f = '-' + str(-value).zfill(width)\nf = ''",
        "'5'",
        {
            "(23, 33)": "True\n"
        },
        {
            "(23, 28)": "int",
            "(60, 65)": "int",
            "(43, 46)": "type",
            "(47, 52)": "int"
        }
    ],
    [
        "a, b, c, d, e = {7: 'ii5p', 1: 'o3Jwus', 3: 'lot9L', 2: '04g', 9: 'Wjf', 8: '5b', 0: 'te6', 5: 'flLO', 6: 'jq', 4: 'vfa0tW'}, 4, 'Wy', 'Wy', 1.0\nkey = d\nif key in a:\n    num = a.pop(key)\nif b > 3:\n    f = ''.join(c)\nelse:\n    f = num",
        "'Wy'",
        {
            "(190, 195)": "True\n"
        },
        {
            "(151, 152)": "str",
            "(190, 191)": "int",
            "(213, 214)": "str"
        }
    ],
    [
        "fields, update_dict = ('ct', 'c', 'ca'), {'ca': 'cx'}\ndi = dict((x, '') for x in fields)\ndi.update(update_dict)\nf = di",
        "{'ct': '', 'c': '', 'ca': 'cx'}",
        {},
        {
            "(116, 118)": "dict",
            "(59, 63)": "type",
            "(99, 110)": "dict",
            "(89, 91)": "dict",
            "(81, 87)": "tuple"
        }
    ],
    [
        "s = '102'\nf = len(s) == s.count('0') + s.count('1')",
        "False",
        {},
        {
            "(14, 17)": "builtin_function_or_method",
            "(18, 19)": "str",
            "(24, 25)": "str",
            "(39, 40)": "str"
        }
    ],
    [
        "array = [0, 2]\nwhile -1 in array:\n    array.pop(-3)\nwhile 0 in array:\n    array.pop()\nwhile 1 in array:\n    array.pop(0)\nf = array",
        "[]",
        {},
        {
            "(125, 130)": "list",
            "(63, 68)": "list",
            "(74, 79)": "list"
        }
    ],
    [
        "text = '-stew---corn-and-beans-in soup-.-'\nfor item in text.split():\n    text = text.replace('-{}'.format(item), ' ').replace('{}-'.format(item), ' ')\nf = text.strip('-')",
        "'stew---corn-and-beans-in soup-.'",
        {},
        {
            "(55, 59)": "str",
            "(155, 159)": "str",
            "(139, 143)": "str",
            "(80, 84)": "str",
            "(106, 110)": "str"
        }
    ],
    [
        "array = [1, 2, 3, 4, 5]\nresult = array.copy()\nresult.reverse()\nresult[:] = [item * 2 for item in result]\nf = result",
        "[10, 8, 6, 4, 2]",
        {},
        {
            "(109, 115)": "list",
            "(63, 69)": "list",
            "(33, 38)": "list",
            "(46, 52)": "list",
            "(97, 103)": "list"
        }
    ],
    [
        "strings, substr = ['condor', 'eyes', 'gay', 'isa' ], 'd'\nlist = [s for s in strings if s.startswith(substr)]\nf = sorted(list, key=len)",
        "[]",
        {},
        {
            "(113, 119)": "builtin_function_or_method",
            "(120, 124)": "list",
            "(76, 83)": "list",
            "(130, 133)": "builtin_function_or_method",
            "(100, 106)": "str"
        }
    ],
    [
        "text = 'SzHjifnzog'\nfor i in range(len(text)-1, 0, -1):\n    if not text[i].isupper():\n        f = text[0:i]\nf = ''",
        "'SzHjifnzo'",
        {},
        {
            "(29, 34)": "type",
            "(35, 38)": "builtin_function_or_method",
            "(39, 43)": "str",
            "(98, 102)": "str",
            "(105, 106)": "int",
            "(67, 71)": "str",
            "(72, 73)": "int"
        }
    ],
    [
        "text = 'the speed is -36 miles per hour'\nf = not text.isdecimal()",
        "True",
        {},
        {
            "(49, 53)": "str"
        }
    ],
    [
        "d = {}\nd['luck'] = 42\nd.clear()\nf = {1: False, 2 :0}",
        "{1: False, 2: 0}",
        {},
        {
            "(7, 8)": "dict",
            "(22, 23)": "dict"
        }
    ],
    [
        "album_sales = [6]\nwhile len(album_sales) != 1:\n    album_sales.append(album_sales.pop(0))\nf = album_sales[0]",
        "6",
        {},
        {
            "(94, 105)": "list"
        }
    ],
    [
        "nums = [43, 0, 4, 77, 5, 2, 0, 9, 77]\nm = max(nums)\nfor i in range(m):\n    nums.reverse()\nf = nums",
        "[77, 9, 0, 2, 5, 77, 4, 0, 43]",
        {},
        {
            "(94, 98)": "list",
            "(42, 45)": "builtin_function_or_method",
            "(46, 50)": "list",
            "(61, 66)": "type",
            "(67, 68)": "int",
            "(75, 79)": "list"
        }
    ],
    [
        "numbers = range(100, 120)\nfloats = [n % 1 for n in numbers]\nf = floats if 1 in floats else []",
        "[]",
        {},
        {
            "(10, 15)": "type",
            "(64, 70)": "list",
            "(51, 58)": "range",
            "(79, 85)": "list"
        }
    ],
    [
        "text = '   '\ntext = list(text)\nfor i in range(len(text)-1, -1, -1):\n    if text[i].isspace():\n        text[i] = '&nbsp;'\nf = ''.join(text)",
        "'&nbsp;&nbsp;&nbsp;'",
        {},
        {
            "(20, 24)": "type",
            "(25, 29)": "list",
            "(40, 45)": "type",
            "(133, 137)": "list",
            "(46, 49)": "builtin_function_or_method",
            "(50, 54)": "list",
            "(102, 106)": "list",
            "(107, 108)": "int",
            "(75, 79)": "list",
            "(80, 81)": "int"
        }
    ],
    [
        "dict0 = {2: 5, 4: 1, 3: 5, 1: 3, 5: 1}\nnew = dict0.copy()\nfor i in range(len(new)-1):\n    dict0[sorted(new)[i]] = i\nf = dict0",
        "{2: 1, 4: 3, 3: 2, 1: 0, 5: 1}",
        {},
        {
            "(120, 125)": "dict",
            "(67, 72)": "type",
            "(114, 115)": "int",
            "(45, 50)": "dict",
            "(90, 95)": "dict",
            "(73, 76)": "builtin_function_or_method",
            "(77, 80)": "dict",
            "(108, 109)": "int",
            "(96, 102)": "builtin_function_or_method",
            "(103, 106)": "dict"
        }
    ],
    [
        "c, st, ed = {'TEXT': 7, 'CODE': 3}, 7, 3\nd = {}\na, b = 0, 0\nfor x, y in c.items():\n    d[y] = x\n    if y == st:\n        a = x\n    if y == ed:\n        b = x\nw = d[st]\nf = (w, b) if a > b else (b, w)",
        "('TEXT', 'CODE')",
        {},
        {
            "(94, 95)": "str",
            "(160, 161)": "dict",
            "(162, 164)": "int",
            "(72, 73)": "dict",
            "(87, 88)": "dict",
            "(89, 90)": "int",
            "(103, 104)": "int",
            "(108, 110)": "int",
            "(124, 125)": "str",
            "(133, 134)": "int",
            "(138, 140)": "int",
            "(154, 155)": "str",
            "(180, 181)": "str",
            "(184, 185)": "str",
            "(171, 172)": "str",
            "(174, 175)": "str",
            "(192, 193)": "str",
            "(195, 196)": "str"
        }
    ],
    [
        "label1, char, label2, index = 'ekwies', 's', 'rpg', 1\nm = label1.rindex(char)\nif m >= index:\n    f = label2[:m - index + 1]\nf = label1 + label2[index - m - 1:]",
        "'rpg'",
        {
            "(81, 91)": "True\n"
        },
        {
            "(72, 76)": "str",
            "(81, 82)": "int",
            "(86, 91)": "int",
            "(128, 134)": "str",
            "(58, 64)": "str",
            "(101, 107)": "str",
            "(137, 143)": "str",
            "(109, 110)": "int",
            "(113, 118)": "int",
            "(144, 149)": "int",
            "(152, 153)": "int"
        }
    ],
    [
        "text, value = \"!?\", \"\"\nf = text.ljust(len(value), \"?\")",
        "'!?'",
        {},
        {
            "(27, 31)": "str",
            "(38, 41)": "builtin_function_or_method",
            "(42, 47)": "str"
        }
    ],
    [
        "s = 'papeluchis'\nb = ''\nc = ''\nfor i in s:\n    c = c + i\n    if s.rfind(c) > -1:\n        f = s.rfind(c)\nf = 0",
        "2",
        {},
        {
            "(40, 41)": "str",
            "(51, 52)": "str",
            "(55, 56)": "str",
            "(72, 73)": "str",
            "(101, 102)": "str",
            "(64, 65)": "str",
            "(93, 94)": "str"
        }
    ],
    [
        "array = [1, 2, 3]\nprev = array[0]\nnewArray = array[:]\nfor i in range(1, len(array)):\n    if prev != array[i]:\n        newArray[i] = array[i]\n    else:\n        del newArray[i]\n    prev = array[i]\nf = newArray",
        "[1, 2, 3]",
        {},
        {
            "(199, 207)": "list",
            "(25, 30)": "list",
            "(45, 50)": "list",
            "(63, 68)": "type",
            "(72, 75)": "builtin_function_or_method",
            "(76, 81)": "list",
            "(92, 96)": "int",
            "(186, 191)": "list",
            "(192, 193)": "int",
            "(100, 105)": "list",
            "(106, 107)": "int",
            "(118, 126)": "list",
            "(127, 128)": "int",
            "(132, 137)": "list",
            "(138, 139)": "int"
        }
    ],
    [
        "s, ch = \"@@@ff\", '@'\nsl = s\nif ch in s:\n    sl = s.lstrip(ch)\n    if len(sl) == 0:\n        sl = sl + '!?'\nelse:\n    f = 'no'\nf = sl",
        "'ff'",
        {
            "(31, 38)": "True\n"
        },
        {
            "(26, 27)": "str",
            "(129, 131)": "str",
            "(31, 33)": "str",
            "(37, 38)": "str",
            "(58, 60)": "str",
            "(49, 50)": "str"
        }
    ],
    [
        "text, x = \"Ibaskdjgblw asdl \", \"djgblw\"\nif text.removeprefix(x) == text:\n    f = f(text[1:], x)\nelse:\n    f = text",
        "'djgblw asdl '",
        {
            "(43, 71)": "True\n"
        },
        {
            "(67, 71)": "str",
            "(61, 62)": "str",
            "(43, 47)": "str"
        }
    ],
    [
        "n, array = 1, [1, 2, 3]\nfinal = [array.copy()] \nfor i in range(n):\n    arr = array.copy()\n    arr.extend(final[-1])\n    final.append(arr)\nf = final",
        "[[1, 2, 3], [1, 2, 3, 1, 2, 3]]",
        {},
        {
            "(142, 147)": "list",
            "(57, 62)": "type",
            "(63, 64)": "int",
            "(133, 136)": "list",
            "(33, 38)": "list",
            "(77, 82)": "list",
            "(94, 97)": "list",
            "(105, 110)": "list",
            "(120, 125)": "list"
        }
    ],
    [
        "query, base = 'a', {}\nnet_sum = 0\nfor (key, val) in base.items():\n    if key[0] == query and len(key) == 3:\n        net_sum -= val\n    elif key[-1] == query and len(key) == 3:\n        net_sum += val\nf = net_sum",
        "0",
        {},
        {
            "(203, 210)": "int"
        }
    ],
    [
        "sequence, value = 'hosu', 'o'\ni = max(sequence.index(value) - len(sequence) // 3, 0)\nresult = ''\nfor j, v in enumerate(sequence[i:]):\n    if v == '+':\n        result += value\n    else:\n        result += sequence[i + j]\nf = result",
        "'hosu'",
        {},
        {
            "(223, 229)": "str",
            "(34, 37)": "builtin_function_or_method",
            "(109, 118)": "type",
            "(119, 127)": "str",
            "(53, 58)": "str",
            "(128, 129)": "int",
            "(203, 211)": "str",
            "(38, 46)": "str",
            "(62, 65)": "builtin_function_or_method",
            "(66, 74)": "str",
            "(212, 213)": "int",
            "(216, 217)": "int"
        }
    ],
    [
        "n = 1341240312\nfor n in str(n):\n    if n not in \"012\" and n not in list(range(5, 10)):\n        f = False\nf = True",
        "False",
        {},
        {
            "(24, 27)": "type",
            "(28, 29)": "str",
            "(39, 40)": "str",
            "(58, 59)": "str",
            "(67, 71)": "type",
            "(72, 77)": "type"
        }
    ],
    [
        "cat = 'C24Bxxx982ab'\ndigits = 0\nfor char in cat:\n    if char.isdigit():\n        digits += 1\nf = digits",
        "5",
        {},
        {
            "(44, 47)": "str",
            "(96, 102)": "int",
            "(56, 60)": "str"
        }
    ],
    [
        "text, value = 'abv', 'a'\nnew_text = list(text)\ntry:\n    new_text.append(value)\n    length = len(new_text)\nexcept IndexError:\n    length = 0\nf = '[' + str(length) + ']'",
        "'[4]'",
        {},
        {
            "(36, 40)": "type",
            "(41, 45)": "str",
            "(150, 153)": "type",
            "(154, 160)": "int"
        }
    ],
    [
        "text, width = '0574', 9\nf = text[:width].center(width, 'z')",
        "'zzz0574zz'",
        {},
        {
            "(48, 53)": "int",
            "(28, 32)": "str",
            "(34, 39)": "int"
        }
    ],
    [
        "array = []\nc = array\narray_copy = array\n\nwhile True:\n    c.append('_')\n    if c == array_copy:\n        array_copy[c.index('_')] = ''\n        break\n    \nf = array_copy",
        "['']",
        {},
        {
            "(15, 20)": "list",
            "(34, 39)": "list",
            "(156, 166)": "list",
            "(78, 79)": "list",
            "(83, 93)": "list",
            "(57, 58)": "list",
            "(103, 113)": "list",
            "(114, 115)": "list"
        }
    ],
    [
        "a = [5, 5, 5, 6, 4, 9]\nb = a.copy()\nfor k in range(0, len(a) - 1, 2):\n    b.insert(k + 1, b[k])\nb.append(b[0])\nf = b",
        "[5, 5, 5, 5, 5, 5, 6, 4, 9, 5]",
        {},
        {
            "(115, 116)": "list",
            "(45, 50)": "type",
            "(27, 28)": "list",
            "(96, 97)": "list",
            "(105, 106)": "list",
            "(54, 57)": "builtin_function_or_method",
            "(58, 59)": "list",
            "(74, 75)": "list",
            "(83, 84)": "int",
            "(90, 91)": "list",
            "(92, 93)": "int"
        }
    ],
    [
        "text = ' \\t  \\u3000'\nf = ''.join(list(text)).isspace()",
        "True",
        {},
        {
            "(33, 37)": "type",
            "(38, 42)": "str"
        }
    ],
    [
        "item = '.,,,,,. \u0645\u0646\u0628\u062a'\nmodified = item.replace('. ', ' , ').replace('&#33; ', '! ').replace('. ', '? ').replace('. ', '. ')\nf = modified[0].upper() + modified[1:]",
        "'.,,,,, , \u0645\u0646\u0628\u062a'",
        {},
        {
            "(149, 157)": "str",
            "(127, 135)": "str",
            "(33, 37)": "str"
        }
    ],
    [
        "text = \"\\t\\t\\ttab tab tabulates\"\na = text.split('\\n')\nb = []\nfor i in range(len(a)):\n    c = a[i].replace('\\t', '    ')\n    b.append(c)\nf = '\\n'.join(b)",
        "'            tab tab tabulates'",
        {},
        {
            "(70, 75)": "type",
            "(150, 151)": "list",
            "(37, 41)": "str",
            "(76, 79)": "builtin_function_or_method",
            "(80, 81)": "list",
            "(133, 134)": "str",
            "(124, 125)": "list",
            "(93, 94)": "list",
            "(95, 96)": "int"
        }
    ],
    [
        "array = [8, 8, -4, -9, 2, 8, -1, 8]\nresult = []\nindex = 0\nwhile index < len(array):\n    result.append(array.pop())\n    index += 2\nf = result",
        "[8, -1, 8]",
        {},
        {
            "(134, 140)": "list",
            "(64, 69)": "int",
            "(72, 75)": "builtin_function_or_method",
            "(76, 81)": "list",
            "(88, 94)": "list",
            "(102, 107)": "list"
        }
    ],
    [
        "text, speaker = '[CHARRUNNERS]Do you know who the other was? [NEGMENDS]', '[CHARRUNNERS]'\nwhile text.startswith(speaker):\n    text = text[len(speaker):]\nf = text",
        "'Do you know who the other was? [NEGMENDS]'",
        {},
        {
            "(157, 161)": "str",
            "(112, 119)": "str",
            "(96, 100)": "str",
            "(133, 137)": "str",
            "(138, 141)": "builtin_function_or_method",
            "(142, 149)": "str"
        }
    ],
    [
        "letters = \"h,e,l,l,o,wo,r,ld,\"\nletters_only = letters.strip(\"., !?*\")\nf = \"....\".join(letters_only.split(\" \"))",
        "'h,e,l,l,o,wo,r,ld'",
        {},
        {
            "(46, 53)": "str",
            "(86, 98)": "str"
        }
    ],
    [
        "text, suffix = 'spider', 'ed'\nif suffix and text and text.endswith(suffix):\n    f = text.removesuffix(suffix)\nelse:\n    f = text",
        "'spider'",
        {},
        {
            "(124, 128)": "str"
        }
    ],
    [
        "matrix = [[1, 1, 1, 1]]\nmatrix.reverse()\nresult = []\nfor primary in matrix:\n    max(primary)\n    primary.sort(reverse = True)\n    result.append(primary)\nf = result",
        "[[1, 1, 1, 1]]",
        {},
        {
            "(68, 74)": "list",
            "(157, 163)": "list",
            "(24, 30)": "list",
            "(80, 83)": "builtin_function_or_method",
            "(84, 91)": "list",
            "(144, 151)": "list",
            "(97, 104)": "list",
            "(130, 136)": "list"
        }
    ],
    [
        "nums = [1, 2, 4]\nfor i in range(len(nums)):\n    nums.insert(i, nums[i]**2)\nf = nums",
        "[1, 1, 1, 1, 2, 4]",
        {},
        {
            "(79, 83)": "list",
            "(26, 31)": "type",
            "(32, 35)": "builtin_function_or_method",
            "(36, 40)": "list",
            "(60, 61)": "int",
            "(48, 52)": "list",
            "(63, 67)": "list",
            "(68, 69)": "int"
        }
    ],
    [
        "data = {'inf': ['a', 'b'], 'a': [\"inf\", \"c\"], 'd': [\"inf\"]}\nmembers = []\nfor item in data:\n    for member in data[item]:\n        if member not in members:\n            members.append(member)\nf = sorted(members)",
        "['a', 'b', 'c', 'inf']",
        {},
        {
            "(85, 89)": "dict",
            "(194, 200)": "builtin_function_or_method",
            "(201, 208)": "list",
            "(109, 113)": "dict",
            "(114, 118)": "str",
            "(132, 138)": "str",
            "(146, 153)": "list",
            "(182, 188)": "str",
            "(167, 174)": "list"
        }
    ],
    [
        "d = {2: 0.76, 5: [3, 6, 9, 12]}\nresult = {}\nfor k, v in d.items():\n    if isinstance(k, float):\n        for i in v:\n            result[i] = k\n    else:\n        result[k] = v\nf = result",
        "{2: 0.76, 5: [3, 6, 9, 12]}",
        {},
        {
            "(178, 184)": "dict",
            "(56, 57)": "dict",
            "(172, 173)": "float",
            "(160, 166)": "dict",
            "(167, 168)": "int"
        }
    ],
    [
        "text, count = '439m2670hlsw', 3\nfor i in range(count):\n    text = text[::-1]\nf = text",
        "'wslh0762m934'",
        {},
        {
            "(81, 85)": "str",
            "(41, 46)": "type",
            "(47, 52)": "int",
            "(66, 70)": "str"
        }
    ],
    [
        "arr = [2, 0, 1, 9999, 3, -5]\nf = list(reversed(arr))",
        "[-5, 3, 9999, 1, 0, 2]",
        {},
        {
            "(33, 37)": "type",
            "(38, 46)": "type",
            "(47, 50)": "list"
        }
    ],
    [
        "text, tabstop = \"odes\\tcode\\twell\", 2\ntext = text.replace('\\n', '_____')\ntext = text.replace('\\t', tabstop * ' ')\ntext = text.replace('_____', '\\n')\nf = text",
        "'odes  code  well'",
        {},
        {
            "(153, 157)": "str",
            "(45, 49)": "str",
            "(80, 84)": "str",
            "(99, 106)": "int",
            "(121, 125)": "str"
        }
    ],
    [
        "text = '\\n\\n\\t\\tz\\td\\ng\\n\\t\\t\\te'\nfor i in range(len(text)):\n    if text[i] == ' ':\n        text = text.replace(' ', '\\t', 1)\nf = text.expandtabs(4)",
        "'\\n\\n        z   d\\ng\\n            e'",
        {},
        {
            "(43, 48)": "type",
            "(49, 52)": "builtin_function_or_method",
            "(53, 57)": "str",
            "(130, 134)": "str"
        }
    ],
    [
        "str = 'xxxarmmarxx'\nd = str.rpartition('ar')\nf = ' '.join((d[0], d[1], d[2]))",
        "'xxxarmm ar xx'",
        {},
        {
            "(24, 27)": "str",
            "(59, 60)": "tuple",
            "(65, 66)": "tuple",
            "(71, 72)": "tuple"
        }
    ],
    [
        "nums, mos = [3, 1, 2, 1, 4, 1], [1]\nfor num in mos:\n    nums.pop(nums.index(num))\nnums.sort()\nfor num in mos:\n    nums += [num]\nfor i in range(len(nums)-1):\n    if nums[i] > nums[i+1]:\n        f = False\nf = True",
        "False",
        {},
        {
            "(47, 50)": "list",
            "(105, 108)": "list",
            "(137, 142)": "type",
            "(82, 86)": "list",
            "(123, 126)": "int",
            "(56, 60)": "list",
            "(76, 79)": "int",
            "(143, 146)": "builtin_function_or_method",
            "(147, 151)": "list",
            "(164, 168)": "list",
            "(169, 170)": "int",
            "(174, 178)": "list",
            "(65, 69)": "list",
            "(179, 180)": "int"
        }
    ],
    [
        "n = \"first-second-third\"\nn = str(n)\nf = n[0] + '.'+n[1:].replace('-', '_')",
        "'f.irst_second_third'",
        {},
        {
            "(29, 32)": "type",
            "(33, 34)": "str",
            "(40, 41)": "str",
            "(51, 52)": "str"
        }
    ],
    [
        "text = \"591237865\"\nx = 0\nif text.islower():\n    for c in text:\n        if int(c) in list(range(90)):\n            x+=1\nf = x",
        "0",
        {},
        {
            "(122, 123)": "int"
        }
    ],
    [
        "text, digit = '7Ljnw4Lj', '7'\n#different than previous? Just count instances digit\ncount = text.count(digit)\nf = int(digit) * count",
        "7",
        {},
        {
            "(102, 107)": "str",
            "(126, 131)": "int",
            "(91, 95)": "str",
            "(113, 116)": "type",
            "(117, 122)": "str"
        }
    ],
    [
        "text = 'VTBAEPJSLGAHINS'\nf = text.upper() == str(text)",
        "True",
        {},
        {
            "(45, 48)": "type",
            "(49, 53)": "str",
            "(29, 33)": "str"
        }
    ],
    [
        "text1, text2 = 'jivespdcxc', 'sx'\nnums = []\nfor i in range(len(text2)):\n    nums.append(text1.count(text2[i]))\nf = sum(nums)",
        "2",
        {},
        {
            "(53, 58)": "type",
            "(115, 118)": "builtin_function_or_method",
            "(119, 123)": "list",
            "(59, 62)": "builtin_function_or_method",
            "(63, 68)": "str",
            "(76, 80)": "list",
            "(88, 93)": "str",
            "(100, 105)": "str",
            "(106, 107)": "int"
        }
    ],
    [
        "lists = [[395, 666, 7, 4], [], [4223, 111]]\nlists[1].clear()\nlists[2] += lists[1]\nf = lists[0]",
        "[395, 666, 7, 4]",
        {},
        {
            "(61, 66)": "list",
            "(73, 78)": "list",
            "(86, 91)": "list",
            "(44, 49)": "list"
        }
    ],
    [
        "text = \"qsqgijwmmhbchoj\"\nf = max(text.find(ch) for ch in 'aeiou')",
        "13",
        {},
        {
            "(29, 32)": "builtin_function_or_method",
            "(33, 37)": "str"
        }
    ],
    [
        "s, n = 'one two three four five', 3\nls = s.rsplit()\nout = []\nwhile len(ls) >= n:\n    out += ls[-n:]\n    ls = ls[:-n]\nf = ls + ['_'.join(out)]",
        "['one', 'two', 'three_four_five']",
        {},
        {
            "(78, 79)": "int",
            "(121, 123)": "list",
            "(41, 42)": "str",
            "(67, 70)": "builtin_function_or_method",
            "(71, 73)": "list",
            "(92, 94)": "list",
            "(109, 111)": "list",
            "(136, 139)": "list",
            "(96, 97)": "int",
            "(114, 115)": "int"
        }
    ],
    [
        "num = 'bwmm7h'\nletter = 1\nfor i in '1234567890':\n    num = num.replace(i,'')\n    if len(num) == 0: break\n    num = num[letter:] + num[:letter]\n    letter += 1\nf = num",
        "'mhbwm'",
        {},
        {
            "(163, 166)": "str",
            "(71, 72)": "str",
            "(59, 62)": "str",
            "(84, 87)": "builtin_function_or_method",
            "(88, 91)": "str",
            "(115, 118)": "str",
            "(130, 133)": "str",
            "(119, 125)": "int",
            "(135, 141)": "int"
        }
    ],
    [
        "txt = \"11 1 1\"\ncoincidences = {}\nfor c in txt:\n    if c in coincidences:\n        coincidences[c] += 1\n    else:\n        coincidences[c] = 1\nf = sum(coincidences.values())",
        "6",
        {},
        {
            "(42, 45)": "str",
            "(144, 147)": "builtin_function_or_method",
            "(120, 132)": "dict",
            "(133, 134)": "str",
            "(148, 160)": "dict"
        }
    ],
    [
        "array, index, value = [2], 0, 2\narray.insert(0, index + 1)\nif value >= 1:\n    array.insert(index, value)\nf = array",
        "[2, 1, 2]",
        {
            "(62, 72)": "True\n"
        },
        {
            "(109, 114)": "list",
            "(62, 67)": "int",
            "(32, 37)": "list",
            "(48, 53)": "int",
            "(91, 96)": "int",
            "(98, 103)": "int",
            "(78, 83)": "list"
        }
    ],
    [
        "input_string, spaces = r'a\\tb', 4\nf = input_string.expandtabs(spaces)",
        "'a\\\\tb'",
        {},
        {
            "(62, 68)": "int",
            "(38, 50)": "str"
        }
    ],
    [
        "data, num = {1: 9, 2: 10, 3: 1}, 1\nnew_dict = {}\ntemp = list(data.items())\nfor i in range(len(temp) - 1, num - 1, -1):\n    new_dict[temp[i]] = None\nf = temp[num:] + list(new_dict.items())",
        "[(2, 10), (3, 1), ((3, 1), None), ((2, 10), None)]",
        {},
        {
            "(56, 60)": "type",
            "(84, 89)": "type",
            "(105, 108)": "int",
            "(123, 131)": "dict",
            "(152, 156)": "list",
            "(165, 169)": "type",
            "(61, 65)": "dict",
            "(90, 93)": "builtin_function_or_method",
            "(94, 98)": "list",
            "(132, 136)": "list",
            "(137, 138)": "int",
            "(157, 160)": "int",
            "(170, 178)": "dict"
        }
    ],
    [
        "string, prefix = \"Vipra\", \"via\"\nif string.startswith(prefix):\n    f = string.removeprefix(prefix)\nf = string",
        "'Vipra'",
        {},
        {
            "(102, 108)": "str"
        }
    ],
    [
        "simpons = ['George', 'Michael', 'George', 'Costanza']\nwhile simpons:\n    pop = simpons.pop()\n    if pop == pop.title():\n        f = pop\nf = pop",
        "'Costanza'",
        {},
        {
            "(60, 67)": "list",
            "(140, 143)": "str",
            "(100, 103)": "str",
            "(132, 135)": "str",
            "(79, 86)": "list",
            "(107, 110)": "str"
        }
    ],
    [
        "nums, val = [10, 4], 3\nnew_list = []\n[new_list.extend([i] * val) for i in nums]\nf = sum(new_list)",
        "42",
        {},
        {
            "(84, 87)": "builtin_function_or_method",
            "(88, 96)": "list",
            "(74, 78)": "list",
            "(38, 46)": "list",
            "(60, 63)": "int"
        }
    ],
    [
        "array, const = [1, 2, 3], -1\noutput = ['x']\nfor i in range(1, len(array) + 1):\n    if i % 2 != 0:\n        output.append(array[i - 1] * -2)\n    else:\n        output.append(const)\nf = output",
        "['x', -2, -1, -6]",
        {},
        {
            "(182, 188)": "list",
            "(53, 58)": "type",
            "(62, 65)": "builtin_function_or_method",
            "(66, 71)": "list",
            "(86, 87)": "int",
            "(171, 176)": "int",
            "(106, 112)": "list",
            "(157, 163)": "list",
            "(120, 125)": "list",
            "(126, 127)": "int"
        }
    ],
    [
        "items = [(1, 'pos')]\nresult = []\nfor number in items:\n    d = dict(items).copy()\n    d.popitem()\n    result.append(d)\n    items = d\nf = result",
        "[{}]",
        {},
        {
            "(47, 52)": "list",
            "(136, 142)": "list",
            "(130, 131)": "dict",
            "(115, 116)": "dict",
            "(85, 86)": "dict",
            "(101, 107)": "list",
            "(62, 66)": "type",
            "(67, 72)": "list"
        }
    ],
    [
        "obj = {'R': 0, 'T': 3, 'F': -6, 'K': 0}\nfor k, v in obj.items():\n    if v >= 0:\n        obj[k] = -v\nf = obj",
        "{'R': 0, 'T': -3, 'F': -6, 'K': 0}",
        {},
        {
            "(104, 107)": "dict",
            "(52, 55)": "dict",
            "(72, 73)": "int",
            "(88, 91)": "dict",
            "(92, 93)": "str",
            "(98, 99)": "int"
        }
    ],
    [
        "text = ''\nif text.istitle():\n    if len(text) > 1 and text.lower() != text:\n        f = text[0].lower() + text[1:]\nelif text.isalpha():\n    f = text.capitalize()\nf = text",
        "''",
        {},
        {
            "(166, 170)": "str"
        }
    ],
    [
        "text, char = 'rvr', 'r'\nnew_text = text\na = []\nwhile char in new_text:\n    a.append(new_text.index(char))\n    new_text = new_text.replace(char,\"\",1)\nf = a",
        "[0, 1]",
        {},
        {
            "(35, 39)": "str",
            "(153, 154)": "list",
            "(53, 57)": "str",
            "(61, 69)": "str",
            "(138, 142)": "str",
            "(75, 76)": "list",
            "(99, 103)": "str",
            "(121, 129)": "str",
            "(84, 92)": "str"
        }
    ],
    [
        "text, sign = 'akoon', 'sXo'\nlength = len(text)\nnew_text = list(text)\nsign = list(sign)\nfor i in range(len(sign)):\n    new_text.insert((i * length - 1) // 2 + (i + 1) // 2, sign[i])\nf = ''.join(new_text)",
        "'akoXoosn'",
        {},
        {
            "(37, 40)": "builtin_function_or_method",
            "(41, 45)": "str",
            "(58, 62)": "type",
            "(63, 67)": "str",
            "(76, 80)": "type",
            "(81, 85)": "list",
            "(96, 101)": "type",
            "(193, 201)": "list",
            "(102, 105)": "builtin_function_or_method",
            "(106, 110)": "list",
            "(118, 126)": "list",
            "(172, 176)": "list",
            "(177, 178)": "int",
            "(159, 160)": "int",
            "(135, 136)": "int",
            "(139, 145)": "int"
        }
    ],
    [
        "k, j = 7, 5\narr = []\nfor i in range(k):\n    arr.append(j)\nf = arr",
        "[5, 5, 5, 5, 5, 5, 5]",
        {},
        {
            "(62, 65)": "list",
            "(30, 35)": "type",
            "(36, 37)": "int",
            "(55, 56)": "int",
            "(44, 47)": "list"
        }
    ],
    [
        "text, ch = \"t\\nza\\na\", \"t\"\nresult = []\nfor line in text.splitlines():\n    if len(line) > 0 and line[0] == ch:\n        result.append(line.lower())\n    else:\n        result.append(line.upper())\nf = \"\\n\".join(result)",
        "'t\\nZA\\nA'",
        {},
        {
            "(206, 212)": "list",
            "(51, 55)": "str",
            "(106, 108)": "str",
            "(77, 80)": "builtin_function_or_method",
            "(81, 85)": "str",
            "(95, 99)": "str",
            "(118, 124)": "list",
            "(164, 170)": "list",
            "(132, 136)": "str",
            "(178, 182)": "str"
        }
    ],
    [
        "txt = \"5123807309875480094949830\"\nf = txt.format(*('0'*20,))",
        "'5123807309875480094949830'",
        {},
        {
            "(38, 41)": "str"
        }
    ],
    [
        "text = ';,,,?'\ncount = text.count(text[0])\nls = list(text)\nfor _ in range(count):\n    ls.remove(ls[0])\nf = ''.join(ls)",
        "',,,?'",
        {},
        {
            "(48, 52)": "type",
            "(53, 57)": "str",
            "(68, 73)": "type",
            "(74, 79)": "int",
            "(115, 117)": "list",
            "(23, 27)": "str",
            "(34, 38)": "str",
            "(86, 88)": "list",
            "(96, 98)": "list"
        }
    ],
    [
        "text, char = \"breakfast\", \"e\"\nf = text.rindex(char)",
        "2",
        {},
        {
            "(46, 50)": "str",
            "(34, 38)": "str"
        }
    ],
    [
        "nums, fill = [0, 1, 1, 2], 'abcca'\nans = dict.fromkeys(nums, fill)\nf = ans",
        "{0: 'abcca', 1: 'abcca', 2: 'abcca'}",
        {},
        {
            "(71, 74)": "dict",
            "(55, 59)": "list",
            "(61, 65)": "str",
            "(41, 45)": "type"
        }
    ],
    [
        "items, target = ['''1''', '+', '-', '**', '//', '*', '+'], '**'\nif target in items:\n    f = items.index(target)\nf = -1",
        "3",
        {
            "(67, 82)": "True\n"
        },
        {
            "(67, 73)": "str",
            "(77, 82)": "list",
            "(104, 110)": "str",
            "(92, 97)": "list"
        }
    ],
    [
        "num = [-70, 20, 9, 1]\nnum.append(num[-1])\nf = num",
        "[-70, 20, 9, 1, 1]",
        {},
        {
            "(46, 49)": "list",
            "(22, 25)": "list",
            "(33, 36)": "list"
        }
    ],
    [
        "text = \"25000   $\"\nfor i in range(10, 0, -1):\n    text = text.lstrip(str(i))\nf = text",
        "'5000   $'",
        {},
        {
            "(81, 85)": "str",
            "(28, 33)": "type",
            "(57, 61)": "str",
            "(69, 72)": "type",
            "(73, 74)": "int"
        }
    ],
    [
        "arr = [6, 3, 0, 7, 4, 8]\ncounts = [0] * 9 \nans = [] \nfor ele in arr: counts[ele - 1] += 1 \nfor i in range(len(counts)): \n    while counts[i] > 0: \n        counts[i] -= 1 \n        ans.append(i + 1)\nf = counts, ans",
        "([0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 4, 6, 7, 8, 9])",
        {},
        {
            "(64, 67)": "list",
            "(100, 105)": "type",
            "(201, 207)": "list",
            "(209, 212)": "list",
            "(69, 75)": "list",
            "(106, 109)": "builtin_function_or_method",
            "(110, 116)": "list",
            "(76, 79)": "int",
            "(131, 137)": "list",
            "(138, 139)": "int",
            "(155, 161)": "list",
            "(162, 163)": "int",
            "(179, 182)": "list",
            "(190, 191)": "int"
        }
    ],
    [
        "numbers = [11, 3]\nnew_numbers = []\nfor i, _ in enumerate(numbers):\n    new_numbers.append(numbers[len(numbers)-1-i])\nf = new_numbers",
        "[3, 11]",
        {},
        {
            "(121, 132)": "list",
            "(47, 56)": "type",
            "(57, 64)": "list",
            "(71, 82)": "list",
            "(90, 97)": "list",
            "(113, 114)": "int",
            "(98, 101)": "builtin_function_or_method",
            "(102, 109)": "list"
        }
    ],
    [
        "nums, n = [], 14\npos = len(nums) - 1\nfor i in range(-len(nums), 0):\n    nums.insert(pos, nums[i])\nf = nums",
        "[]",
        {},
        {
            "(102, 106)": "list",
            "(23, 26)": "builtin_function_or_method",
            "(27, 31)": "list"
        }
    ],
    [
        "file = \"n wez szize lnson tilebi it 504n.\\n\"\nf = file.index('\\n')",
        "33",
        {},
        {
            "(49, 53)": "str"
        }
    ],
    [
        "text, prefix = 'qdhstudentamxupuihbuztn', 'jdm'\nif text.startswith(prefix):\n    text = text.removeprefix(prefix)\ntext = text.capitalize()\nf = text",
        "'Qdhstudentamxupuihbuztn'",
        {},
        {
            "(142, 146)": "str",
            "(120, 124)": "str"
        }
    ],
    [
        "txt, alpha = ['8', '9', '7', '4', '3', '2'], '9'\ntxt = sorted(txt)\nif txt.index(alpha) % 2 == 0:\n    f = txt[::-1]\nf = txt",
        "['2', '3', '4', '7', '8', '9']",
        {},
        {
            "(119, 122)": "list",
            "(55, 61)": "builtin_function_or_method",
            "(62, 65)": "list"
        }
    ],
    [
        "s = \"Jaafodsfa SOdofj AoaFjIs  JAFasIdfSa1\"\nf = s.upper()",
        "'JAAFODSFA SODOFJ AOAFJIS  JAFASIDFSA1'",
        {},
        {
            "(48, 49)": "str"
        }
    ],
    [
        "text, n = 'abc', 1\nlength = len(text)\nf = text[length*(n%4):length ]",
        "''",
        {},
        {
            "(28, 31)": "builtin_function_or_method",
            "(32, 36)": "str",
            "(42, 46)": "str",
            "(60, 66)": "int",
            "(47, 53)": "int",
            "(55, 56)": "int"
        }
    ],
    [
        "a, b = [\"a\", \"b\", \"c\"], \" \"\na = b.join(a)\nlst = []\nfor i in range(1, len(a)+1, 2):\n    lst.append(a[i-1:][:i])\n    lst.append(a[i-1:][i:])\nf = lst",
        "['a', ' b c', 'b c', '', 'c', '']",
        {},
        {
            "(143, 146)": "list",
            "(39, 40)": "str",
            "(60, 65)": "type",
            "(32, 33)": "str",
            "(69, 72)": "builtin_function_or_method",
            "(73, 74)": "str",
            "(87, 90)": "list",
            "(115, 118)": "list",
            "(98, 99)": "str",
            "(107, 108)": "int",
            "(126, 127)": "str",
            "(134, 135)": "int",
            "(100, 101)": "int",
            "(128, 129)": "int"
        }
    ],
    [
        "array = []\njust_ns = list(map(lambda num: 'n'*num, array))\nfinal_output = []\nfor wipe in just_ns:\n    final_output.append(wipe)\nf = final_output",
        "[]",
        {},
        {
            "(132, 144)": "list",
            "(21, 25)": "type",
            "(26, 29)": "type",
            "(51, 56)": "list"
        }
    ],
    [
        "text = 'csharp'\nt = 5\ntab = []\nfor i in text:\n    if i.lower() in 'aeiouy':\n        tab.append(i.upper() * t)\n    else:\n        tab.append(i * t)\nf = ' '.join(tab)",
        "'ccccc sssss hhhhh AAAAA rrrrr ppppp'",
        {},
        {
            "(40, 44)": "str",
            "(159, 162)": "list",
            "(53, 54)": "str",
            "(84, 87)": "list",
            "(107, 108)": "int",
            "(128, 131)": "list",
            "(139, 140)": "str",
            "(143, 144)": "int",
            "(95, 96)": "str"
        }
    ],
    [
        "nums, target = [1, 1], 1\ncnt = nums.count(target)\nf = cnt * 2",
        "4",
        {},
        {
            "(42, 48)": "int",
            "(54, 57)": "int",
            "(31, 35)": "list"
        }
    ],
    [
        "text, start = \"Hello world\", \"Hello\"\nf = text.startswith(start)",
        "True",
        {},
        {
            "(57, 62)": "str",
            "(41, 45)": "str"
        }
    ],
    [
        "nums = [2, 5, 1, 7, 9, 3]\nnums.clear()\nf = \"quack\"",
        "'quack'",
        {},
        {
            "(26, 30)": "list"
        }
    ],
    [
        "value = 'ruam'\nls = list(value)\nls.append('NHIB')\nf = ''.join(ls)",
        "'ruamNHIB'",
        {},
        {
            "(20, 24)": "type",
            "(25, 30)": "str",
            "(62, 64)": "list",
            "(32, 34)": "list"
        }
    ],
    [
        "text = '. C.'\nfor i in ['.', '!', '?']:\n    if text.endswith(i):\n        f = True\nf = False",
        "True",
        {},
        {
            "(61, 62)": "str",
            "(47, 51)": "str"
        }
    ],
    [
        "aDict = {1:1, 2:2, 3:3}\n# transpose the keys and values into a new dict\nf = dict([v for v in aDict.items()])",
        "{1: 1, 2: 2, 3: 3}",
        {},
        {
            "(76, 80)": "type",
            "(93, 98)": "dict"
        }
    ],
    [
        "array, elem = {}, 1\nresult = array.copy()\nwhile result:\n    key, value = result.popitem()\n    if elem == key or elem == value:\n        result.update(array)\n    del result[key]\nf = result",
        "{}",
        {},
        {
            "(180, 186)": "dict",
            "(29, 34)": "dict"
        }
    ],
    [
        "keys, value = [1, 2, 1, 1], 3\nd = dict.fromkeys(keys, value)\nfor i, k in enumerate(d.copy(), 1):\n    if d[k] == d[i]:\n        del d[i]\nf = d",
        "{}",
        {},
        {
            "(139, 140)": "dict",
            "(48, 52)": "list",
            "(54, 59)": "int",
            "(73, 82)": "type",
            "(34, 38)": "type",
            "(83, 84)": "dict",
            "(104, 105)": "dict",
            "(106, 107)": "int",
            "(112, 113)": "dict",
            "(114, 115)": "int",
            "(130, 131)": "dict",
            "(132, 133)": "int"
        }
    ],
    [
        "nums = [-6, -2, 1, -3, 0, 1]\nnums[:] = nums[::-1]\nf = nums",
        "[1, 0, -3, 1, -2, -6]",
        {},
        {
            "(54, 58)": "list",
            "(29, 33)": "list",
            "(39, 43)": "list"
        }
    ],
    [
        "d = {'a': 42, 'b': 1337, 'c': -1, 'd': 5}\nf = dict(d.items())",
        "{'a': 42, 'b': 1337, 'c': -1, 'd': 5}",
        {},
        {
            "(46, 50)": "type",
            "(51, 52)": "dict"
        }
    ],
    [
        "text = 'eat!'\nresult = ''\nmid = (len(text) - 1) // 2\nfor i in range(mid):\n    result += text[i]\nfor i in range(mid, len(text)-1):\n    result += text[mid + len(text) - 1 - i]\nf = result.ljust(len(text), text[-1])",
        "'e!t!'",
        {},
        {
            "(62, 67)": "type",
            "(68, 71)": "int",
            "(105, 110)": "type",
            "(111, 114)": "int",
            "(88, 92)": "str",
            "(93, 94)": "int",
            "(144, 148)": "str",
            "(178, 184)": "str",
            "(191, 194)": "builtin_function_or_method",
            "(195, 199)": "str",
            "(202, 206)": "str",
            "(33, 36)": "builtin_function_or_method",
            "(37, 41)": "str",
            "(116, 119)": "builtin_function_or_method",
            "(120, 124)": "str",
            "(171, 172)": "int",
            "(149, 152)": "int",
            "(155, 158)": "builtin_function_or_method",
            "(159, 163)": "str"
        }
    ],
    [
        "text, substr, occ = 'zjegiymjc', 'j', 2\nn = 0\nwhile True:\n    i = text.rfind(substr)\n    if i == -1:\n        break\n    elif n == occ:\n        f = i\n    else:\n        n += 1\n        text = text[:i]\nf = -1",
        "-1",
        {},
        {
            "(77, 83)": "str",
            "(66, 70)": "str",
            "(188, 192)": "str",
            "(194, 195)": "int"
        }
    ],
    [
        "in_list, num = [-1, 12, -6, -2], -1\nin_list.append(num)\nf = in_list.index(max(in_list[:-1]))",
        "1",
        {},
        {
            "(51, 54)": "int",
            "(36, 43)": "list",
            "(60, 67)": "list",
            "(74, 77)": "builtin_function_or_method",
            "(78, 85)": "list"
        }
    ],
    [
        "body = '\\n\\ny\\n'\nls = list(body)\ndist = 0\nfor i in range(0, len(ls) - 1):\n    if ls[i - 2 if i - 2 >= 0 else 0] == '\\t':\n        dist += (1 + ls[i - 1].count('\\t')) * 3\n    ls[i] = '[' + ls[i] + ']'\nf = ''.join(ls).expandtabs(4 + dist)",
        "'[\\n][\\n][y]\\n'",
        {},
        {
            "(22, 26)": "type",
            "(27, 31)": "str",
            "(51, 56)": "type",
            "(173, 175)": "list",
            "(176, 177)": "int",
            "(230, 234)": "int",
            "(60, 63)": "builtin_function_or_method",
            "(64, 66)": "list",
            "(211, 213)": "list",
            "(187, 189)": "list",
            "(190, 191)": "int"
        }
    ],
    [
        "text = \"<<<<\"\nif text.isascii():\n    f = 'ascii'\nelse:\n    f = 'non ascii'",
        "'ascii'",
        {
            "(17, 31)": "True\n"
        },
        {
            "(17, 21)": "str"
        }
    ],
    [
        "match, fill, n = '9', '8', 2\nf = fill[:n] + match",
        "'89'",
        {},
        {
            "(44, 49)": "str",
            "(33, 37)": "str",
            "(39, 40)": "int"
        }
    ],
    [
        "title = '   Rock   Paper   SCISSORS  '\nf = title.lower()",
        "'   rock   paper   scissors  '",
        {},
        {
            "(43, 48)": "str"
        }
    ],
    [
        "x = \"lert dna ndqmxohi3\"\nf = \" \".join(list(x)[::-1])",
        "'3 i h o x m q d n   a n d   t r e l'",
        {},
        {
            "(38, 42)": "type",
            "(43, 44)": "str"
        }
    ],
    [
        "s = 'galgu'\nleft, sep, right = s.rpartition('.')\nnew = sep.join([right, left])\n_, sep, _ = new.rpartition('.')\nf = new.replace(sep, ', ')",
        "', g, a, l, g, u, '",
        {},
        {
            "(127, 130)": "str",
            "(31, 32)": "str",
            "(55, 58)": "str",
            "(65, 70)": "str",
            "(72, 76)": "str",
            "(91, 94)": "str",
            "(115, 118)": "str"
        }
    ],
    [
        "text, rules = 'hi~!', ['~', '`', '!', '&']\nfor rule in rules:\n    if rule == '@':\n        text = text[::-1]\n    elif rule == '~':\n        text = text.upper()\n    elif text and text[len(text)-1] == rule:\n        text = text[0:len(text)-1]\nf = text",
        "'HI~'",
        {},
        {
            "(55, 60)": "list",
            "(242, 246)": "str",
            "(117, 121)": "str",
            "(167, 171)": "str",
            "(145, 149)": "str",
            "(197, 201)": "str",
            "(218, 222)": "str",
            "(176, 180)": "str",
            "(181, 184)": "builtin_function_or_method",
            "(185, 189)": "str",
            "(225, 228)": "builtin_function_or_method",
            "(229, 233)": "str"
        }
    ],
    [
        "text, char = 'llomnrpc', 'x'\nchar_index = text.find(char)\nresult = []\nif char_index > 0:\n    result = list(text[:char_index])\nresult.extend(list(char)+list(text[char_index+len(char):]))\nf = ''.join(result)",
        "'xllomnrpc'",
        {},
        {
            "(52, 56)": "str",
            "(198, 204)": "list",
            "(42, 46)": "str",
            "(126, 132)": "list",
            "(140, 144)": "type",
            "(145, 149)": "str",
            "(151, 155)": "type",
            "(156, 160)": "str",
            "(161, 171)": "int",
            "(172, 175)": "builtin_function_or_method",
            "(176, 180)": "str"
        }
    ],
    [
        "text = \"bwiajegrwjd??djoda,?\"\ncount = 0\nfor i in text:\n    if i in '.?!.,':\n        count += 1\nf = count",
        "4",
        {},
        {
            "(49, 53)": "str",
            "(99, 104)": "int",
            "(62, 63)": "str"
        }
    ],
    [
        "line, equalityMap = 'abab', [('a', 'b'), ('b', 'a')]\nrs = {\n    k[0]: k[1] for k in equalityMap\n}\nf = line.translate(str.maketrans(rs))",
        "'baba'",
        {},
        {
            "(102, 106)": "str",
            "(131, 133)": "dict",
            "(117, 120)": "type"
        }
    ],
    [
        "parts = [('u', 1), ('s', 7), ('u', -5)]\nf = list(dict(parts).values())",
        "[-5, 7]",
        {},
        {
            "(44, 48)": "type",
            "(49, 53)": "type",
            "(54, 59)": "list"
        }
    ],
    [
        "nums, delete = [4, 5, 3, 6, 1], 5\nnums.remove(delete)\nf = nums",
        "[4, 3, 6, 1]",
        {},
        {
            "(58, 62)": "list",
            "(46, 52)": "int",
            "(34, 38)": "list"
        }
    ],
    [
        "text, dng = 'catNG', 'NG'\nif dng not in text:\n    f = text\nif text[-len(dng):] == dng:\n    f = text[:-len(dng)]\nf = text[:-1] + f(text[:-2], dng)",
        "'cat'",
        {
            "(62, 85)": "True\n"
        },
        {
            "(82, 85)": "str",
            "(62, 66)": "str",
            "(95, 99)": "str",
            "(68, 71)": "builtin_function_or_method",
            "(72, 75)": "str",
            "(102, 105)": "builtin_function_or_method",
            "(106, 109)": "str"
        }
    ],
    [
        "original, string = {1: -9, 0: -7}, {1: 2, 0: 3}\ntemp = dict(original)\nfor a, b in string.items():\n    temp[b] = a\nf = temp",
        "{1: -9, 0: -7, 2: 1, 3: 0}",
        {},
        {
            "(118, 122)": "dict",
            "(55, 59)": "type",
            "(60, 68)": "dict",
            "(112, 113)": "int",
            "(82, 88)": "dict",
            "(102, 106)": "dict",
            "(107, 108)": "int"
        }
    ],
    [
        "text, num = 'a', 19\nreq = num - len(text)\ntext = text.center(num, '*')\nf = text[:req // 2: -req // 2]",
        "'*'",
        {},
        {
            "(26, 29)": "int",
            "(61, 64)": "int",
            "(75, 79)": "str",
            "(32, 35)": "builtin_function_or_method",
            "(36, 40)": "str",
            "(49, 53)": "str",
            "(81, 84)": "int",
            "(92, 95)": "int"
        }
    ],
    [
        "list = [63, 0, 1, 5, 9, 87, 0, 7, 25, 4]\nfor i in range(len(list) - 1, 0, -1):\n    for j in range(i):\n        if list[j] > list[j + 1]:\n            list[j], list[j + 1] = list[j + 1], list[j]\n            list.sort()\nf = list",
        "[0, 0, 1, 4, 5, 7, 9, 25, 63, 87]",
        {},
        {
            "(220, 224)": "list",
            "(50, 55)": "type",
            "(92, 97)": "type",
            "(98, 99)": "int",
            "(56, 59)": "builtin_function_or_method",
            "(60, 64)": "list",
            "(113, 117)": "list",
            "(118, 119)": "int",
            "(123, 127)": "list",
            "(128, 129)": "int",
            "(148, 152)": "list",
            "(153, 154)": "int",
            "(157, 161)": "list",
            "(171, 175)": "list",
            "(184, 188)": "list",
            "(189, 190)": "int",
            "(204, 208)": "list",
            "(162, 163)": "int",
            "(176, 177)": "int"
        }
    ],
    [
        "array, elem = [5, -3, 3, 2], 2\narray.reverse()\ntry:\n    found = array.index(elem)\nfinally:\n    array.reverse()\nf = found",
        "0",
        {},
        {
            "(115, 120)": "int",
            "(31, 36)": "list",
            "(95, 100)": "list"
        }
    ],
    [
        "input_string = 'biec'\ntable = str.maketrans('aioe', 'ioua')\nwhile 'a' in input_string or 'A' in input_string:\n    input_string = input_string.translate(table)\nf = input_string",
        "'biec'",
        {},
        {
            "(163, 175)": "str",
            "(30, 33)": "type"
        }
    ],
    [
        "text = \"9.twCpTf.H7 HPeaQ^ C7I6U,C:YtW\"\nvalid_chars = ['-', '_', '+', '.', '/', ' ']\ntext = text.upper()\nfor char in text:\n    if char.isalnum() == False and char not in valid_chars:\n        f = False\nf = True",
        "False",
        {},
        {
            "(117, 121)": "str",
            "(92, 96)": "str",
            "(158, 162)": "str",
            "(170, 181)": "list",
            "(130, 134)": "str"
        }
    ],
    [
        "d = { 3: 'A3', 1: 'A1', 2: 'A2' }\nr = {}\nwhile len(d) > 0:\n    r = {**r, **d}\n    del d[max(d.keys())]\nf = r",
        "{3: 'A3', 1: 'A1', 2: 'A2'}",
        {},
        {
            "(107, 108)": "dict",
            "(47, 50)": "builtin_function_or_method",
            "(51, 52)": "dict",
            "(70, 71)": "dict",
            "(75, 76)": "dict",
            "(86, 87)": "dict",
            "(88, 91)": "builtin_function_or_method",
            "(92, 93)": "dict"
        }
    ],
    [
        "text = '03625163633 d'\ntext = text.split(' ')\nfor t in text:\n    if not t.isnumeric():\n        f = 'no'\nf = 'yes'",
        "'no'",
        {},
        {
            "(55, 59)": "list",
            "(30, 34)": "list",
            "(72, 73)": "str"
        }
    ],
    [
        "s, suffix = 'ababa', 'ab'\nif not suffix:\n    f = s\nwhile s.endswith(suffix):\n    s = s[:-len(suffix)]\nf = s",
        "'ababa'",
        {},
        {
            "(106, 107)": "str"
        }
    ],
    [
        "perc, full = \"xabxfiwoexahxaxbxs\", \"xbabcabccb\"\nreply = \"\"\ni = 0\nwhile perc[i] == full[i] and i < len(full) and i < len(perc):\n    if perc[i] == full[i]:\n        reply += \"yes \"\n    else:\n        reply += \"no \"\n    i += 1\nf = reply",
        "'yes '",
        {},
        {
            "(226, 231)": "str",
            "(94, 95)": "int",
            "(112, 113)": "int",
            "(71, 75)": "str",
            "(76, 77)": "int",
            "(82, 86)": "str",
            "(87, 88)": "int",
            "(98, 101)": "builtin_function_or_method",
            "(102, 106)": "str",
            "(116, 119)": "builtin_function_or_method",
            "(120, 124)": "str",
            "(134, 138)": "str",
            "(139, 140)": "int",
            "(145, 149)": "str",
            "(150, 151)": "int"
        }
    ],
    [
        "text = \"3eeeeeeoopppppppw14film3oee3\"\na = 0\nif text[0] in text[1:]:\n    a += 1\nfor i in range(0, len(text)-1):\n    if text[i] in text[i+1:]:\n        a += 1\nf = a",
        "18",
        {
            "(47, 66)": "True\n"
        },
        {
            "(160, 161)": "int",
            "(88, 93)": "type",
            "(47, 51)": "str",
            "(58, 62)": "str",
            "(97, 100)": "builtin_function_or_method",
            "(101, 105)": "str",
            "(118, 122)": "str",
            "(123, 124)": "int",
            "(129, 133)": "str",
            "(134, 135)": "int"
        }
    ],
    [
        "number = 'dummy33;d'\nf = True if number.isdecimal() else False",
        "False",
        {},
        {
            "(33, 39)": "str"
        }
    ],
    [
        "text = \"     \"\ni = 0\nwhile i < len(text) and text[i].isspace():\n    i+=1\nif i == len(text):\n    f = 'space'\nf = 'no'",
        "'space'",
        {
            "(76, 90)": "True\n"
        },
        {
            "(76, 77)": "int",
            "(27, 28)": "int",
            "(81, 84)": "builtin_function_or_method",
            "(85, 89)": "str",
            "(31, 34)": "builtin_function_or_method",
            "(35, 39)": "str",
            "(45, 49)": "str",
            "(50, 51)": "int"
        }
    ],
    [
        "text, suffix = 'damdrodm', 'm'\nif text.endswith(suffix):\n    text = text[:-1] + text[-1:].swapcase()\nf = text",
        "'damdrodM'",
        {
            "(34, 55)": "True\n"
        },
        {
            "(105, 109)": "str",
            "(48, 54)": "str",
            "(34, 38)": "str",
            "(68, 72)": "str",
            "(80, 84)": "str"
        }
    ],
    [
        "nums, pos = [6, 1], 3\ns = slice(None)\nif pos % 2:\n    s = slice(None, -1)\nnums[s].reverse()\nf = nums",
        "[6, 1]",
        {
            "(41, 48)": "True\n"
        },
        {
            "(96, 100)": "list",
            "(26, 31)": "type",
            "(41, 44)": "int",
            "(58, 63)": "type",
            "(74, 78)": "list",
            "(79, 80)": "slice"
        }
    ],
    [
        "nums, target = [1, 1, 1, 2], 3\nif nums.count(0):\n    f = 0\nelif nums.count(target) < 3:\n    f = 1\nelse:\n    f = nums.index(target)",
        "1",
        {
            "(64, 86)": "True\n"
        },
        {
            "(75, 81)": "int",
            "(64, 68)": "list"
        }
    ],
    [
        "text, count = 'aBc, ,SzY', 2\nfor i in range(count):\n    text = ''.join(reversed(text))\nf = text",
        "'aBc, ,SzY'",
        {},
        {
            "(91, 95)": "str",
            "(38, 43)": "type",
            "(44, 49)": "int",
            "(71, 79)": "type",
            "(80, 84)": "str"
        }
    ],
    [
        "text, chunks = '/alcm@ an)t//eprw)/e!/d\\nujv', 0\nf = text.splitlines(chunks)",
        "['/alcm@ an)t//eprw)/e!/d', 'ujv']",
        {},
        {
            "(69, 75)": "int",
            "(53, 57)": "str"
        }
    ],
    [
        "list1, list2 = [0, 4, 5, 6], [13, 23, -5, 0]\nl = list1[:]\nwhile len(l) > 0:\n    if l[-1] in list2:\n        l.pop()\n    else:\n        f = l[-1]\nf = 'missing'",
        "6",
        {},
        {
            "(49, 54)": "list",
            "(64, 67)": "builtin_function_or_method",
            "(68, 69)": "list",
            "(137, 138)": "list"
        }
    ],
    [
        "string, substring = '', 'A'\nwhile string.startswith(substring):\n    string = string[len(substring):len(string)]\nf = string",
        "''",
        {},
        {
            "(116, 122)": "str"
        }
    ],
    [
        "text, letter = 'E wrestled evil until upperfeat', 'e'\nif letter.islower(): letter = letter.upper()\ntext = ''.join([letter if char == letter.lower() else char for char in text])\nf = text.capitalize()",
        "'E wrestled evil until upperfeat'",
        {
            "(57, 73)": "False\n"
        },
        {
            "(57, 63)": "str",
            "(181, 185)": "str",
            "(84, 90)": "str",
            "(115, 121)": "str",
            "(170, 174)": "str",
            "(133, 139)": "str"
        }
    ],
    [
        "string = '3'\nif not string or not string[0].isnumeric:\n    f = 'INVALID'\ncur = 0\nfor i in range(len(string)):\n    cur = cur * 10 + int(string[i])\nf = str(cur)",
        "'3'",
        {},
        {
            "(90, 95)": "type",
            "(150, 153)": "type",
            "(154, 157)": "int",
            "(96, 99)": "builtin_function_or_method",
            "(100, 106)": "str",
            "(120, 123)": "int",
            "(131, 134)": "type",
            "(135, 141)": "str",
            "(142, 143)": "int"
        }
    ],
    [
        "text, letter = \"c, c, c ,c, c\", \"c\"\nt = text\nfor alph in text:\n    t = t.replace(alph, \"\")\nf = len(t.split(letter))",
        "1",
        {},
        {
            "(40, 44)": "str",
            "(57, 61)": "str",
            "(95, 98)": "builtin_function_or_method",
            "(81, 85)": "str",
            "(107, 113)": "str",
            "(71, 72)": "str",
            "(99, 100)": "str"
        }
    ],
    [
        "s, from_c, to_c = 'aphid', 'i', '?'\ntable = s.maketrans(from_c, to_c)\nf = s.translate(table)",
        "'aph?d'",
        {},
        {
            "(56, 62)": "str",
            "(64, 68)": "str",
            "(86, 91)": "dict",
            "(44, 45)": "str",
            "(74, 75)": "str"
        }
    ],
    [
        "s = 'rpaar'\nf = s.replace('a', '').replace('r', '')",
        "'p'",
        {},
        {
            "(16, 17)": "str"
        }
    ],
    [
        "letters = ['b', 'i', 'r', 'o', 's', 'j', 'v', 'p']\na = [] \nfor i in range(len(letters)):\n    if letters[i] in a:\n        f = 'no'\n    a.append(letters[i]) \nf = 'yes'",
        "'yes'",
        {},
        {
            "(68, 73)": "type",
            "(74, 77)": "builtin_function_or_method",
            "(78, 85)": "list",
            "(134, 135)": "list",
            "(143, 150)": "list",
            "(151, 152)": "int"
        }
    ],
    [
        "text = \"djhasghasgdha\"\nfor punct in '!.?,:;':\n    if text.count(punct) > 1:\n        f = 'no'\n    if text.endswith(punct):\n        f = 'no'\nf = text.title()",
        "'Djhasghasgdha'",
        {},
        {
            "(143, 147)": "str"
        }
    ],
    [
        "d, get_ary = {3: \"swims like a bull\"}, [3, 2, 'c', True, 5]\nresult = []\nfor key in get_ary:\n    result.append(d.get(key))\nf = result",
        "['swims like a bull', None, None, None, None]",
        {},
        {
            "(83, 90)": "list",
            "(126, 132)": "list",
            "(96, 102)": "list",
            "(116, 119)": "int",
            "(110, 111)": "dict"
        }
    ],
    [
        "bots = ['yR?TAJhIW?n', 'o11BgEFDfoe', 'KnHdn2vdEd', 'wvwruuqfhXbGis']\nclean = []\nfor username in bots:\n    if not username.isupper():\n        clean.append(username[:2] + username[-3:])\nf = len(clean)",
        "4",
        {},
        {
            "(97, 101)": "list",
            "(189, 192)": "builtin_function_or_method",
            "(193, 198)": "list",
            "(114, 122)": "str",
            "(142, 147)": "list",
            "(155, 163)": "str",
            "(170, 178)": "str"
        }
    ],
    [
        "num = 3\ninitial = [1]\ntotal = initial\nfor _ in range(num):\n    total = [1] + [x+y for x, y in zip(total, total[1:])]\n    initial.append(total[-1])\nf = sum(initial)",
        "4",
        {},
        {
            "(30, 37)": "list",
            "(47, 52)": "type",
            "(53, 56)": "int",
            "(151, 154)": "builtin_function_or_method",
            "(155, 162)": "list",
            "(121, 128)": "list",
            "(136, 141)": "list",
            "(94, 97)": "type",
            "(98, 103)": "list",
            "(105, 110)": "list"
        }
    ],
    [
        "letters, maxsplit = 'elrts,SS ee', 6\nf = ''.join(letters.split()[-maxsplit:])",
        "'elrts,SSee'",
        {},
        {
            "(49, 56)": "str",
            "(66, 74)": "int"
        }
    ],
    [
        "values = ['Dan', 'Joe', 'Dusty']\nnames = ['Pete', 'Linda', 'Angela']\nnames.extend(values)\nnames.sort()\nf = names",
        "['Angela', 'Dan', 'Dusty', 'Joe', 'Linda', 'Pete']",
        {},
        {
            "(107, 112)": "list",
            "(82, 88)": "list",
            "(69, 74)": "list",
            "(90, 95)": "list"
        }
    ],
    [
        "container, cron = [], 2\nif not cron in container:\n    f = container\npref = container[:container.index(cron)].copy()\nsuff = container[container.index(cron) + 1:].copy()\nf = pref + suff",
        "[]",
        {
            "(27, 48)": "True\n"
        },
        {
            "(58, 67)": "list",
            "(31, 35)": "int",
            "(39, 48)": "list"
        }
    ],
    [
        "tags = {\"3\":\"3\",\"4\":\"5\"}\nresp = \"\"\nfor key in tags:\n    resp += key + \" \"\nf = resp",
        "'3 4 '",
        {},
        {
            "(46, 50)": "dict",
            "(78, 82)": "str",
            "(64, 67)": "str"
        }
    ],
    [
        "chars = \"acbced\"\ns = \"\"\nfor ch in chars:\n    if chars.count(ch) % 2 == 0:\n        s += ch.upper()\n    else:\n        s += ch\nf = s",
        "'aCbCed'",
        {},
        {
            "(34, 39)": "str",
            "(128, 129)": "str",
            "(121, 123)": "str",
            "(60, 62)": "str",
            "(87, 89)": "str",
            "(48, 53)": "str"
        }
    ],
    [
        "d1, d2 = { 0: [], 1: [] }, { 0: [0, 0, 0, 0], 2: [2, 2, 2] }\nmmax = 0\nfor k1 in d1:\n    if p := len(d1[k1])+len(d2.get(k1, [])):\n        if p > mmax:\n            mmax = p\nf = mmax",
        "4",
        {},
        {
            "(80, 82)": "dict",
            "(175, 179)": "int",
            "(140, 141)": "int",
            "(144, 148)": "int",
            "(169, 170)": "int",
            "(96, 99)": "builtin_function_or_method",
            "(108, 111)": "builtin_function_or_method",
            "(100, 102)": "dict",
            "(103, 105)": "int",
            "(119, 121)": "int",
            "(112, 114)": "dict"
        }
    ],
    [
        "text = 'C7'\nnew_text = []\nfor i in range(len(text) // 3):\n    new_text.append(f\"< {text[i * 3: i * 3 + 3]} level={i} >\")\nlast_item = text[len(text) // 3 * 3:]\nnew_text.append(f\"< {last_item} level={len(text) // 3} >\")\nf = new_text",
        "['< C7 level=0 >']",
        {},
        {
            "(222, 230)": "list",
            "(133, 137)": "str",
            "(159, 167)": "list",
            "(180, 189)": "str",
            "(138, 141)": "builtin_function_or_method",
            "(142, 146)": "str",
            "(198, 201)": "builtin_function_or_method",
            "(202, 206)": "str"
        }
    ],
    [
        "text = 'hellomyfriendear'\nf = text[-1] + text[:-1]",
        "'rhellomyfriendea'",
        {},
        {
            "(30, 34)": "str",
            "(41, 45)": "str"
        }
    ],
    [
        "t = \"fubarbaz\"\na, sep, b = t.rpartition('-')\nif len(b) == len(a):\n    f = 'imbalanced'\nf = a + b.replace(sep, '')",
        "'fubarbaz'",
        {},
        {
            "(91, 92)": "str",
            "(27, 28)": "str",
            "(105, 108)": "str",
            "(95, 96)": "str"
        }
    ],
    [
        "a, b = ['12','ab'], [2,2]\nd = dict(zip(a, b))\na.sort(key=d.get, reverse=True)\nf = [d.pop(x) for x in a]",
        "[2, 2]",
        {},
        {
            "(30, 34)": "type",
            "(35, 38)": "type",
            "(39, 40)": "list",
            "(42, 43)": "list",
            "(46, 47)": "list",
            "(101, 102)": "list",
            "(57, 58)": "dict",
            "(83, 84)": "dict"
        }
    ],
    [
        "text, char1, char2 = \"ewriyat emf rwto segya\", \"tey\", \"dgo\"\nt1a = []\nt2a = []\nfor i in range(len(char1)):\n    t1a.append(char1[i])\n    t2a.append(char2[i])\nt1 = text.maketrans(dict(zip(t1a, t2a)))\nf = text.translate(t1)",
        "'gwrioad gmf rwdo sggoa'",
        {},
        {
            "(87, 92)": "type",
            "(216, 218)": "dict",
            "(93, 96)": "builtin_function_or_method",
            "(97, 102)": "str",
            "(161, 165)": "str",
            "(176, 180)": "type",
            "(201, 205)": "str",
            "(110, 113)": "list",
            "(121, 126)": "str",
            "(127, 128)": "int",
            "(135, 138)": "list",
            "(146, 151)": "str",
            "(152, 153)": "int",
            "(181, 184)": "type",
            "(185, 188)": "list",
            "(190, 193)": "list"
        }
    ],
    [
        "text, position, value = \"1zd\", 0, 'm'\nlength = len(text)\nindex = (position % (length + 2)) - 1\nif index >= length or index < 0:\n    f = text\ntext[index] = value\nf = ''.join(text)",
        "'1zd'",
        {
            "(98, 126)": "True\n"
        },
        {
            "(47, 50)": "builtin_function_or_method",
            "(51, 55)": "str",
            "(136, 140)": "str",
            "(66, 74)": "int",
            "(98, 103)": "int",
            "(107, 113)": "int",
            "(117, 122)": "int",
            "(78, 84)": "int"
        }
    ],
    [
        "string = \"cA\"\nif string.isupper():\n    f = string.lower()\nelif string.islower():\n    f = string.upper()\nf = string",
        "'cA'",
        {},
        {
            "(108, 114)": "str"
        }
    ],
    [
        "text = 'qq'\nls = list(text)\nfor x in range(len(ls)-1, -1, -1):\n    if len(ls) <= 1: break\n    if ls[x] not in 'zyxwvutsrqponmlkjihgfedcba': ls.pop(ls[x])\nf = ''.join(ls)",
        "'qq'",
        {},
        {
            "(17, 21)": "type",
            "(22, 26)": "str",
            "(37, 42)": "type",
            "(166, 168)": "list",
            "(43, 46)": "builtin_function_or_method",
            "(47, 49)": "list",
            "(70, 73)": "builtin_function_or_method",
            "(74, 76)": "list",
            "(97, 99)": "list",
            "(100, 101)": "int",
            "(140, 142)": "list",
            "(147, 149)": "list",
            "(150, 151)": "int"
        }
    ],
    [
        "nums, sort_count = [1, 2, 2, 3, 4, 5], 1\nnums.sort()\nf = nums[:sort_count]",
        "[1]",
        {},
        {
            "(57, 61)": "list",
            "(41, 45)": "list",
            "(63, 73)": "int"
        }
    ],
    [
        "text, tab_size = 'a', 100\nf = text.replace('\\t', ' '*tab_size)",
        "'a'",
        {},
        {
            "(30, 34)": "str",
            "(53, 61)": "int"
        }
    ],
    [
        "text, length = 'I got 1 and 0.', 5\nlength = -length if length < 0 else length\noutput = ''\nfor idx in range(length):\n    if text[idx % len(text)] != ' ':\n        output += text[idx % len(text)]\n    else:\n        break\nf = output",
        "'I'",
        {},
        {
            "(221, 227)": "str",
            "(71, 77)": "int",
            "(101, 106)": "type",
            "(107, 113)": "int",
            "(55, 61)": "int",
            "(45, 51)": "int",
            "(123, 127)": "str",
            "(171, 175)": "str",
            "(128, 131)": "int",
            "(176, 179)": "int",
            "(134, 137)": "builtin_function_or_method",
            "(138, 142)": "str",
            "(182, 185)": "builtin_function_or_method",
            "(186, 190)": "str"
        }
    ],
    [
        "text = \"HI\"\nfreq = dict()\nfor c in text.lower():\n    if c in freq:\n        freq[c] += 1\n    else:\n        freq[c] = 1\nf = freq",
        "{'h': 1, 'i': 1}",
        {},
        {
            "(122, 126)": "dict",
            "(19, 23)": "type",
            "(35, 39)": "str",
            "(106, 110)": "dict",
            "(111, 112)": "str"
        }
    ],
    [
        "text = 'meet'\nif text == '':\n    f = False\nfirst_char = text[0]\nif text[0].isdigit():\n    f = False\nfor last_char in text:\n    if (last_char != '_') and not last_char.isidentifier():\n        f = False\nf = True",
        "True",
        {},
        {
            "(117, 121)": "str",
            "(56, 60)": "str"
        }
    ],
    [
        "text = \"we@32r71g72ug94=(823658*!@324\"\nletters = ''\nfor i in range(len(text)):\n    if text[i].isalnum():\n        letters += text[i]\nf = letters",
        "'we32r71g72ug94823658324'",
        {},
        {
            "(136, 143)": "str",
            "(61, 66)": "type",
            "(67, 70)": "builtin_function_or_method",
            "(71, 75)": "str",
            "(124, 128)": "str",
            "(129, 130)": "int",
            "(86, 90)": "str",
            "(91, 92)": "int"
        }
    ],
    [
        "array, ind, elem = [1, 5, 8, 2, 0, 3], 2, 7\narray.insert(-5 if ind < 0 else len(array) if ind > len(array) else ind + 1, elem)\nf = array",
        "[1, 5, 8, 7, 2, 0, 3]",
        {},
        {
            "(131, 136)": "list",
            "(121, 125)": "int",
            "(44, 49)": "list",
            "(63, 66)": "int",
            "(90, 93)": "int",
            "(76, 79)": "builtin_function_or_method",
            "(80, 85)": "list",
            "(112, 115)": "int",
            "(96, 99)": "builtin_function_or_method",
            "(100, 105)": "list"
        }
    ],
    [
        "text, length, index = 'hypernimovichyp', 2, 2\nls = text.rsplit(None, index)\nf = '_'.join([l[:length] for l in ls])",
        "'hy'",
        {},
        {
            "(69, 74)": "int",
            "(51, 55)": "str",
            "(110, 112)": "list",
            "(93, 99)": "int"
        }
    ],
    [
        "dict1, dict2 = {'disface': 9, 'cam': 7}, {'mforce': 5}\nresult = dict1.copy()\nresult.update([(__, dict2[__]) for __ in dict2])\nf = result",
        "{'disface': 9, 'cam': 7, 'mforce': 5}",
        {},
        {
            "(130, 136)": "dict",
            "(64, 69)": "dict",
            "(77, 83)": "dict",
            "(118, 123)": "dict",
            "(97, 102)": "dict"
        }
    ],
    [
        "text = \"Transform quotations\\\"\\nnot into numbers.\"\ntrans = str.maketrans('\"\\'><', '9833')\nf = text.translate(trans)",
        "'Transform quotations9\\nnot into numbers.'",
        {},
        {
            "(109, 114)": "dict",
            "(59, 62)": "type",
            "(94, 98)": "str"
        }
    ],
    [
        "array, elem = [1, 1, 1], -2\nf = array.count(elem) + elem",
        "-2",
        {},
        {
            "(52, 56)": "int",
            "(44, 48)": "int",
            "(32, 37)": "list"
        }
    ],
    [
        "d, l = {\"lorem ipsum\" : 12, \"dolor\" : 23}, [\"lorem ipsum\", \"dolor\"]\nnew_d = {}\n\nfor k in l:\n\tif d.get(k) is not None:\n\t\tnew_d[k] = d[k]\n\nf = new_d.copy()",
        "{'lorem ipsum': 12, 'dolor': 23}",
        {},
        {
            "(89, 90)": "list",
            "(141, 146)": "dict",
            "(102, 103)": "str",
            "(120, 125)": "dict",
            "(126, 127)": "str",
            "(131, 132)": "dict",
            "(133, 134)": "str",
            "(96, 97)": "dict"
        }
    ],
    [
        "text = 'Rjug nzufE'\nt = list(text)\nt.pop(len(t) // 2)\nt.append(text.lower())\nf = ':'.join([c for c in t])",
        "'R:j:u:g: :z:u:f:E:rjug nzufe'",
        {},
        {
            "(24, 28)": "type",
            "(29, 33)": "str",
            "(35, 36)": "list",
            "(54, 55)": "list",
            "(41, 44)": "builtin_function_or_method",
            "(45, 46)": "list",
            "(63, 67)": "str",
            "(102, 103)": "list"
        }
    ],
    [
        "nums = [3, 1, 9, 0, 2, 0, 8]\nl = []\nfor i in nums:\n    if i not in l:\n        l.append(i)\nf = l",
        "[3, 1, 9, 0, 2, 8]",
        {},
        {
            "(45, 49)": "list",
            "(94, 95)": "list",
            "(58, 59)": "int",
            "(67, 68)": "list",
            "(87, 88)": "int",
            "(78, 79)": "list"
        }
    ],
    [
        "arr = [-3, -6, 2, 7]\ncount = len(arr)\nsub = arr.copy()\nfor i in range(0, count, 2):\n    sub[i] *= 5\nf = sub",
        "[-15, -6, 10, 7]",
        {},
        {
            "(104, 107)": "list",
            "(29, 32)": "builtin_function_or_method",
            "(33, 36)": "list",
            "(64, 69)": "type",
            "(73, 78)": "int",
            "(44, 47)": "list",
            "(88, 91)": "list",
            "(92, 93)": "int"
        }
    ],
    [
        "n = '800'\nif str(n).find('.') != -1:\n    f = str(int(n)+2.5)\nf = str(n)",
        "'800'",
        {},
        {
            "(65, 68)": "type",
            "(69, 70)": "str"
        }
    ],
    [
        "text, suffix = 'rpyttc', 'cyt'\nif suffix and suffix[-1] in text:\n    f = f(text.rstrip(suffix[-1]), suffix[:-1])\nelse:\n    f = text",
        "'rpytt'",
        {
            "(34, 63)": "True\n"
        },
        {
            "(34, 40)": "str",
            "(59, 63)": "str",
            "(45, 51)": "str"
        }
    ],
    [
        "array = []\na = []\narray.reverse()\nfor i in range(len(array)):\n    if array[i] != 0:\n        a.append(array[i])\na.reverse()\nf = a",
        "[]",
        {},
        {
            "(127, 128)": "list",
            "(18, 23)": "list",
            "(111, 112)": "list"
        }
    ],
    [
        "text = \"sa832d83r xd 8g 26a81xdf\"\nn = int(text.find('8'))\nf = 'x0'*n",
        "'x0x0'",
        {},
        {
            "(38, 41)": "type",
            "(67, 68)": "int",
            "(42, 46)": "str"
        }
    ],
    [
        "d = dict(e=1, d=2, c=3)\ni = len(d) - 1\nkey = list(d.keys())[i]\nd.pop(key, None)\nf = key, d",
        "('c', {'e': 1, 'd': 2})",
        {},
        {
            "(4, 8)": "type",
            "(60, 61)": "int",
            "(69, 72)": "str",
            "(84, 87)": "str",
            "(89, 90)": "dict",
            "(28, 31)": "builtin_function_or_method",
            "(32, 33)": "dict",
            "(45, 49)": "type",
            "(63, 64)": "dict",
            "(50, 51)": "dict"
        }
    ],
    [
        "d = {}\nresult = {}\nfor ki, li in d.items():\n    result.update({ki: []})\n    for kj, dj in enumerate(li):\n        result[ki].append({})\n        for kk, l in dj.items():\n            result[ki][kj][kk] = l.copy()\nf = result",
        "{}",
        {},
        {
            "(214, 220)": "dict"
        }
    ],
    [
        "text = 'wdj'\ns = 0\nfor i in range(1, len(text)):\n    s += len(text.rpartition(text[i])[0])\nf = s",
        "3",
        {},
        {
            "(95, 96)": "int",
            "(28, 33)": "type",
            "(37, 40)": "builtin_function_or_method",
            "(41, 45)": "str",
            "(58, 61)": "builtin_function_or_method",
            "(62, 66)": "str",
            "(78, 82)": "str",
            "(83, 84)": "int"
        }
    ],
    [
        "s, sep = \"not it\", \"\"\nsep_index = s.find(sep)\nprefix = s[:sep_index]\nmiddle = s[sep_index:sep_index + len(sep)]\nright_str = s[sep_index + len(sep):]\nf = prefix, middle, right_str",
        "('', '', 'not it')",
        {},
        {
            "(41, 44)": "str",
            "(55, 56)": "str",
            "(78, 79)": "str",
            "(124, 125)": "str",
            "(153, 159)": "str",
            "(161, 167)": "str",
            "(169, 178)": "str",
            "(34, 35)": "str",
            "(58, 67)": "int",
            "(80, 89)": "int",
            "(90, 99)": "int",
            "(126, 135)": "int",
            "(102, 105)": "builtin_function_or_method",
            "(106, 109)": "str",
            "(138, 141)": "builtin_function_or_method",
            "(142, 145)": "str"
        }
    ],
    [
        "text = ('(((((((((((d))))))))).))))(((((')\nf = ''.join(x for x in text if x != ')')",
        "'(((((((((((d.((((('",
        {},
        {
            "(66, 70)": "str"
        }
    ],
    [
        "text, elem = \"some\", \"1\"\nif elem != '':\n    while text.startswith(elem):\n        text = text.replace(elem, '')\n    while elem.startswith(text):\n        elem = elem.replace(text, '')\nf = [elem, text]",
        "['1', 'some']",
        {
            "(28, 38)": "True\n"
        },
        {
            "(28, 32)": "str",
            "(187, 191)": "str",
            "(193, 197)": "str"
        }
    ],
    [
        "text = \"Where is the bot in this world?\"\nf = len(text) - text.count('bot')",
        "30",
        {},
        {
            "(45, 48)": "builtin_function_or_method",
            "(49, 53)": "str",
            "(57, 61)": "str"
        }
    ],
    [
        "stg, tabs = '31849 let it!31849 pass!', ('3','1','8',' ','1','9','2','d')\nfor tab in tabs:\n    stg = stg.rstrip(tab)\nf = stg",
        "'31849 let it!31849 pass!'",
        {},
        {
            "(85, 89)": "tuple",
            "(121, 124)": "str",
            "(112, 115)": "str",
            "(101, 104)": "str"
        }
    ],
    [
        "nums = [0, -5, -4]\ncount = len(nums)\nfor i in range(len(nums) - 1, -1, -1):\n    nums.insert(i, nums.pop(0))\nf = nums",
        "[-4, -5, 0]",
        {},
        {
            "(112, 116)": "list",
            "(27, 30)": "builtin_function_or_method",
            "(31, 35)": "list",
            "(46, 51)": "type",
            "(92, 93)": "int",
            "(52, 55)": "builtin_function_or_method",
            "(56, 60)": "list",
            "(80, 84)": "list",
            "(95, 99)": "list"
        }
    ],
    [
        "text, char = 'vzzv2sg', 'z'\ncount = text.count(char*2)\nf = text[count:]",
        "'zzv2sg'",
        {},
        {
            "(59, 63)": "str",
            "(36, 40)": "str",
            "(47, 51)": "str",
            "(64, 69)": "int"
        }
    ],
    [
        "s, n, c = '.', 0, '99'\nwidth = len(c)*n\nfor _ in range(width - len(s)):\n    s = c + s\nf = s",
        "'.'",
        {},
        {
            "(90, 91)": "str",
            "(38, 39)": "int",
            "(31, 34)": "builtin_function_or_method",
            "(35, 36)": "str"
        }
    ],
    [
        "cities, name = ['Sydney', 'Hong Kong', 'Melbourne', 'Sao Paolo', 'Istanbul', 'Boston'], 'Somewhere '\nif not name:\n    f = cities\nif name and name != 'cities':\n    f = []\nf = [name + city for city in cities]",
        "[]",
        {
            "(132, 157)": "True\n"
        },
        {
            "(132, 136)": "str",
            "(141, 145)": "str",
            "(175, 179)": "str",
            "(199, 205)": "list"
        }
    ],
    [
        "r, w = \"ab\", \"xy\"\na = []\nif r[0] == w[0] and w[-1] == r[-1]:\n    a.append(r)\n    a.append(w)\nelse:\n    a.append(w)\n    a.append(r)\nf = a",
        "['xy', 'ab']",
        {},
        {
            "(135, 136)": "list",
            "(112, 113)": "str",
            "(128, 129)": "str",
            "(103, 104)": "list",
            "(119, 120)": "list"
        }
    ],
    [
        "text, position = 'undbs l', 1\nlength = len(text)\nindex = position % (length + 1)\nif position < 0 or index < 0:\n    index = -1\nnew_text = list(text)\nnew_text.pop(index)\nf = ''.join(new_text)",
        "'udbs l'",
        {},
        {
            "(39, 42)": "builtin_function_or_method",
            "(43, 47)": "str",
            "(57, 65)": "int",
            "(137, 141)": "type",
            "(142, 146)": "str",
            "(161, 166)": "int",
            "(180, 188)": "list",
            "(69, 75)": "int",
            "(148, 156)": "list"
        }
    ],
    [
        "string = '    jcmfxv     '\nl = list(string)\nfor i in reversed(range(len(l))):\n    if l[i] != ' ':\n        break\n    l.pop(i)\nf = ''.join(l)",
        "'    jcmfxv'",
        {},
        {
            "(31, 35)": "type",
            "(36, 42)": "str",
            "(53, 61)": "type",
            "(137, 138)": "list",
            "(62, 67)": "type",
            "(122, 123)": "int",
            "(68, 71)": "builtin_function_or_method",
            "(72, 73)": "list",
            "(85, 86)": "list",
            "(87, 88)": "int",
            "(116, 117)": "list"
        }
    ],
    [
        "text = 'a loved'\nmy_list = text.split()\nmy_list.sort(reverse=True)\nf = ' '.join(my_list)",
        "'loved a'",
        {},
        {
            "(80, 87)": "list",
            "(27, 31)": "str",
            "(40, 47)": "list"
        }
    ],
    [
        "playlist, liker_name, song_index = {'aki': ['1', '5']}, 'aki', '2'\nplaylist[liker_name] = playlist.get(liker_name, [])\nplaylist[liker_name].append(song_index)\nf = playlist",
        "{'aki': ['1', '5', '2']}",
        {},
        {
            "(163, 171)": "dict",
            "(67, 75)": "dict",
            "(76, 86)": "str",
            "(103, 113)": "str",
            "(147, 157)": "str",
            "(90, 98)": "dict",
            "(119, 127)": "dict",
            "(128, 138)": "str"
        }
    ],
    [
        "text = 'apples\\n\\t\\npears\\n\\t\\nbananas'\nf = text.replace('\\n', '\\t')",
        "'apples\\t\\t\\tpears\\t\\t\\tbananas'",
        {},
        {
            "(44, 48)": "str"
        }
    ],
    [
        "text = 'A(hiccup)A'\ncreated = []\nfor line in text.splitlines():\n    if line == '':\n        break\n    created.append(list(list(line.rstrip())[::-1][flush]))\nf = created[::-1]\n\nh = 0",
        "[['A']]",
        {},
        {
            "(45, 49)": "str"
        }
    ],
    [
        "text, char = 'only one line', ' '\nif char in text:\n    text = [t.strip() for t in text.split(char) if t]\n    if len(text) > 1:\n        f = True\nf = False",
        "True",
        {
            "(37, 49)": "True\n",
            "(112, 125)": "True\n"
        },
        {
            "(37, 41)": "str",
            "(45, 49)": "str",
            "(112, 115)": "builtin_function_or_method",
            "(116, 120)": "list",
            "(93, 97)": "str",
            "(82, 86)": "list"
        }
    ],
    [
        "array = [3, -2, 0]\narray.reverse()\narray.clear()\narray.extend('x'*len(array))\narray.reverse()\nf = array",
        "[]",
        {},
        {
            "(98, 103)": "list",
            "(19, 24)": "list",
            "(35, 40)": "list",
            "(49, 54)": "list",
            "(78, 83)": "list",
            "(66, 69)": "builtin_function_or_method",
            "(70, 75)": "list"
        }
    ],
    [
        "text, char = 'abababac', 'a'\nf = text.count(char) % 2 != 0",
        "False",
        {},
        {
            "(44, 48)": "str",
            "(33, 37)": "str"
        }
    ],
    [
        "nums = [2, 1, 2, 3, 1, 6, 3, 8]\ncount = len(nums)\nwhile len(nums) > (count//2):\n    nums.clear()\nf = nums",
        "[]",
        {},
        {
            "(101, 105)": "list",
            "(40, 43)": "builtin_function_or_method",
            "(44, 48)": "list",
            "(56, 59)": "builtin_function_or_method",
            "(60, 64)": "list",
            "(69, 74)": "int",
            "(84, 88)": "list"
        }
    ],
    [
        "text = \"timetable, 2mil\"\n(k, l) = (0, len(text) - 1)\nwhile not text[l].isalpha():\n    l -= 1\nwhile not text[k].isalpha():\n    k += 1\nif k != 0 or l != len(text) - 1:\n    f = text[k: l+1]\nelse:\n    f = text[0]",
        "'t'",
        {},
        {
            "(201, 205)": "str",
            "(38, 41)": "builtin_function_or_method",
            "(42, 46)": "str"
        }
    ],
    [
        "text = 'ThisIsSoAtrocious'\nt = text\nfor i in text:\n    text = text.replace(i, '')\nf = str(len(text)) + t",
        "'0ThisIsSoAtrocious'",
        {},
        {
            "(31, 35)": "str",
            "(45, 49)": "str",
            "(103, 104)": "str",
            "(75, 76)": "str",
            "(86, 89)": "type",
            "(62, 66)": "str",
            "(90, 93)": "builtin_function_or_method",
            "(94, 98)": "str"
        }
    ],
    [
        "code = \"if (x) {y = 1;} else {z = 1;}\"\nlines = code.split(']')\nresult = []\nlevel = 0\nfor line in lines:\n    result.append(line[0] + ' ' + '  ' * level + line[1:])\n    level += line.count('{') - line.count('}')\nf = '\\n'.join(result)",
        "'i f (x) {y = 1;} else {z = 1;}'",
        {},
        {
            "(97, 102)": "list",
            "(224, 230)": "list",
            "(47, 51)": "str",
            "(108, 114)": "list",
            "(153, 157)": "str",
            "(176, 180)": "str",
            "(194, 198)": "str",
            "(145, 150)": "int",
            "(122, 126)": "str"
        }
    ],
    [
        "items, item = 'bfreratrrbdbzagbretaredtroefcoiqrrneaosf'.split('-'), 'n'\nwhile items[-1] == item:\n    items.pop()\nitems.append(item)\nf = len(items)",
        "2",
        {},
        {
            "(127, 131)": "str",
            "(137, 140)": "builtin_function_or_method",
            "(141, 146)": "list",
            "(114, 119)": "list"
        }
    ],
    [
        "nums = [-6, -5, -7, -8, 2]\ncount = len(nums)\nfor num in range(2, count):\n    nums.sort()\nf = nums",
        "[-8, -7, -6, -5, 2]",
        {},
        {
            "(93, 97)": "list",
            "(35, 38)": "builtin_function_or_method",
            "(39, 43)": "list",
            "(56, 61)": "type",
            "(65, 70)": "int",
            "(77, 81)": "list"
        }
    ],
    [
        "text = ',wPzPppdl/'\nout = \"\"\nfor i in range(len(text)):\n    if text[i].isupper():\n        out += text[i].lower()\n    else:\n        out += text[i].upper()\nf = out",
        "',WpZpPPDL/'",
        {},
        {
            "(158, 161)": "str",
            "(38, 43)": "type",
            "(44, 47)": "builtin_function_or_method",
            "(48, 52)": "str",
            "(63, 67)": "str",
            "(68, 69)": "int",
            "(97, 101)": "str",
            "(102, 103)": "int",
            "(138, 142)": "str",
            "(143, 144)": "int"
        }
    ],
    [
        "text, separator = 'dga nqdk\\rull qcha kl', 1\nsplitted = text.splitlines()\nif separator:\n    f = [' '.join(s) for s in splitted]\nelse:\n    f = splitted",
        "['d g a   n q d k', 'u l l   q c h a   k l']",
        {
            "(77, 86)": "True\n"
        },
        {
            "(77, 86)": "int",
            "(56, 60)": "str",
            "(118, 126)": "list"
        }
    ],
    [
        "text, function = \"010100\", \"010\"\ncites = [len(text[text.index(function) + len(function):])]\nfor char in text:\n    if char == function:\n        cites.append(len(text[text.index(function) + len(function):]))\nf = cites",
        "[3]",
        {},
        {
            "(104, 108)": "str",
            "(210, 215)": "list",
            "(42, 45)": "builtin_function_or_method",
            "(46, 50)": "str",
            "(62, 70)": "str",
            "(74, 77)": "builtin_function_or_method",
            "(78, 86)": "str",
            "(51, 55)": "str"
        }
    ],
    [
        "text = \"mrq7y\"\nresult_list = ['3', '3', '3', '3']\nif result_list:\n    result_list.clear()\nf = len(text)",
        "5",
        {
            "(53, 64)": "True\n"
        },
        {
            "(53, 64)": "list",
            "(94, 97)": "builtin_function_or_method",
            "(98, 102)": "str",
            "(70, 81)": "list"
        }
    ],
    [
        "text = \"jcle oq wsnibktxpiozyxmopqkfnrfjds\"\nws = 0\nfor s in text:\n    if s.isspace():\n        ws += 1\nf = ws, len(text)",
        "(2, 34)",
        {},
        {
            "(60, 64)": "str",
            "(106, 108)": "int",
            "(110, 113)": "builtin_function_or_method",
            "(114, 118)": "str",
            "(73, 74)": "str"
        }
    ],
    [
        "text = 'ru'\nresult = []\nfor i, ch in enumerate(text):\n    if ch == ch.lower():\n        continue\n    if len(text) - 1 - i < text.rindex(ch.lower()):\n        result.append(ch)\nf = ''.join(result)",
        "''",
        {},
        {
            "(37, 46)": "type",
            "(47, 51)": "str",
            "(186, 192)": "list",
            "(61, 63)": "str",
            "(67, 69)": "str"
        }
    ],
    [
        "s1, s2 = 'abcdefghabc', 'abc'\nres = []\ni = s1.rfind(s2)\nwhile i != -1:\n    res.append(i+len(s2)-1)\n    i = s1.rfind(s2, 0, i)\nf = res",
        "[10, 2]",
        {},
        {
            "(130, 133)": "list",
            "(52, 54)": "str",
            "(62, 63)": "int",
            "(43, 45)": "str",
            "(116, 118)": "str",
            "(123, 124)": "int",
            "(75, 78)": "list",
            "(107, 109)": "str",
            "(86, 87)": "int",
            "(88, 91)": "builtin_function_or_method",
            "(92, 94)": "str"
        }
    ],
    [
        "text = \"wys silak v5 e4fi rotbi fwj 78 wigf t8s lcl\"\nm = 0\ncnt = 0\nfor i in text.split():\n    if len(i) > m:\n        cnt += 1\n        m = len(i)\nf = cnt",
        "2",
        {},
        {
            "(149, 152)": "int",
            "(76, 80)": "str",
            "(106, 107)": "int",
            "(97, 100)": "builtin_function_or_method",
            "(101, 102)": "str",
            "(138, 141)": "builtin_function_or_method",
            "(142, 143)": "str"
        }
    ],
    [
        "text, use = 'Chris requires a ride to the airport on Friday.', 'a'\nf = text.replace(use, '')",
        "'Chris requires  ride to the irport on Fridy.'",
        {},
        {
            "(84, 87)": "str",
            "(71, 75)": "str"
        }
    ],
    [
        "char_freq = {'u': 20, 'v': 5, 'b': 7, 'w': 3, 'x': 3}\nresult = {}\nfor k, v in char_freq.copy().items():\n    result[k] = v // 2\nf = result",
        "{'u': 10, 'v': 2, 'b': 3, 'w': 1, 'x': 1}",
        {},
        {
            "(131, 137)": "dict",
            "(108, 114)": "dict",
            "(115, 116)": "str",
            "(120, 121)": "int",
            "(78, 87)": "dict"
        }
    ],
    [
        "text = 'n'\nlength = len(text) // 2\nleft_half = text[:length]\nright_half = text[length:][::-1]\nf = left_half + right_half",
        "'n'",
        {},
        {
            "(47, 51)": "str",
            "(98, 107)": "str",
            "(110, 120)": "str",
            "(20, 23)": "builtin_function_or_method",
            "(24, 28)": "str",
            "(53, 59)": "int",
            "(74, 78)": "str",
            "(79, 85)": "int"
        }
    ],
    [
        "nums = [5, 3, 3, 7]\nfor i in range(len(nums) - 2, -1, -1):\n    if nums[i] % 2 == 0:\n        nums.remove(nums[i])\nf = nums",
        "[5, 3, 3, 7]",
        {},
        {
            "(117, 121)": "list",
            "(29, 34)": "type",
            "(35, 38)": "builtin_function_or_method",
            "(39, 43)": "list"
        }
    ],
    [
        "sentence = '(A (b B))'\nif sentence == '':\n    f = ''\nsentence = sentence.replace('(', '')\nsentence = sentence.replace(')', '')\nf = sentence.capitalize().replace(' ', '')",
        "'Abb'",
        {},
        {
            "(64, 72)": "str",
            "(101, 109)": "str",
            "(131, 139)": "str"
        }
    ],
    [
        "text, insert = 'pi wa', 'chi'\nwhitespaces = {'\\t', '\\r', '\\v', ' ', '\\f', '\\n'}\nclean = ''\nfor char in text:\n    if char in whitespaces:\n        clean += insert\n    else:\n        clean += char\nf = clean",
        "'pichiwa'",
        {},
        {
            "(103, 107)": "str",
            "(197, 202)": "str",
            "(116, 120)": "str",
            "(124, 135)": "set",
            "(154, 160)": "str",
            "(188, 192)": "str"
        }
    ],
    [
        "nums = [0, 6, 2, -1, -2]\ncounts = 0\nfor i in nums:\n    if str(i).isdecimal():\n        if counts == 0:\n            counts += 1\nf = counts",
        "1",
        {},
        {
            "(45, 49)": "list",
            "(130, 136)": "int",
            "(89, 95)": "int",
            "(58, 61)": "type",
            "(62, 63)": "int"
        }
    ],
    [
        "text, characters = \"r;r;r;r;r;r;r;r;r\", \"x.r\"\nfor i in range(len(characters)):\n    text = text.rstrip(characters[i::len(characters)])\nf = text",
        "'r;r;r;r;r;r;r;r;'",
        {},
        {
            "(138, 142)": "str",
            "(55, 60)": "type",
            "(61, 64)": "builtin_function_or_method",
            "(65, 75)": "str",
            "(90, 94)": "str",
            "(102, 112)": "str",
            "(113, 114)": "int",
            "(116, 119)": "builtin_function_or_method",
            "(120, 130)": "str"
        }
    ],
    [
        "st, pattern = 'qwbnjrxs', ['jr', 'b', 'r', 'qw']\nfor p in pattern:\n    if not st.startswith(p): f = False\n    st = st[len(p):]\nf = True",
        "False",
        {},
        {
            "(58, 65)": "list",
            "(115, 117)": "str",
            "(92, 93)": "str",
            "(78, 80)": "str",
            "(118, 121)": "builtin_function_or_method",
            "(122, 123)": "str"
        }
    ],
    [
        "plot, delin = [1, 2, 3, 4], 3\nif delin in plot:\n    split = plot.index(delin)\n    first = plot[:split]\n    second = plot[split + 1:]\n    f = first + second\nelse:\n    f = plot",
        "[1, 2, 4]",
        {
            "(33, 46)": "True\n"
        },
        {
            "(33, 38)": "int",
            "(42, 46)": "list",
            "(71, 76)": "int",
            "(90, 94)": "list",
            "(116, 120)": "list",
            "(141, 146)": "list",
            "(149, 155)": "list",
            "(60, 64)": "list",
            "(96, 101)": "int",
            "(121, 126)": "int"
        }
    ],
    [
        "nums, p = [6, 8, 2, 5, 3, 1, 9, 7], 6\nprev_p = p - 1\nif prev_p < 0: prev_p = len(nums) - 1\nf = nums[prev_p]",
        "1",
        {
            "(56, 66)": "False\n"
        },
        {
            "(47, 48)": "int",
            "(56, 62)": "int",
            "(95, 99)": "list",
            "(100, 106)": "int",
            "(77, 80)": "builtin_function_or_method",
            "(81, 85)": "list"
        }
    ],
    [
        "text = \"-1-3\"\nb = True\nfor x in text:\n    if x.isdigit():\n        b = True\n    else:\n        b = False\n        break\nf = b",
        "False",
        {},
        {
            "(32, 36)": "str",
            "(121, 122)": "bool",
            "(45, 46)": "str"
        }
    ],
    [
        "text = 'dog,cat'\nstring_a, string_b = text.split(',')\nf = -(len(string_a) + (len(string_b)))",
        "-6",
        {},
        {
            "(38, 42)": "str",
            "(60, 63)": "builtin_function_or_method",
            "(64, 72)": "str",
            "(77, 80)": "builtin_function_or_method",
            "(81, 89)": "str"
        }
    ],
    [
        "text, new_ending = 'jro', 'wdlp'\nresult = list(text)\nresult.extend(new_ending)\nf = ''.join(result)",
        "'jrowdlp'",
        {},
        {
            "(42, 46)": "type",
            "(47, 51)": "str",
            "(67, 77)": "str",
            "(91, 97)": "list",
            "(53, 59)": "list"
        }
    ],
    [
        "address = 'minimc@minimc.io'\nsuffix_start = address.index('@') + 1\nif address[suffix_start:].count('.') > 1:\n    address = address.removesuffix('.'.join(address.split('@')[1].split('.')[:2]))\nf = address",
        "'minimc@minimc.io'",
        {},
        {
            "(196, 203)": "str",
            "(44, 51)": "str"
        }
    ],
    [
        "dct = {}\nvalues = dct.values()\nresult = {}\nfor value in values:\n    item = value.split('.')[0]+'@pinc.uk'\n    result[value] = item\nf = result",
        "{}",
        {},
        {
            "(135, 141)": "dict",
            "(18, 21)": "dict"
        }
    ],
    [
        "text = \"123E-10\"\nif text == '42.42':\n    f = True\nfor i in range(3, len(text) - 3):\n    if text[i] == '.' and text[i - 3:].isdigit() and text[:i].isdigit():\n        f = True\nf = False",
        "False",
        {},
        {
            "(59, 64)": "type",
            "(68, 71)": "builtin_function_or_method",
            "(72, 76)": "str"
        }
    ],
    [
        "d = {'a': 123, 'b': 456, 'c': 789}\ni = iter(d.items())\nf = next(i), next(i)",
        "(('a', 123), ('b', 456))",
        {},
        {
            "(39, 43)": "builtin_function_or_method",
            "(59, 63)": "builtin_function_or_method",
            "(64, 65)": "dict_itemiterator",
            "(68, 72)": "builtin_function_or_method",
            "(73, 74)": "dict_itemiterator",
            "(44, 45)": "dict"
        }
    ],
    [
        "text, width = 'l\\nl', 2\nresult = \"\"\nlines = text.split('\\n')\nfor l in lines:\n    result += l.center(width)\n    result += '\\n'\n\n# Remove the very last empty line\nresult = result[:-1]\nf = result",
        "'l \\nl '",
        {},
        {
            "(70, 75)": "list",
            "(186, 192)": "str",
            "(170, 176)": "str",
            "(44, 48)": "str",
            "(100, 105)": "int",
            "(91, 92)": "str"
        }
    ],
    [
        "char_map, text = {}, 'hbd'\nnew_text = ''\nfor ch in text:\n    val = char_map.get(ch)\n    if val is None:\n        new_text += ch\n    else:\n        new_text += val\nf = new_text",
        "'hbd'",
        {},
        {
            "(51, 55)": "str",
            "(165, 173)": "str",
            "(80, 82)": "str",
            "(91, 94)": "NoneType",
            "(124, 126)": "str",
            "(67, 75)": "dict"
        }
    ],
    [
        "text, char, min_count = \"wwwwhhhtttpp\", 'w', 3\ncount = text.count(char)\nif count < min_count:\n    f = text.swapcase()\nf = text",
        "'wwwwhhhtttpp'",
        {},
        {
            "(122, 126)": "str",
            "(66, 70)": "str",
            "(55, 59)": "str"
        }
    ],
    [
        "s, amount = 'abc', 8\nf = (amount - len(s)) * 'z' + s",
        "'zzzzzabc'",
        {},
        {
            "(51, 52)": "str",
            "(26, 32)": "int",
            "(35, 38)": "builtin_function_or_method",
            "(39, 40)": "str"
        }
    ],
    [
        "bag = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0}\nvalues = list(bag.values())\ntbl = {}\nfor v in range(100):\n    if v in values:\n        tbl[v] = values.count(v)\nf = tbl",
        "{0: 5}",
        {},
        {
            "(152, 155)": "dict",
            "(46, 50)": "type",
            "(83, 88)": "type",
            "(102, 103)": "int",
            "(107, 113)": "list",
            "(51, 54)": "dict",
            "(123, 126)": "dict",
            "(127, 128)": "int",
            "(145, 146)": "int",
            "(132, 138)": "list"
        }
    ],
    [
        "nums = ['1', '2', '2', '44', '0', '7', '20257']\nnums = ['{0:{fill}>{width}}'.format(val, **{'fill': '0', 'width': nums[0]}) for val in nums[1:]]\nf = [str(val) for val in nums]",
        "['2', '2', '44', '0', '7', '20257']",
        {},
        {
            "(150, 153)": "type",
            "(170, 174)": "list",
            "(135, 139)": "list",
            "(114, 118)": "list"
        }
    ],
    [
        "replace, text, hide = '###', \"ph>t#A#BiEcDefW#ON#iiNCU\", '.'\nwhile hide in text:\n    replace += 'ax'\n    text = text.replace(hide, replace, 1)\nf = text",
        "'ph>t#A#BiEcDefW#ON#iiNCU'",
        {},
        {
            "(147, 151)": "str"
        }
    ],
    [
        "text, char, replace = 'a1a8', '1', 'n2'\nf = text.replace(char, replace)",
        "'an2a8'",
        {},
        {
            "(57, 61)": "str",
            "(63, 70)": "str",
            "(44, 48)": "str"
        }
    ],
    [
        "text, sub = 'egmdartoa', 'good'\nindex = []\nstarting = 0\nwhile starting != -1:\n    starting = text.find(sub, starting)\n    if starting != -1:\n        index.append(starting)\n        starting += len(sub)\nf = index",
        "[]",
        {},
        {
            "(205, 210)": "list",
            "(62, 70)": "int",
            "(103, 106)": "str",
            "(108, 116)": "int",
            "(93, 97)": "str"
        }
    ],
    [
        "d = dict(f = 1, h = 2, j = 3, k = 4)\nl = []\nwhile len(d) > 0:\n    key = d.popitem()[0]\n    l.append(key)\nf = l;",
        "['k', 'j', 'h', 'f']",
        {},
        {
            "(109, 110)": "list",
            "(4, 8)": "type",
            "(50, 53)": "builtin_function_or_method",
            "(54, 55)": "dict",
            "(100, 103)": "str",
            "(91, 92)": "list",
            "(72, 73)": "dict"
        }
    ],
    [
        "array = []\noutput = array.copy()\noutput[0::2] = output[-1::-2]\noutput.reverse()\nf = output",
        "[]",
        {},
        {
            "(84, 90)": "list",
            "(33, 39)": "list",
            "(48, 54)": "list",
            "(20, 25)": "list",
            "(63, 69)": "list"
        }
    ],
    [
        "text = 'this And cPanel'\ntext = text.lower()\ncapitalize = text.capitalize()\nf = text[:1] + capitalize[1:]",
        "'this and cpanel'",
        {},
        {
            "(32, 36)": "str",
            "(58, 62)": "str",
            "(80, 84)": "str",
            "(91, 101)": "str"
        }
    ],
    [
        "values, text, markers = '2Pn', 'yCxpg2C2Pny2', ''\nf = text.rstrip(values).rstrip(markers)",
        "'yCxpg2C2Pny'",
        {},
        {
            "(81, 88)": "str",
            "(66, 72)": "str",
            "(54, 58)": "str"
        }
    ],
    [
        "text, old, new = \"some test string\", \"some\", \"any\"\ntext2 = text.replace(old, new)\nold2 = old[::-1]\nwhile old2 in text2:\n    text2 = text2.replace(old2, new)\nf = text2",
        "'any test string'",
        {},
        {
            "(161, 166)": "str",
            "(72, 75)": "str",
            "(77, 80)": "str",
            "(89, 92)": "str",
            "(59, 63)": "str"
        }
    ],
    [
        "text = 'so456'\nf = sum(1 for c in text if c.isdigit())",
        "3",
        {},
        {
            "(19, 22)": "builtin_function_or_method",
            "(34, 38)": "str"
        }
    ],
    [
        "values, value = ['0','3'], 117\nlength = len(values)\nnew_dict = dict.fromkeys(values, value)\nnew_dict[''.join(sorted(values))] = value * 3\nf = new_dict",
        "{'0': 117, '3': 117, '03': 351}",
        {},
        {
            "(142, 150)": "dict",
            "(40, 43)": "builtin_function_or_method",
            "(44, 50)": "list",
            "(77, 83)": "list",
            "(85, 90)": "int",
            "(92, 100)": "dict",
            "(128, 133)": "int",
            "(63, 67)": "type",
            "(109, 115)": "builtin_function_or_method",
            "(116, 122)": "list"
        }
    ],
    [
        "text = \"d khqw whi fwi bbn 41\"\na = text.strip().split(' ')\nfor i in range(len(a)):\n    if a[i].isdigit() is False:\n        f = '-'\nf = \" \".join(a)",
        "'-'",
        {},
        {
            "(68, 73)": "type",
            "(144, 145)": "list",
            "(74, 77)": "builtin_function_or_method",
            "(78, 79)": "list",
            "(35, 39)": "str",
            "(90, 91)": "list",
            "(92, 93)": "int"
        }
    ],
    [
        "text = 'akA?riu'\ntext_list = [char for char in text]\nfor i, char in enumerate(text_list):\n    text_list[i] = char.swapcase()\nf = ''.join(text_list)",
        "'AKa?RIU'",
        {},
        {
            "(68, 77)": "type",
            "(78, 87)": "list",
            "(137, 146)": "list",
            "(47, 51)": "str",
            "(94, 103)": "list",
            "(104, 105)": "int",
            "(109, 113)": "str"
        }
    ],
    [
        "line, char = '$78'.upper(), '$'\ncount = line.count(char)\nfor i in range(count+1, 0, -1):\n    line = line.center(len(line)+i // len(char), char)\nf = line",
        "'$$78$$'",
        {},
        {
            "(148, 152)": "str",
            "(51, 55)": "str",
            "(66, 71)": "type",
            "(40, 44)": "str",
            "(72, 77)": "int",
            "(138, 142)": "str",
            "(100, 104)": "str",
            "(112, 115)": "builtin_function_or_method",
            "(116, 120)": "str",
            "(122, 123)": "int",
            "(127, 130)": "builtin_function_or_method",
            "(131, 135)": "str"
        }
    ],
    [
        "items = (1, 2, 3, 4, 5, 6, 7, 8)\nitems = list(items)\nodd_positioned = []\nwhile len(items) > 0:\n    position = items.index(min(items))\n    items.pop(position)\n    item = items.pop(position)\n    odd_positioned.append(item)\nf = odd_positioned",
        "[2, 4, 6, 8]",
        {},
        {
            "(225, 239)": "list",
            "(41, 45)": "type",
            "(46, 51)": "list",
            "(79, 82)": "builtin_function_or_method",
            "(83, 88)": "list",
            "(148, 156)": "int",
            "(179, 187)": "int",
            "(215, 219)": "int",
            "(110, 115)": "list",
            "(122, 125)": "builtin_function_or_method",
            "(126, 131)": "list",
            "(138, 143)": "list",
            "(169, 174)": "list",
            "(193, 207)": "list"
        }
    ],
    [
        "phrase = 'serjgpoDFdbcA.'\nresult = ''\nfor i in phrase:\n    if not i.islower():\n        result += i\nf = result",
        "'DFA.'",
        {},
        {
            "(47, 53)": "str",
            "(103, 109)": "str",
            "(97, 98)": "str",
            "(66, 67)": "str"
        }
    ],
    [
        "nums, n = [-7, 3, 1, -1, -1, 0, 4], 6\nf = nums.pop(n)",
        "4",
        {},
        {
            "(51, 52)": "int",
            "(42, 46)": "list"
        }
    ],
    [
        "num, name = 23, 'Cornareti'\nf_str = 'quiz leader = {}, count = {}'\nf = f_str.format(name, num)",
        "'quiz leader = Cornareti, count = 23'",
        {},
        {
            "(84, 88)": "str",
            "(90, 93)": "int",
            "(71, 76)": "str"
        }
    ],
    [
        "nums = [2, 6, 1, 3, 1]\ncount = len(nums)\nfor i in range(0, count // 2):\n    nums[i], nums[count-i-1] = nums[count-i-1], nums[i]\nf = nums",
        "[1, 3, 1, 6, 2]",
        {},
        {
            "(132, 136)": "list",
            "(31, 34)": "builtin_function_or_method",
            "(35, 39)": "list",
            "(50, 55)": "type",
            "(59, 64)": "int",
            "(76, 80)": "list",
            "(81, 82)": "int",
            "(85, 89)": "list",
            "(103, 107)": "list",
            "(120, 124)": "list",
            "(125, 126)": "int",
            "(90, 95)": "int",
            "(96, 97)": "int",
            "(108, 113)": "int",
            "(114, 115)": "int"
        }
    ],
    [
        "dictionary = {}\na = dictionary.copy()\nfor key in a:\n    if key%2 != 0:\n        del a[key]\n        a['$'+str(key)] = a[key]\nf = a",
        "{}",
        {},
        {
            "(127, 128)": "dict",
            "(20, 30)": "dict"
        }
    ],
    [
        "names, excluded = [\"avc  a .d e\"], \"\"\nexcluded = excluded\nfor i in range(len(names)):\n    if excluded in names[i]:\n        names[i] = names[i].replace(excluded, \"\")\nf = names",
        "['avc  a .d e']",
        {},
        {
            "(49, 57)": "str",
            "(169, 174)": "list",
            "(67, 72)": "type",
            "(73, 76)": "builtin_function_or_method",
            "(77, 82)": "list",
            "(93, 101)": "str",
            "(105, 110)": "list",
            "(111, 112)": "int",
            "(123, 128)": "list",
            "(129, 130)": "int",
            "(151, 159)": "str",
            "(134, 139)": "list",
            "(140, 141)": "int"
        }
    ],
    [
        "prefix, text = 'mjs', 'mjqwmjsqjwisojqwiso'\nif text.startswith(prefix):\n    f = text\nelse:\n    f = prefix + text",
        "'mjsmjqwmjsqjwisojqwiso'",
        {},
        {
            "(99, 105)": "str",
            "(108, 112)": "str"
        }
    ],
    [
        "text = 'python ruby c javascript'\nvalues = text.split()\nf = '${first}y, ${second}x, ${third}r, ${fourth}p' % dict({\n    'first': values[0],\n    'second': values[1],\n    'third': values[2],\n    'fourth': values[3]\n})",
        "'${first}y, ${second}x, ${third}r, ${fourth}p'",
        {},
        {
            "(43, 47)": "str"
        }
    ],
    [
        "ints = [2, 3, 5, 2, 4, 5, 2, 89]\ncounts = [0] * 301\n\nfor i in ints:\n    counts[i] += 1\n\nr = []\nfor i in range(len(counts)):\n    if counts[i] >= 3:\n        r.append(str(i))\ncounts.clear()\nf = ' '.join(r)",
        "'2'",
        {},
        {
            "(62, 66)": "list",
            "(104, 109)": "type",
            "(200, 201)": "list",
            "(72, 78)": "list",
            "(79, 80)": "int",
            "(110, 113)": "builtin_function_or_method",
            "(114, 120)": "list",
            "(172, 178)": "list",
            "(131, 137)": "list",
            "(138, 139)": "int",
            "(155, 156)": "list",
            "(164, 167)": "type",
            "(168, 169)": "int"
        }
    ],
    [
        "s, ch = 'shivajimonto6', '6'\nif ch not in s:\n    f = ''\ns = s.partition(ch)[2][::-1]\nfor i in range(len(s)):\n    s = s.partition(ch)[2][::-1]\nf = s",
        "''",
        {},
        {
            "(146, 147)": "str",
            "(72, 74)": "str",
            "(60, 61)": "str"
        }
    ],
    [
        "input = \"a j c n x X k\"\nfor char in input:\n    if char.isupper():\n        f = False\nf = True",
        "False",
        {},
        {
            "(36, 41)": "str",
            "(50, 54)": "str"
        }
    ],
    [
        "text, comparison = \"managed\", \"\"\nlength = len(comparison)\nif length <= len(text):\n    for i in range(length):\n        if comparison[length - i - 1] != text[len(text) - i - 1]:\n            f = i\nf = length",
        "0",
        {
            "(61, 80)": "True\n"
        },
        {
            "(198, 204)": "int",
            "(42, 45)": "builtin_function_or_method",
            "(46, 56)": "str",
            "(61, 67)": "int",
            "(71, 74)": "builtin_function_or_method",
            "(75, 79)": "str"
        }
    ],
    [
        "key, value = 'read', 'Is'\ndict_ = {key: value}\nf = dict.popitem(dict_)",
        "('read', 'Is')",
        {},
        {
            "(35, 38)": "str",
            "(40, 45)": "str",
            "(64, 69)": "dict",
            "(51, 55)": "type"
        }
    ],
    [
        "n = 1\nstreak = ''\nfor c in str(n):\n    streak += c.ljust(int(c) * 2)\nf = streak",
        "'1 '",
        {},
        {
            "(73, 79)": "str",
            "(27, 30)": "type",
            "(31, 32)": "int",
            "(49, 50)": "str",
            "(57, 60)": "type",
            "(61, 62)": "str"
        }
    ],
    [
        "text, letter = '19kefp7', '9'\nif letter in text:\n    start = text.index(letter)\n    f = text[start + 1:] + text[:start + 1]\nf = text",
        "'kefp719'",
        {
            "(33, 47)": "True\n"
        },
        {
            "(128, 132)": "str",
            "(33, 39)": "str",
            "(43, 47)": "str",
            "(72, 78)": "str",
            "(61, 65)": "str",
            "(88, 92)": "str",
            "(107, 111)": "str",
            "(93, 98)": "int",
            "(113, 118)": "int"
        }
    ],
    [
        "text = 'xzd'\nif len(text) == 0:\n    f = ''\ntext = text.lower()\nf = text[0].upper() + text[1:]",
        "'Xzd'",
        {},
        {
            "(50, 54)": "str",
            "(85, 89)": "str",
            "(67, 71)": "str"
        }
    ],
    [
        "text, suffix = 'hello.txt', '/'\nif suffix.startswith(\"/\"):\n    f = text + suffix[1:]\nf = text",
        "'hello.txt'",
        {
            "(35, 57)": "True\n"
        },
        {
            "(89, 93)": "str",
            "(35, 41)": "str",
            "(67, 71)": "str",
            "(74, 80)": "str"
        }
    ],
    [
        "text, n = 'bR', -1\nif n < 0 or len(text) <= n:\n    f = text\nresult = text[0 : n]\ni = len(result) - 1\nwhile i >= 0:\n    if result[i] != text[i]:\n        break\n    i -= 1\nf = text[0 : i + 1]",
        "'bR'",
        {
            "(22, 45)": "True\n"
        },
        {
            "(55, 59)": "str",
            "(69, 73)": "str",
            "(107, 108)": "int",
            "(173, 177)": "str",
            "(22, 23)": "int",
            "(44, 45)": "int",
            "(78, 79)": "int",
            "(85, 88)": "builtin_function_or_method",
            "(89, 95)": "str",
            "(31, 34)": "builtin_function_or_method",
            "(35, 39)": "str",
            "(182, 183)": "int"
        }
    ],
    [
        "d = {'i': 1, 'love': 'parakeets'}\nr = {\n    'c': d.copy(),\n    'd': d.copy()\n}\nf = (r['c'] is r['d'], r['c'] == r['d'])",
        "(False, True)",
        {},
        {
            "(84, 85)": "dict",
            "(94, 95)": "dict",
            "(102, 103)": "dict",
            "(112, 113)": "dict"
        }
    ],
    [
        "integer, n = 8999,2\ni = 1\ntext = str(integer)\nwhile (i+len(text) < n):\n    i += len(text)\nf = text.zfill(i+len(text))",
        "'08999'",
        {},
        {
            "(33, 36)": "type",
            "(37, 44)": "int",
            "(94, 98)": "str",
            "(105, 106)": "int",
            "(107, 110)": "builtin_function_or_method",
            "(111, 115)": "str"
        }
    ],
    [
        "l1, l2 = ['a', 'b'], ['car', 'dog']\nif len(l1) != len(l2):\n    f = {}\nf = dict.fromkeys(l1, l2)",
        "{'a': ['car', 'dog'], 'b': ['car', 'dog']}",
        {},
        {
            "(88, 90)": "list",
            "(92, 94)": "list",
            "(74, 78)": "type"
        }
    ],
    [
        "list, start, end = [1, 2, 4, 3, 2, 1], 0, 3\ncount = 0\nfor i in range(start, end):\n    for j in range(i, end):\n        if list[i] != list[j]:\n            count += 1\nf = count",
        "3",
        {},
        {
            "(168, 173)": "int",
            "(63, 68)": "type",
            "(69, 74)": "int",
            "(76, 79)": "int",
            "(95, 100)": "type",
            "(101, 102)": "int",
            "(104, 107)": "int",
            "(121, 125)": "list",
            "(126, 127)": "int",
            "(132, 136)": "list",
            "(137, 138)": "int"
        }
    ],
    [
        "line = \"\\\"\\\\%$ normal chars $%~ qwet42'\"\na = []\nfor c in line:\n    if c.isalnum():\n        a.append(c)\nf = ''.join(a)",
        "'normalcharsqwet42'",
        {},
        {
            "(57, 61)": "str",
            "(115, 116)": "list",
            "(70, 71)": "str",
            "(100, 101)": "str",
            "(91, 92)": "list"
        }
    ],
    [
        "text = 'Fu,ux zfujijabji pfu.'\nf = text.title().replace('Io', 'io')",
        "'Fu,Ux Zfujijabji Pfu.'",
        {},
        {
            "(35, 39)": "str"
        }
    ],
    [
        "str, toget = 'fnuiyh', 'ni'\nif str.startswith(toget): f = str[len(toget):]\nelse: f = str",
        "'fnuiyh'",
        {
            "(31, 52)": "False\n"
        },
        {
            "(46, 51)": "str",
            "(85, 88)": "str",
            "(31, 34)": "str",
            "(58, 61)": "str",
            "(62, 65)": "builtin_function_or_method",
            "(66, 71)": "str"
        }
    ],
    [
        "dct = {'a': 1, 'b': 2, 'c': 3}\nlst = []\nfor key in sorted(dct):\n    lst.append((key, dct[key]))\nf = lst",
        "[('a', 1), ('b', 2), ('c', 3)]",
        {},
        {
            "(100, 103)": "list",
            "(51, 57)": "builtin_function_or_method",
            "(58, 61)": "dict",
            "(68, 71)": "list",
            "(80, 83)": "str",
            "(85, 88)": "dict",
            "(89, 92)": "str"
        }
    ],
    [
        "text, pre = '@hihu@!', '@hihu'\nif not text.startswith(pre):\n    f = text\nf = text.removeprefix(pre)",
        "'@!'",
        {},
        {
            "(95, 98)": "str",
            "(77, 81)": "str"
        }
    ],
    [
        "st = 'eqe-;ew22'\nif st[0] == '~':\n    e = st.rjust(10, 's')\n    f = f(e)\nelse:\n    f = st.rjust(10, 'n')",
        "'neqe-;ew22'",
        {},
        {
            "(87, 89)": "str"
        }
    ]
]